=== GRAPH ===
n_nodes = 1317
 -   0: [  2560,     1,     1]         GET_ROWS   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   1: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   2: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   3: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   4: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   5: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   6: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   7: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   8: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   9: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  10: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  11: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  12: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  13: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  14: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  15: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  16: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  17: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  18: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  19: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  20: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  21: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  22: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  23: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  24: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  25: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  26: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  27: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  28: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  29: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  30: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  31: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  32: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  33: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  34: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  35: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  36: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  37: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  38: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  39: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  40: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  41: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  42: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  43: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  44: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  45: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  46: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  47: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  48: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  49: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  50: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  51: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  52: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  53: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  54: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  55: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  56: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  57: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  58: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  59: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  60: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  61: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  62: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  63: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  64: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  65: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  66: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  67: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  68: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  69: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  70: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  71: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  72: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  73: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  74: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  75: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  76: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  77: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  78: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  79: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  80: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  81: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  82: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  83: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  84: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  85: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  86: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  87: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  88: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  89: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  90: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  91: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  92: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  93: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  94: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  95: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  96: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  97: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  98: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  99: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 100: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 102: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 103: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 104: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 105: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 106: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 107: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 108: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 109: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 110: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 111: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 112: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 113: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 114: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 115: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 116: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 117: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 118: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 119: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 120: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 121: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 122: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 123: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 124: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 125: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 127: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 128: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 129: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 130: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 131: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 132: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 133: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 134: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 135: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 136: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 137: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 138: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 139: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 140: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 141: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 143: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 144: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 145: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 146: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 147: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 148: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 149: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 150: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 151: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 152: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 153: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 154: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 155: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 156: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 157: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 158: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 159: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 160: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 161: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 162: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 163: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 164: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 165: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 166: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 168: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 169: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 170: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 171: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 172: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 173: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 174: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 175: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 176: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 177: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 178: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 179: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 180: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 181: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 182: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 184: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 185: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 186: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 187: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 188: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 189: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 190: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 191: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 192: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 193: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 194: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 195: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 196: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 197: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 198: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 199: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 200: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 201: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 202: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 203: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 204: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 205: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 206: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 207: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 209: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 210: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 211: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 212: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 213: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 214: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 215: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 216: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 217: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 218: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 219: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 220: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 221: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 222: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 223: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 225: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 226: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 227: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 228: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 229: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 230: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 231: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 232: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 233: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 234: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 235: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 236: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 237: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 238: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 239: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 240: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 241: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 242: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 243: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 244: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 245: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 246: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 247: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 248: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 250: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 251: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 252: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 253: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 254: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 255: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 256: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 257: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 258: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 259: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 260: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 261: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 262: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 263: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 264: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 266: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 267: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 268: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 269: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 270: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 271: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 272: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 273: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 274: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 275: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 276: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 277: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 278: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 279: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 280: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 281: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 282: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 283: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 284: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 285: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 286: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 287: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 288: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 289: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 291: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 292: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 293: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 294: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 295: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 296: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 297: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 298: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 299: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 300: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 301: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 302: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 303: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 304: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 305: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 307: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 308: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 309: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 310: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 311: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 312: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 313: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 314: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 315: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 316: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 317: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 318: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 319: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 320: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 321: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 322: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 323: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 324: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 325: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 326: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 327: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 328: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 329: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 330: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 331: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 332: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 333: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 334: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 335: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 336: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 337: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 338: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 339: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 340: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 341: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 342: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 343: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 344: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 345: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 346: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 347: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 348: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 349: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 350: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 351: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 352: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 353: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 354: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 355: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 356: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 357: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 358: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 359: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 360: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 361: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 362: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 363: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 364: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 365: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 366: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 367: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 368: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 369: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 370: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 371: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 372: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 373: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 374: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 375: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 376: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 377: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 378: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 379: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 380: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 381: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 382: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 383: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 384: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 385: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 386: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 387: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 388: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 389: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 390: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 391: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 392: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 393: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 394: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 395: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 396: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 397: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 398: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 399: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 400: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 401: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 402: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 403: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 404: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 405: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 406: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 407: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 408: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 409: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 410: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 411: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 412: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 413: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 414: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 415: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 416: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 417: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 418: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 419: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 420: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 421: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 422: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 423: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 424: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 425: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 426: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 427: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 428: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 429: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 430: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 431: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 432: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 433: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 434: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 435: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 436: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 437: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 438: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 439: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 440: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 441: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 442: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 443: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 444: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 445: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 446: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 447: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 448: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 449: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 450: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 451: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 452: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 453: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 454: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 455: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 456: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 457: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 458: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 459: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 460: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 461: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 462: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 463: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 464: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 465: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 466: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 467: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 468: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 469: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 470: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 471: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 472: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 473: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 474: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 475: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 476: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 477: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 478: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 479: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 480: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 481: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 482: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 483: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 484: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 485: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 486: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 487: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 488: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 489: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 490: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 491: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 492: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 493: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 494: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 495: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 496: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 497: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 498: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 499: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 500: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 501: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 502: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 503: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 504: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 505: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 506: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 507: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 508: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 509: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 510: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 511: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 512: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 513: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 514: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 515: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 516: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 517: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 518: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 519: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 520: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 521: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 522: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 523: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 524: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 525: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 526: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 527: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 528: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 529: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 530: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 531: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 532: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 533: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 534: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 535: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 536: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 537: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 538: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 539: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 540: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 541: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 542: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 543: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 544: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 545: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 546: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 547: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 548: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 549: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 550: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 551: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 552: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 553: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 554: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 555: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 556: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 557: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 558: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 559: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 560: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 561: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 562: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 563: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 564: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 565: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 566: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 567: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 568: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 569: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 570: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 571: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 572: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 573: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 574: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 575: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 576: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 577: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 578: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 579: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 580: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 581: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 582: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 583: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 584: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 585: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 586: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 587: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 588: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 589: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 590: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 591: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 592: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 593: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 594: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 595: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 596: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 597: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 598: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 599: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 600: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 601: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 602: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 603: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 604: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 605: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 606: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 607: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 608: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 609: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 610: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 611: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 612: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 613: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 614: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 615: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 616: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 617: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 618: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 619: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 620: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 621: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 622: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 623: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 624: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 625: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 626: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 627: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 628: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 629: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 630: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 631: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 632: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 633: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 634: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 635: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 636: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 637: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 638: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 639: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 640: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 641: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 642: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 643: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 644: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 645: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 646: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 647: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 648: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 649: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 650: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 651: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 652: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 653: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 654: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 655: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 656: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 657: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 658: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 659: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 660: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 661: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 662: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 663: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 664: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 665: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 666: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 667: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 668: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 669: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 670: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 671: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 672: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 673: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 674: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 675: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 676: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 677: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 678: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 679: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 680: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 681: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 682: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 683: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 684: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 685: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 686: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 687: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 688: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 689: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 690: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 691: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 692: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 693: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 694: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 695: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 696: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 697: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 698: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 699: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 700: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 701: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 702: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 703: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 704: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 705: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 706: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 707: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 708: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 709: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 710: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 711: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 712: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 713: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 714: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 715: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 716: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 717: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 718: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 719: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 720: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 721: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 722: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 723: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 724: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 725: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 726: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 727: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 728: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 729: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 730: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 731: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 732: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 733: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 734: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 735: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 736: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 737: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 738: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 739: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 740: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 741: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 742: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 743: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 744: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 745: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 746: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 747: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 748: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 749: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 750: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 751: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 752: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 753: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 754: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 755: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 756: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 757: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 758: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 759: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 760: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 761: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 762: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 763: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 764: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 765: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 766: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 767: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 768: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 769: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 770: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 771: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 772: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 773: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 774: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 775: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 776: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 777: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 778: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 779: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 780: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 781: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 782: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 783: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 784: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 785: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 786: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 787: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 788: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 789: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 790: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 791: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 792: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 793: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 794: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 795: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 796: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 797: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 798: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 799: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 800: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 801: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 802: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 803: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 804: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 805: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 806: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 807: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 808: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 809: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 810: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 811: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 812: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 813: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 814: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 815: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 816: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 817: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 818: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 819: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 820: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 821: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 822: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 823: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 824: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 825: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 826: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 827: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 828: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 829: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 830: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 831: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 832: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 833: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 834: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 835: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 836: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 837: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 838: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 839: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 840: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 841: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 842: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 843: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 844: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 845: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 846: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 847: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 848: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 849: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 850: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 851: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 852: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 853: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 854: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 855: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 856: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 857: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 858: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 859: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 860: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 861: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 862: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 863: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 864: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 865: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 866: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 867: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 868: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 869: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 870: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 871: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 872: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 873: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 874: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 875: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 876: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 877: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 878: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 879: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 880: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 881: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 882: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 883: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 884: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 885: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 886: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 887: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 888: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 889: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 890: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 891: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 892: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 893: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 894: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 895: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 896: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 897: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 898: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 899: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 900: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 901: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 902: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 903: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 904: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 905: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 906: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 907: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 908: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 909: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 910: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 911: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 912: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 913: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 914: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 915: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 916: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 917: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 918: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 919: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 920: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 921: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 922: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 923: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 924: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 925: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 926: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 927: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 928: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 929: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 930: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 931: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 932: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 933: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 934: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 935: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 936: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 937: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 938: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 939: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 940: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 941: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 942: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 943: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 944: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 945: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 946: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 947: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 948: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 949: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 950: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 951: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 952: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 953: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 954: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 955: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 956: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 957: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 958: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 959: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 960: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 961: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 962: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 963: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 964: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 965: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 966: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 967: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 968: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 969: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 970: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 971: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 972: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 973: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 974: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 975: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 976: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 977: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 978: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 979: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 980: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 981: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 982: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 983: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 984: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 985: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 986: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 987: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 988: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 989: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 990: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 991: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 992: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 993: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 994: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 995: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 996: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 997: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 998: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 999: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1000: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1001: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1002: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1003: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1004: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1005: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1006: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1007: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1008: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1009: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1010: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1011: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1012: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1013: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1014: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1015: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1016: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1017: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1018: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1019: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1020: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1021: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1022: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1023: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1024: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1025: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1026: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1027: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1028: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1029: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1030: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1031: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1032: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1033: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1034: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1035: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1036: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1037: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1038: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1039: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1040: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1041: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1042: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1043: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1044: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1045: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1046: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1047: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1048: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1049: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1050: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1051: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1052: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1053: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1054: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1055: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1056: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1057: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1058: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1059: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1060: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1061: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1062: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1063: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1064: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1065: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1066: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1067: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1068: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1069: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1070: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1071: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1072: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1073: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1074: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1075: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1076: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1077: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1078: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1079: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1080: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1081: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1082: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1083: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1084: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1085: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1086: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1087: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1088: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1089: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1090: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1091: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1092: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1093: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1094: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1095: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1096: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1097: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1098: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1099: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1100: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1102: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1103: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1104: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1105: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1106: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1107: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1108: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1109: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1110: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1111: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1112: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1113: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1114: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1115: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1116: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1117: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1118: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1119: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1120: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1121: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1122: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1123: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1124: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1125: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1127: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1128: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1129: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1130: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1131: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1132: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1133: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1134: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1135: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1136: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1137: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1138: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1139: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1140: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1141: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1143: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1144: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1145: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1146: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1147: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1148: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1149: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1150: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1151: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1152: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1153: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1154: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1155: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1156: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1157: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1158: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1159: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1160: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1161: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1162: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1163: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1164: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1165: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1166: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1168: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1169: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1170: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1171: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1172: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1173: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1174: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1175: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1176: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1177: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1178: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1179: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1180: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1181: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1182: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1184: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1185: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1186: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1187: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1188: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1189: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1190: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1191: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1192: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1193: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1194: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1195: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1196: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1197: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1198: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1199: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1200: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1201: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1202: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1203: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1204: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1205: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1206: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1207: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1209: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1210: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1211: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1212: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1213: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1214: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1215: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1216: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1217: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1218: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1219: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1220: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1221: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1222: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1223: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1225: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1226: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1227: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1228: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1229: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1230: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1231: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1232: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1233: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1234: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1235: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1236: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1237: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1238: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1239: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1240: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1241: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1242: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1243: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1244: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1245: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1246: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1247: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1248: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1250: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1251: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1252: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1253: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1254: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1255: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1256: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1257: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1258: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1259: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1260: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1261: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1262: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1263: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1264: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1266: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1267: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1268: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1269: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1270: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1271: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1272: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1273: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1274: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1275: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1276: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1277: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1278: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1279: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1280: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1281: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1282: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1283: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1284: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1285: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1286: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1287: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1288: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1289: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1291: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1292: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1293: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1294: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1295: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1296: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1297: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1298: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1299: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1300: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1301: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1302: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1303: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1304: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1305: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1307: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1308: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1309: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1310: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1311: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1312: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1313: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1314: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1315: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1316: [ 102400,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
n_leafs = 552
 -   0: [  2560,  2560]     NONE
 -   1: [  2560,     1]     NONE
 -   2: [  2560, 102400]     NONE
 -   3: [     1,     1]     NONE
 -   4: [  2560,     1]     NONE
 -   5: [  2560,     1]     NONE
 -   6: [ 41943040,     1]     NONE
 -   7: [  2560,  2560]     NONE
 -   8: [  2560,     1]     NONE
 -   9: [ 41943040,     1]     NONE
 -  10: [  2560,  2560]     NONE
 -  11: [  2560,     1]     NONE
 -  12: [ 10240,  2560]     NONE
 -  13: [  2560, 10240]     NONE
 -  14: [  2560,     1]     NONE
 -  15: [  2560,  2560]     NONE
 -  16: [  2560,  2560]     NONE
 -  17: [  2560,     1]     NONE
 -  18: [     1,     1]     NONE
 -  19: [  2560,     1]     NONE
 -  20: [  2560,     1]     NONE
 -  21: [  2560,     1]     NONE
 -  22: [ 10240,     1]     NONE
 -  23: [  2560,     1]     NONE
 -  24: [  2560,     1]     NONE
 -  25: [  2560,     1]     NONE
 -  26: [  2560,  2560]     NONE
 -  27: [  2560,     1]     NONE
 -  28: [  2560,  2560]     NONE
 -  29: [  2560,     1]     NONE
 -  30: [ 10240,  2560]     NONE
 -  31: [  2560, 10240]     NONE
 -  32: [  2560,     1]     NONE
 -  33: [  2560,  2560]     NONE
 -  34: [  2560,  2560]     NONE
 -  35: [  2560,     1]     NONE
 -  36: [  2560,     1]     NONE
 -  37: [  2560,     1]     NONE
 -  38: [  2560,     1]     NONE
 -  39: [ 10240,     1]     NONE
 -  40: [  2560,     1]     NONE
 -  41: [  2560,     1]     NONE
 -  42: [  2560,     1]     NONE
 -  43: [  2560,  2560]     NONE
 -  44: [  2560,     1]     NONE
 -  45: [  2560,  2560]     NONE
 -  46: [  2560,     1]     NONE
 -  47: [ 10240,  2560]     NONE
 -  48: [  2560, 10240]     NONE
 -  49: [  2560,     1]     NONE
 -  50: [  2560,  2560]     NONE
 -  51: [  2560,  2560]     NONE
 -  52: [  2560,     1]     NONE
 -  53: [  2560,     1]     NONE
 -  54: [  2560,     1]     NONE
 -  55: [  2560,     1]     NONE
 -  56: [ 10240,     1]     NONE
 -  57: [  2560,     1]     NONE
 -  58: [  2560,     1]     NONE
 -  59: [  2560,     1]     NONE
 -  60: [  2560,  2560]     NONE
 -  61: [  2560,     1]     NONE
 -  62: [  2560,  2560]     NONE
 -  63: [  2560,     1]     NONE
 -  64: [ 10240,  2560]     NONE
 -  65: [  2560, 10240]     NONE
 -  66: [  2560,     1]     NONE
 -  67: [  2560,  2560]     NONE
 -  68: [  2560,  2560]     NONE
 -  69: [  2560,     1]     NONE
 -  70: [  2560,     1]     NONE
 -  71: [  2560,     1]     NONE
 -  72: [  2560,     1]     NONE
 -  73: [ 10240,     1]     NONE
 -  74: [  2560,     1]     NONE
 -  75: [  2560,     1]     NONE
 -  76: [  2560,     1]     NONE
 -  77: [  2560,  2560]     NONE
 -  78: [  2560,     1]     NONE
 -  79: [  2560,  2560]     NONE
 -  80: [  2560,     1]     NONE
 -  81: [ 10240,  2560]     NONE
 -  82: [  2560, 10240]     NONE
 -  83: [  2560,     1]     NONE
 -  84: [  2560,  2560]     NONE
 -  85: [  2560,  2560]     NONE
 -  86: [  2560,     1]     NONE
 -  87: [  2560,     1]     NONE
 -  88: [  2560,     1]     NONE
 -  89: [  2560,     1]     NONE
 -  90: [ 10240,     1]     NONE
 -  91: [  2560,     1]     NONE
 -  92: [  2560,     1]     NONE
 -  93: [  2560,     1]     NONE
 -  94: [  2560,  2560]     NONE
 -  95: [  2560,     1]     NONE
 -  96: [  2560,  2560]     NONE
 -  97: [  2560,     1]     NONE
 -  98: [ 10240,  2560]     NONE
 -  99: [  2560, 10240]     NONE
 - 100: [  2560,     1]     NONE
 - 101: [  2560,  2560]     NONE
 - 102: [  2560,  2560]     NONE
 - 103: [  2560,     1]     NONE
 - 104: [  2560,     1]     NONE
 - 105: [  2560,     1]     NONE
 - 106: [  2560,     1]     NONE
 - 107: [ 10240,     1]     NONE
 - 108: [  2560,     1]     NONE
 - 109: [  2560,     1]     NONE
 - 110: [  2560,     1]     NONE
 - 111: [  2560,  2560]     NONE
 - 112: [  2560,     1]     NONE
 - 113: [  2560,  2560]     NONE
 - 114: [  2560,     1]     NONE
 - 115: [ 10240,  2560]     NONE
 - 116: [  2560, 10240]     NONE
 - 117: [  2560,     1]     NONE
 - 118: [  2560,  2560]     NONE
 - 119: [  2560,  2560]     NONE
 - 120: [  2560,     1]     NONE
 - 121: [  2560,     1]     NONE
 - 122: [  2560,     1]     NONE
 - 123: [  2560,     1]     NONE
 - 124: [ 10240,     1]     NONE
 - 125: [  2560,     1]     NONE
 - 126: [  2560,     1]     NONE
 - 127: [  2560,     1]     NONE
 - 128: [  2560,  2560]     NONE
 - 129: [  2560,     1]     NONE
 - 130: [  2560,  2560]     NONE
 - 131: [  2560,     1]     NONE
 - 132: [ 10240,  2560]     NONE
 - 133: [  2560, 10240]     NONE
 - 134: [  2560,     1]     NONE
 - 135: [  2560,  2560]     NONE
 - 136: [  2560,  2560]     NONE
 - 137: [  2560,     1]     NONE
 - 138: [  2560,     1]     NONE
 - 139: [  2560,     1]     NONE
 - 140: [  2560,     1]     NONE
 - 141: [ 10240,     1]     NONE
 - 142: [  2560,     1]     NONE
 - 143: [  2560,     1]     NONE
 - 144: [  2560,     1]     NONE
 - 145: [  2560,  2560]     NONE
 - 146: [  2560,     1]     NONE
 - 147: [  2560,  2560]     NONE
 - 148: [  2560,     1]     NONE
 - 149: [ 10240,  2560]     NONE
 - 150: [  2560, 10240]     NONE
 - 151: [  2560,     1]     NONE
 - 152: [  2560,  2560]     NONE
 - 153: [  2560,  2560]     NONE
 - 154: [  2560,     1]     NONE
 - 155: [  2560,     1]     NONE
 - 156: [  2560,     1]     NONE
 - 157: [  2560,     1]     NONE
 - 158: [ 10240,     1]     NONE
 - 159: [  2560,     1]     NONE
 - 160: [  2560,     1]     NONE
 - 161: [  2560,     1]     NONE
 - 162: [  2560,  2560]     NONE
 - 163: [  2560,     1]     NONE
 - 164: [  2560,  2560]     NONE
 - 165: [  2560,     1]     NONE
 - 166: [ 10240,  2560]     NONE
 - 167: [  2560, 10240]     NONE
 - 168: [  2560,     1]     NONE
 - 169: [  2560,  2560]     NONE
 - 170: [  2560,  2560]     NONE
 - 171: [  2560,     1]     NONE
 - 172: [  2560,     1]     NONE
 - 173: [  2560,     1]     NONE
 - 174: [  2560,     1]     NONE
 - 175: [ 10240,     1]     NONE
 - 176: [  2560,     1]     NONE
 - 177: [  2560,     1]     NONE
 - 178: [  2560,     1]     NONE
 - 179: [  2560,  2560]     NONE
 - 180: [  2560,     1]     NONE
 - 181: [  2560,  2560]     NONE
 - 182: [  2560,     1]     NONE
 - 183: [ 10240,  2560]     NONE
 - 184: [  2560, 10240]     NONE
 - 185: [  2560,     1]     NONE
 - 186: [  2560,  2560]     NONE
 - 187: [  2560,  2560]     NONE
 - 188: [  2560,     1]     NONE
 - 189: [  2560,     1]     NONE
 - 190: [  2560,     1]     NONE
 - 191: [  2560,     1]     NONE
 - 192: [ 10240,     1]     NONE
 - 193: [  2560,     1]     NONE
 - 194: [  2560,     1]     NONE
 - 195: [  2560,     1]     NONE
 - 196: [  2560,  2560]     NONE
 - 197: [  2560,     1]     NONE
 - 198: [  2560,  2560]     NONE
 - 199: [  2560,     1]     NONE
 - 200: [ 10240,  2560]     NONE
 - 201: [  2560, 10240]     NONE
 - 202: [  2560,     1]     NONE
 - 203: [  2560,  2560]     NONE
 - 204: [  2560,  2560]     NONE
 - 205: [  2560,     1]     NONE
 - 206: [  2560,     1]     NONE
 - 207: [  2560,     1]     NONE
 - 208: [  2560,     1]     NONE
 - 209: [ 10240,     1]     NONE
 - 210: [  2560,     1]     NONE
 - 211: [  2560,     1]     NONE
 - 212: [  2560,     1]     NONE
 - 213: [  2560,  2560]     NONE
 - 214: [  2560,     1]     NONE
 - 215: [  2560,  2560]     NONE
 - 216: [  2560,     1]     NONE
 - 217: [ 10240,  2560]     NONE
 - 218: [  2560, 10240]     NONE
 - 219: [  2560,     1]     NONE
 - 220: [  2560,  2560]     NONE
 - 221: [  2560,  2560]     NONE
 - 222: [  2560,     1]     NONE
 - 223: [  2560,     1]     NONE
 - 224: [  2560,     1]     NONE
 - 225: [  2560,     1]     NONE
 - 226: [ 10240,     1]     NONE
 - 227: [  2560,     1]     NONE
 - 228: [  2560,     1]     NONE
 - 229: [  2560,     1]     NONE
 - 230: [  2560,  2560]     NONE
 - 231: [  2560,     1]     NONE
 - 232: [  2560,  2560]     NONE
 - 233: [  2560,     1]     NONE
 - 234: [ 10240,  2560]     NONE
 - 235: [  2560, 10240]     NONE
 - 236: [  2560,     1]     NONE
 - 237: [  2560,  2560]     NONE
 - 238: [  2560,  2560]     NONE
 - 239: [  2560,     1]     NONE
 - 240: [  2560,     1]     NONE
 - 241: [  2560,     1]     NONE
 - 242: [  2560,     1]     NONE
 - 243: [ 10240,     1]     NONE
 - 244: [  2560,     1]     NONE
 - 245: [  2560,     1]     NONE
 - 246: [  2560,     1]     NONE
 - 247: [  2560,  2560]     NONE
 - 248: [  2560,     1]     NONE
 - 249: [  2560,  2560]     NONE
 - 250: [  2560,     1]     NONE
 - 251: [ 10240,  2560]     NONE
 - 252: [  2560, 10240]     NONE
 - 253: [  2560,     1]     NONE
 - 254: [  2560,  2560]     NONE
 - 255: [  2560,  2560]     NONE
 - 256: [  2560,     1]     NONE
 - 257: [  2560,     1]     NONE
 - 258: [  2560,     1]     NONE
 - 259: [  2560,     1]     NONE
 - 260: [ 10240,     1]     NONE
 - 261: [  2560,     1]     NONE
 - 262: [  2560,     1]     NONE
 - 263: [  2560,     1]     NONE
 - 264: [  2560,  2560]     NONE
 - 265: [  2560,     1]     NONE
 - 266: [  2560,  2560]     NONE
 - 267: [  2560,     1]     NONE
 - 268: [ 10240,  2560]     NONE
 - 269: [  2560, 10240]     NONE
 - 270: [  2560,     1]     NONE
 - 271: [  2560,  2560]     NONE
 - 272: [  2560,  2560]     NONE
 - 273: [  2560,     1]     NONE
 - 274: [  2560,     1]     NONE
 - 275: [  2560,     1]     NONE
 - 276: [  2560,     1]     NONE
 - 277: [ 10240,     1]     NONE
 - 278: [  2560,     1]     NONE
 - 279: [  2560,     1]     NONE
 - 280: [  2560,     1]     NONE
 - 281: [  2560,  2560]     NONE
 - 282: [  2560,     1]     NONE
 - 283: [  2560,  2560]     NONE
 - 284: [  2560,     1]     NONE
 - 285: [ 10240,  2560]     NONE
 - 286: [  2560, 10240]     NONE
 - 287: [  2560,     1]     NONE
 - 288: [  2560,  2560]     NONE
 - 289: [  2560,  2560]     NONE
 - 290: [  2560,     1]     NONE
 - 291: [  2560,     1]     NONE
 - 292: [  2560,     1]     NONE
 - 293: [  2560,     1]     NONE
 - 294: [ 10240,     1]     NONE
 - 295: [  2560,     1]     NONE
 - 296: [  2560,     1]     NONE
 - 297: [  2560,     1]     NONE
 - 298: [  2560,  2560]     NONE
 - 299: [  2560,     1]     NONE
 - 300: [  2560,  2560]     NONE
 - 301: [  2560,     1]     NONE
 - 302: [ 10240,  2560]     NONE
 - 303: [  2560, 10240]     NONE
 - 304: [  2560,     1]     NONE
 - 305: [  2560,  2560]     NONE
 - 306: [  2560,  2560]     NONE
 - 307: [  2560,     1]     NONE
 - 308: [  2560,     1]     NONE
 - 309: [  2560,     1]     NONE
 - 310: [  2560,     1]     NONE
 - 311: [ 10240,     1]     NONE
 - 312: [  2560,     1]     NONE
 - 313: [  2560,     1]     NONE
 - 314: [  2560,     1]     NONE
 - 315: [  2560,  2560]     NONE
 - 316: [  2560,     1]     NONE
 - 317: [  2560,  2560]     NONE
 - 318: [  2560,     1]     NONE
 - 319: [ 10240,  2560]     NONE
 - 320: [  2560, 10240]     NONE
 - 321: [  2560,     1]     NONE
 - 322: [  2560,  2560]     NONE
 - 323: [  2560,  2560]     NONE
 - 324: [  2560,     1]     NONE
 - 325: [  2560,     1]     NONE
 - 326: [  2560,     1]     NONE
 - 327: [  2560,     1]     NONE
 - 328: [ 10240,     1]     NONE
 - 329: [  2560,     1]     NONE
 - 330: [  2560,     1]     NONE
 - 331: [  2560,     1]     NONE
 - 332: [  2560,  2560]     NONE
 - 333: [  2560,     1]     NONE
 - 334: [  2560,  2560]     NONE
 - 335: [  2560,     1]     NONE
 - 336: [ 10240,  2560]     NONE
 - 337: [  2560, 10240]     NONE
 - 338: [  2560,     1]     NONE
 - 339: [  2560,  2560]     NONE
 - 340: [  2560,  2560]     NONE
 - 341: [  2560,     1]     NONE
 - 342: [  2560,     1]     NONE
 - 343: [  2560,     1]     NONE
 - 344: [  2560,     1]     NONE
 - 345: [ 10240,     1]     NONE
 - 346: [  2560,     1]     NONE
 - 347: [  2560,     1]     NONE
 - 348: [  2560,     1]     NONE
 - 349: [  2560,  2560]     NONE
 - 350: [  2560,     1]     NONE
 - 351: [  2560,  2560]     NONE
 - 352: [  2560,     1]     NONE
 - 353: [ 10240,  2560]     NONE
 - 354: [  2560, 10240]     NONE
 - 355: [  2560,     1]     NONE
 - 356: [  2560,  2560]     NONE
 - 357: [  2560,  2560]     NONE
 - 358: [  2560,     1]     NONE
 - 359: [  2560,     1]     NONE
 - 360: [  2560,     1]     NONE
 - 361: [  2560,     1]     NONE
 - 362: [ 10240,     1]     NONE
 - 363: [  2560,     1]     NONE
 - 364: [  2560,     1]     NONE
 - 365: [  2560,     1]     NONE
 - 366: [  2560,  2560]     NONE
 - 367: [  2560,     1]     NONE
 - 368: [  2560,  2560]     NONE
 - 369: [  2560,     1]     NONE
 - 370: [ 10240,  2560]     NONE
 - 371: [  2560, 10240]     NONE
 - 372: [  2560,     1]     NONE
 - 373: [  2560,  2560]     NONE
 - 374: [  2560,  2560]     NONE
 - 375: [  2560,     1]     NONE
 - 376: [  2560,     1]     NONE
 - 377: [  2560,     1]     NONE
 - 378: [  2560,     1]     NONE
 - 379: [ 10240,     1]     NONE
 - 380: [  2560,     1]     NONE
 - 381: [  2560,     1]     NONE
 - 382: [  2560,     1]     NONE
 - 383: [  2560,  2560]     NONE
 - 384: [  2560,     1]     NONE
 - 385: [  2560,  2560]     NONE
 - 386: [  2560,     1]     NONE
 - 387: [ 10240,  2560]     NONE
 - 388: [  2560, 10240]     NONE
 - 389: [  2560,     1]     NONE
 - 390: [  2560,  2560]     NONE
 - 391: [  2560,  2560]     NONE
 - 392: [  2560,     1]     NONE
 - 393: [  2560,     1]     NONE
 - 394: [  2560,     1]     NONE
 - 395: [  2560,     1]     NONE
 - 396: [ 10240,     1]     NONE
 - 397: [  2560,     1]     NONE
 - 398: [  2560,     1]     NONE
 - 399: [  2560,     1]     NONE
 - 400: [  2560,  2560]     NONE
 - 401: [  2560,     1]     NONE
 - 402: [  2560,  2560]     NONE
 - 403: [  2560,     1]     NONE
 - 404: [ 10240,  2560]     NONE
 - 405: [  2560, 10240]     NONE
 - 406: [  2560,     1]     NONE
 - 407: [  2560,  2560]     NONE
 - 408: [  2560,  2560]     NONE
 - 409: [  2560,     1]     NONE
 - 410: [  2560,     1]     NONE
 - 411: [  2560,     1]     NONE
 - 412: [  2560,     1]     NONE
 - 413: [ 10240,     1]     NONE
 - 414: [  2560,     1]     NONE
 - 415: [  2560,     1]     NONE
 - 416: [  2560,     1]     NONE
 - 417: [  2560,  2560]     NONE
 - 418: [  2560,     1]     NONE
 - 419: [  2560,  2560]     NONE
 - 420: [  2560,     1]     NONE
 - 421: [ 10240,  2560]     NONE
 - 422: [  2560, 10240]     NONE
 - 423: [  2560,     1]     NONE
 - 424: [  2560,  2560]     NONE
 - 425: [  2560,  2560]     NONE
 - 426: [  2560,     1]     NONE
 - 427: [  2560,     1]     NONE
 - 428: [  2560,     1]     NONE
 - 429: [  2560,     1]     NONE
 - 430: [ 10240,     1]     NONE
 - 431: [  2560,     1]     NONE
 - 432: [  2560,     1]     NONE
 - 433: [  2560,     1]     NONE
 - 434: [  2560,  2560]     NONE
 - 435: [  2560,     1]     NONE
 - 436: [  2560,  2560]     NONE
 - 437: [  2560,     1]     NONE
 - 438: [ 10240,  2560]     NONE
 - 439: [  2560, 10240]     NONE
 - 440: [  2560,     1]     NONE
 - 441: [  2560,  2560]     NONE
 - 442: [  2560,  2560]     NONE
 - 443: [  2560,     1]     NONE
 - 444: [  2560,     1]     NONE
 - 445: [  2560,     1]     NONE
 - 446: [  2560,     1]     NONE
 - 447: [ 10240,     1]     NONE
 - 448: [  2560,     1]     NONE
 - 449: [  2560,     1]     NONE
 - 450: [  2560,     1]     NONE
 - 451: [  2560,  2560]     NONE
 - 452: [  2560,     1]     NONE
 - 453: [  2560,  2560]     NONE
 - 454: [  2560,     1]     NONE
 - 455: [ 10240,  2560]     NONE
 - 456: [  2560, 10240]     NONE
 - 457: [  2560,     1]     NONE
 - 458: [  2560,  2560]     NONE
 - 459: [  2560,  2560]     NONE
 - 460: [  2560,     1]     NONE
 - 461: [  2560,     1]     NONE
 - 462: [  2560,     1]     NONE
 - 463: [  2560,     1]     NONE
 - 464: [ 10240,     1]     NONE
 - 465: [  2560,     1]     NONE
 - 466: [  2560,     1]     NONE
 - 467: [  2560,     1]     NONE
 - 468: [  2560,  2560]     NONE
 - 469: [  2560,     1]     NONE
 - 470: [  2560,  2560]     NONE
 - 471: [  2560,     1]     NONE
 - 472: [ 10240,  2560]     NONE
 - 473: [  2560, 10240]     NONE
 - 474: [  2560,     1]     NONE
 - 475: [  2560,  2560]     NONE
 - 476: [  2560,  2560]     NONE
 - 477: [  2560,     1]     NONE
 - 478: [  2560,     1]     NONE
 - 479: [  2560,     1]     NONE
 - 480: [  2560,     1]     NONE
 - 481: [ 10240,     1]     NONE
 - 482: [  2560,     1]     NONE
 - 483: [  2560,     1]     NONE
 - 484: [  2560,     1]     NONE
 - 485: [  2560,  2560]     NONE
 - 486: [  2560,     1]     NONE
 - 487: [  2560,  2560]     NONE
 - 488: [  2560,     1]     NONE
 - 489: [ 10240,  2560]     NONE
 - 490: [  2560, 10240]     NONE
 - 491: [  2560,     1]     NONE
 - 492: [  2560,  2560]     NONE
 - 493: [  2560,  2560]     NONE
 - 494: [  2560,     1]     NONE
 - 495: [  2560,     1]     NONE
 - 496: [  2560,     1]     NONE
 - 497: [  2560,     1]     NONE
 - 498: [ 10240,     1]     NONE
 - 499: [  2560,     1]     NONE
 - 500: [  2560,     1]     NONE
 - 501: [  2560,     1]     NONE
 - 502: [  2560,  2560]     NONE
 - 503: [  2560,     1]     NONE
 - 504: [  2560,  2560]     NONE
 - 505: [  2560,     1]     NONE
 - 506: [ 10240,  2560]     NONE
 - 507: [  2560, 10240]     NONE
 - 508: [  2560,     1]     NONE
 - 509: [  2560,  2560]     NONE
 - 510: [  2560,  2560]     NONE
 - 511: [  2560,     1]     NONE
 - 512: [  2560,     1]     NONE
 - 513: [  2560,     1]     NONE
 - 514: [  2560,     1]     NONE
 - 515: [ 10240,     1]     NONE
 - 516: [  2560,     1]     NONE
 - 517: [  2560,     1]     NONE
 - 518: [  2560,     1]     NONE
 - 519: [  2560,  2560]     NONE
 - 520: [  2560,     1]     NONE
 - 521: [  2560,  2560]     NONE
 - 522: [  2560,     1]     NONE
 - 523: [ 10240,  2560]     NONE
 - 524: [  2560, 10240]     NONE
 - 525: [  2560,     1]     NONE
 - 526: [  2560,  2560]     NONE
 - 527: [  2560,  2560]     NONE
 - 528: [  2560,     1]     NONE
 - 529: [  2560,     1]     NONE
 - 530: [  2560,     1]     NONE
 - 531: [  2560,     1]     NONE
 - 532: [ 10240,     1]     NONE
 - 533: [  2560,     1]     NONE
 - 534: [  2560,     1]     NONE
 - 535: [  2560,     1]     NONE
 - 536: [  2560,  2560]     NONE
 - 537: [  2560,     1]     NONE
 - 538: [  2560, 102400]     NONE
 - 539: [  2560,     1]     NONE
 - 540: [ 10240,  2560]     NONE
 - 541: [  2560, 10240]     NONE
 - 542: [  2560,     1]     NONE
 - 543: [  2560,  2560]     NONE
 - 544: [  2560,  2560]     NONE
 - 545: [  2560,     1]     NONE
 - 546: [  2560,     1]     NONE
 - 547: [  2560,     1]     NONE
 - 548: [  2560,     1]     NONE
 - 549: [ 10240,     1]     NONE
 - 550: [  2560,     1]     NONE
 - 551: [  2560,     1]     NONE
perf_total_per_op_us[             ADD] =   0.321 ms
perf_total_per_op_us[             MUL] =   0.065 ms
perf_total_per_op_us[            NORM] =   0.065 ms
perf_total_per_op_us[         MUL_MAT] =   0.257 ms
perf_total_per_op_us[           SCALE] =   0.032 ms
perf_total_per_op_us[             CPY] =   0.096 ms
perf_total_per_op_us[         RESHAPE] =   0.096 ms
perf_total_per_op_us[            VIEW] =   0.128 ms
perf_total_per_op_us[         PERMUTE] =   0.064 ms
perf_total_per_op_us[       TRANSPOSE] =   0.032 ms
perf_total_per_op_us[        GET_ROWS] =   0.001 ms
perf_total_per_op_us[   DIAG_MASK_INF] =   0.032 ms
perf_total_per_op_us[        SOFT_MAX] =   0.032 ms
perf_total_per_op_us[            ROPE] =   0.064 ms
perf_total_per_op_us[           UNARY] =   0.032 ms
========================================
 user=== GRAPH ===
n_nodes = 1317
 -   0: [  2560,     1,     1]         GET_ROWS   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   1: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   2: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   3: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   4: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   5: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   6: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   7: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   8: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   9: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  10: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  11: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  12: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  13: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  14: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  15: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  16: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  17: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  18: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  19: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  20: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  21: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  22: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  23: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  24: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  25: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  26: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  27: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  28: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  29: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  30: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  31: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  32: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  33: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  34: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  35: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  36: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  37: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  38: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  39: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  40: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  41: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  42: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  43: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  44: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  45: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  46: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  47: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  48: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  49: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  50: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  51: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  52: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  53: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  54: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  55: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  56: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  57: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  58: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  59: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  60: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  61: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  62: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  63: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  64: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  65: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  66: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  67: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  68: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  69: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  70: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  71: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  72: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  73: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  74: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  75: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  76: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  77: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  78: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  79: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  80: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  81: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  82: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  83: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  84: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  85: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  86: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  87: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  88: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  89: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  90: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  91: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  92: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  93: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  94: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  95: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  96: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  97: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  98: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  99: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 100: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 102: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 103: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 104: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 105: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 106: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 107: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 108: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 109: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 110: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 111: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 112: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 113: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 114: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 115: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 116: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 117: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 118: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 119: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 120: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 121: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 122: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 123: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 124: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 125: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 127: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 128: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 129: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 130: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 131: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 132: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 133: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 134: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 135: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 136: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 137: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 138: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 139: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 140: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 141: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 143: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 144: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 145: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 146: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 147: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 148: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 149: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 150: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 151: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 152: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 153: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 154: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 155: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 156: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 157: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 158: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 159: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 160: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 161: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 162: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 163: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 164: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 165: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 166: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 168: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 169: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 170: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 171: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 172: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 173: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 174: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 175: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 176: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 177: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 178: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 179: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 180: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 181: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 182: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 184: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 185: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 186: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 187: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 188: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 189: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 190: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 191: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 192: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 193: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 194: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 195: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 196: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 197: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 198: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 199: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 200: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 201: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 202: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 203: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 204: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 205: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 206: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 207: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 209: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 210: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 211: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 212: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 213: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 214: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 215: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 216: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 217: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 218: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 219: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 220: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 221: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 222: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 223: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 225: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 226: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 227: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 228: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 229: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 230: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 231: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 232: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 233: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 234: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 235: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 236: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 237: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 238: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 239: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 240: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 241: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 242: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 243: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 244: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 245: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 246: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 247: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 248: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 250: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 251: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 252: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 253: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 254: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 255: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 256: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 257: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 258: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 259: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 260: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 261: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 262: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 263: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 264: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 266: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 267: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 268: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 269: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 270: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 271: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 272: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 273: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 274: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 275: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 276: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 277: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 278: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 279: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 280: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 281: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 282: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 283: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 284: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 285: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 286: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 287: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 288: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 289: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 291: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 292: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 293: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 294: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 295: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 296: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 297: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 298: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 299: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 300: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 301: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 302: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 303: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 304: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 305: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 307: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 308: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 309: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 310: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 311: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 312: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 313: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 314: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 315: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 316: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 317: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 318: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 319: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 320: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 321: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 322: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 323: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 324: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 325: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 326: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 327: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 328: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 329: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 330: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 331: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 332: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 333: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 334: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 335: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 336: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 337: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 338: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 339: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 340: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 341: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 342: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 343: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 344: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 345: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 346: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 347: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 348: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 349: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 350: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 351: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 352: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 353: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 354: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 355: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 356: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 357: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 358: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 359: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 360: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 361: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 362: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 363: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 364: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 365: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 366: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 367: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 368: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 369: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 370: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 371: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 372: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 373: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 374: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 375: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 376: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 377: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 378: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 379: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 380: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 381: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 382: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 383: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 384: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 385: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 386: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 387: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 388: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 389: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 390: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 391: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 392: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 393: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 394: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 395: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 396: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 397: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 398: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 399: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 400: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 401: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 402: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 403: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 404: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 405: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 406: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 407: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 408: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 409: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 410: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 411: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 412: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 413: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 414: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 415: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 416: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 417: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 418: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 419: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 420: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 421: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 422: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 423: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 424: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 425: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 426: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 427: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 428: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 429: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 430: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 431: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 432: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 433: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 434: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 435: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 436: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 437: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 438: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 439: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 440: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 441: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 442: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 443: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 444: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 445: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 446: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 447: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 448: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 449: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 450: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 451: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 452: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 453: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 454: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 455: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 456: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 457: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 458: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 459: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 460: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 461: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 462: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 463: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 464: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 465: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 466: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 467: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 468: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 469: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 470: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 471: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 472: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 473: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 474: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 475: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 476: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 477: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 478: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 479: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 480: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 481: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 482: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 483: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 484: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 485: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 486: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 487: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 488: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 489: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 490: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 491: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 492: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 493: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 494: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 495: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 496: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 497: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 498: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 499: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 500: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 501: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 502: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 503: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 504: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 505: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 506: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 507: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 508: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 509: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 510: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 511: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 512: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 513: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 514: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 515: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 516: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 517: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 518: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 519: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 520: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 521: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 522: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 523: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 524: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 525: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 526: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 527: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 528: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 529: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 530: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 531: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 532: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 533: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 534: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 535: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 536: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 537: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 538: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 539: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 540: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 541: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 542: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 543: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 544: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 545: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 546: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 547: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 548: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 549: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 550: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 551: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 552: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 553: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 554: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 555: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 556: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 557: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 558: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 559: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 560: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 561: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 562: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 563: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 564: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 565: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 566: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 567: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 568: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 569: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 570: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 571: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 572: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 573: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 574: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 575: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 576: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 577: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 578: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 579: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 580: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 581: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 582: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 583: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 584: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 585: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 586: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 587: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 588: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 589: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 590: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 591: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 592: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 593: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 594: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 595: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 596: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 597: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 598: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 599: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 600: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 601: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 602: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 603: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 604: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 605: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 606: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 607: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 608: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 609: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 610: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 611: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 612: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 613: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 614: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 615: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 616: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 617: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 618: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 619: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 620: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 621: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 622: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 623: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 624: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 625: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 626: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 627: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 628: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 629: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 630: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 631: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 632: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 633: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 634: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 635: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 636: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 637: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 638: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 639: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 640: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 641: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 642: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 643: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 644: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 645: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 646: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 647: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 648: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 649: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 650: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 651: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 652: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 653: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 654: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 655: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 656: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 657: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 658: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 659: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 660: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 661: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 662: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 663: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 664: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 665: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 666: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 667: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 668: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 669: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 670: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 671: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 672: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 673: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 674: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 675: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 676: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 677: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 678: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 679: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 680: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 681: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 682: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 683: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 684: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 685: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 686: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 687: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 688: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 689: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 690: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 691: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 692: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 693: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 694: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 695: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 696: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 697: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 698: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 699: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 700: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 701: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 702: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 703: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 704: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 705: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 706: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 707: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 708: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 709: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 710: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 711: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 712: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 713: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 714: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 715: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 716: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 717: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 718: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 719: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 720: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 721: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 722: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 723: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 724: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 725: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 726: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 727: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 728: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 729: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 730: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 731: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 732: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 733: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 734: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 735: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 736: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 737: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 738: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 739: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 740: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 741: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 742: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 743: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 744: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 745: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 746: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 747: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 748: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 749: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 750: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 751: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 752: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 753: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 754: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 755: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 756: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 757: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 758: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 759: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 760: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 761: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 762: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 763: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 764: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 765: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 766: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 767: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 768: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 769: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 770: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 771: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 772: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 773: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 774: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 775: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 776: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 777: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 778: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 779: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 780: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 781: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 782: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 783: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 784: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 785: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 786: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 787: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 788: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 789: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 790: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 791: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 792: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 793: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 794: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 795: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 796: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 797: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 798: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 799: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 800: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 801: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 802: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 803: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 804: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 805: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 806: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 807: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 808: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 809: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 810: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 811: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 812: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 813: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 814: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 815: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 816: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 817: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 818: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 819: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 820: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 821: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 822: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 823: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 824: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 825: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 826: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 827: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 828: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 829: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 830: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 831: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 832: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 833: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 834: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 835: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 836: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 837: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 838: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 839: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 840: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 841: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 842: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 843: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 844: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 845: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 846: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 847: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 848: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 849: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 850: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 851: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 852: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 853: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 854: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 855: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 856: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 857: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 858: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 859: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 860: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 861: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 862: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 863: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 864: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 865: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 866: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 867: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 868: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 869: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 870: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 871: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 872: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 873: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 874: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 875: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 876: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 877: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 878: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 879: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 880: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 881: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 882: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 883: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 884: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 885: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 886: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 887: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 888: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 889: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 890: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 891: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 892: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 893: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 894: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 895: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 896: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 897: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 898: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 899: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 900: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 901: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 902: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 903: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 904: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 905: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 906: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 907: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 908: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 909: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 910: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 911: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 912: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 913: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 914: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 915: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 916: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 917: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 918: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 919: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 920: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 921: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 922: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 923: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 924: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 925: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 926: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 927: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 928: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 929: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 930: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 931: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 932: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 933: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 934: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 935: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 936: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 937: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 938: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 939: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 940: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 941: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 942: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 943: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 944: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 945: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 946: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 947: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 948: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 949: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 950: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 951: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 952: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 953: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 954: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 955: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 956: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 957: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 958: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 959: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 960: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 961: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 962: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 963: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 964: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 965: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 966: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 967: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 968: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 969: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 970: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 971: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 972: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 973: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 974: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 975: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 976: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 977: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 978: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 979: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 980: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 981: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 982: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 983: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 984: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 985: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 986: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 987: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 988: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 989: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 990: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 991: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 992: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 993: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 994: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 995: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 996: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 997: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 998: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 999: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1000: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1001: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1002: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1003: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1004: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1005: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1006: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1007: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1008: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1009: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1010: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1011: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1012: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1013: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1014: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1015: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1016: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1017: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1018: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1019: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1020: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1021: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1022: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1023: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1024: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1025: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1026: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1027: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1028: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1029: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1030: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1031: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1032: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1033: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1034: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1035: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1036: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1037: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1038: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1039: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1040: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1041: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1042: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1043: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1044: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1045: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1046: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1047: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1048: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1049: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1050: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1051: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1052: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1053: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1054: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1055: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1056: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1057: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1058: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1059: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1060: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1061: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1062: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1063: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1064: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1065: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1066: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1067: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1068: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1069: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1070: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1071: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1072: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1073: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1074: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1075: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1076: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1077: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1078: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1079: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1080: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1081: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1082: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1083: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1084: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1085: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1086: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1087: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1088: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1089: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1090: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1091: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1092: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1093: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1094: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1095: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1096: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1097: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1098: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1099: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1100: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1102: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1103: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1104: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1105: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1106: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1107: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1108: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1109: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1110: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1111: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1112: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1113: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1114: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1115: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1116: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1117: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1118: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1119: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1120: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1121: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1122: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1123: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1124: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1125: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1127: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1128: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1129: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1130: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1131: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1132: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1133: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1134: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1135: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1136: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1137: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1138: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1139: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1140: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1141: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1143: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1144: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1145: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1146: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1147: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1148: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1149: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1150: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1151: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1152: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1153: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1154: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1155: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1156: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1157: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1158: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1159: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1160: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1161: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1162: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1163: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1164: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1165: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1166: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1168: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1169: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1170: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1171: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1172: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1173: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1174: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1175: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1176: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1177: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1178: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1179: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1180: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1181: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1182: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1184: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1185: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1186: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1187: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1188: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1189: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1190: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1191: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1192: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1193: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1194: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1195: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1196: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1197: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1198: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1199: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1200: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1201: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1202: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1203: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1204: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1205: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1206: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1207: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1209: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1210: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1211: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1212: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1213: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1214: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1215: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1216: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1217: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1218: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1219: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1220: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1221: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1222: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1223: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1225: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1226: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1227: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1228: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1229: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1230: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1231: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1232: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1233: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1234: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1235: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1236: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1237: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1238: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1239: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1240: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1241: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1242: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1243: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1244: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1245: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1246: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1247: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1248: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1250: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1251: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1252: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1253: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1254: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1255: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1256: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1257: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1258: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1259: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1260: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1261: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1262: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1263: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1264: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1266: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1267: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1268: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1269: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1270: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1271: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1272: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1273: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1274: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1275: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1276: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1277: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1278: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1279: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1280: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1281: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1282: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1283: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1284: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1285: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1286: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1287: [     1,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1288: [   128,     1,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1289: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1291: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1292: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1293: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1294: [     1,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1295: [     1,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1296: [     1,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1297: [     1,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1298: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1299: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1300: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1301: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1302: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1303: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1304: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1305: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1307: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1308: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1309: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1310: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1311: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1312: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1313: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1314: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1315: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1316: [ 102400,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
n_leafs = 552
 -   0: [  2560,  2560]     NONE
 -   1: [  2560,     1]     NONE
 -   2: [  2560, 102400]     NONE
 -   3: [     1,     1]     NONE
 -   4: [  2560,     1]     NONE
 -   5: [  2560,     1]     NONE
 -   6: [ 41943040,     1]     NONE
 -   7: [  2560,  2560]     NONE
 -   8: [  2560,     1]     NONE
 -   9: [ 41943040,     1]     NONE
 -  10: [  2560,  2560]     NONE
 -  11: [  2560,     1]     NONE
 -  12: [ 10240,  2560]     NONE
 -  13: [  2560, 10240]     NONE
 -  14: [  2560,     1]     NONE
 -  15: [  2560,  2560]     NONE
 -  16: [  2560,  2560]     NONE
 -  17: [  2560,     1]     NONE
 -  18: [     1,     1]     NONE
 -  19: [  2560,     1]     NONE
 -  20: [  2560,     1]     NONE
 -  21: [  2560,     1]     NONE
 -  22: [ 10240,     1]     NONE
 -  23: [  2560,     1]     NONE
 -  24: [  2560,     1]     NONE
 -  25: [  2560,     1]     NONE
 -  26: [  2560,  2560]     NONE
 -  27: [  2560,     1]     NONE
 -  28: [  2560,  2560]     NONE
 -  29: [  2560,     1]     NONE
 -  30: [ 10240,  2560]     NONE
 -  31: [  2560, 10240]     NONE
 -  32: [  2560,     1]     NONE
 -  33: [  2560,  2560]     NONE
 -  34: [  2560,  2560]     NONE
 -  35: [  2560,     1]     NONE
 -  36: [  2560,     1]     NONE
 -  37: [  2560,     1]     NONE
 -  38: [  2560,     1]     NONE
 -  39: [ 10240,     1]     NONE
 -  40: [  2560,     1]     NONE
 -  41: [  2560,     1]     NONE
 -  42: [  2560,     1]     NONE
 -  43: [  2560,  2560]     NONE
 -  44: [  2560,     1]     NONE
 -  45: [  2560,  2560]     NONE
 -  46: [  2560,     1]     NONE
 -  47: [ 10240,  2560]     NONE
 -  48: [  2560, 10240]     NONE
 -  49: [  2560,     1]     NONE
 -  50: [  2560,  2560]     NONE
 -  51: [  2560,  2560]     NONE
 -  52: [  2560,     1]     NONE
 -  53: [  2560,     1]     NONE
 -  54: [  2560,     1]     NONE
 -  55: [  2560,     1]     NONE
 -  56: [ 10240,     1]     NONE
 -  57: [  2560,     1]     NONE
 -  58: [  2560,     1]     NONE
 -  59: [  2560,     1]     NONE
 -  60: [  2560,  2560]     NONE
 -  61: [  2560,     1]     NONE
 -  62: [  2560,  2560]     NONE
 -  63: [  2560,     1]     NONE
 -  64: [ 10240,  2560]     NONE
 -  65: [  2560, 10240]     NONE
 -  66: [  2560,     1]     NONE
 -  67: [  2560,  2560]     NONE
 -  68: [  2560,  2560]     NONE
 -  69: [  2560,     1]     NONE
 -  70: [  2560,     1]     NONE
 -  71: [  2560,     1]     NONE
 -  72: [  2560,     1]     NONE
 -  73: [ 10240,     1]     NONE
 -  74: [  2560,     1]     NONE
 -  75: [  2560,     1]     NONE
 -  76: [  2560,     1]     NONE
 -  77: [  2560,  2560]     NONE
 -  78: [  2560,     1]     NONE
 -  79: [  2560,  2560]     NONE
 -  80: [  2560,     1]     NONE
 -  81: [ 10240,  2560]     NONE
 -  82: [  2560, 10240]     NONE
 -  83: [  2560,     1]     NONE
 -  84: [  2560,  2560]     NONE
 -  85: [  2560,  2560]     NONE
 -  86: [  2560,     1]     NONE
 -  87: [  2560,     1]     NONE
 -  88: [  2560,     1]     NONE
 -  89: [  2560,     1]     NONE
 -  90: [ 10240,     1]     NONE
 -  91: [  2560,     1]     NONE
 -  92: [  2560,     1]     NONE
 -  93: [  2560,     1]     NONE
 -  94: [  2560,  2560]     NONE
 -  95: [  2560,     1]     NONE
 -  96: [  2560,  2560]     NONE
 -  97: [  2560,     1]     NONE
 -  98: [ 10240,  2560]     NONE
 -  99: [  2560, 10240]     NONE
 - 100: [  2560,     1]     NONE
 - 101: [  2560,  2560]     NONE
 - 102: [  2560,  2560]     NONE
 - 103: [  2560,     1]     NONE
 - 104: [  2560,     1]     NONE
 - 105: [  2560,     1]     NONE
 - 106: [  2560,     1]     NONE
 - 107: [ 10240,     1]     NONE
 - 108: [  2560,     1]     NONE
 - 109: [  2560,     1]     NONE
 - 110: [  2560,     1]     NONE
 - 111: [  2560,  2560]     NONE
 - 112: [  2560,     1]     NONE
 - 113: [  2560,  2560]     NONE
 - 114: [  2560,     1]     NONE
 - 115: [ 10240,  2560]     NONE
 - 116: [  2560, 10240]     NONE
 - 117: [  2560,     1]     NONE
 - 118: [  2560,  2560]     NONE
 - 119: [  2560,  2560]     NONE
 - 120: [  2560,     1]     NONE
 - 121: [  2560,     1]     NONE
 - 122: [  2560,     1]     NONE
 - 123: [  2560,     1]     NONE
 - 124: [ 10240,     1]     NONE
 - 125: [  2560,     1]     NONE
 - 126: [  2560,     1]     NONE
 - 127: [  2560,     1]     NONE
 - 128: [  2560,  2560]     NONE
 - 129: [  2560,     1]     NONE
 - 130: [  2560,  2560]     NONE
 - 131: [  2560,     1]     NONE
 - 132: [ 10240,  2560]     NONE
 - 133: [  2560, 10240]     NONE
 - 134: [  2560,     1]     NONE
 - 135: [  2560,  2560]     NONE
 - 136: [  2560,  2560]     NONE
 - 137: [  2560,     1]     NONE
 - 138: [  2560,     1]     NONE
 - 139: [  2560,     1]     NONE
 - 140: [  2560,     1]     NONE
 - 141: [ 10240,     1]     NONE
 - 142: [  2560,     1]     NONE
 - 143: [  2560,     1]     NONE
 - 144: [  2560,     1]     NONE
 - 145: [  2560,  2560]     NONE
 - 146: [  2560,     1]     NONE
 - 147: [  2560,  2560]     NONE
 - 148: [  2560,     1]     NONE
 - 149: [ 10240,  2560]     NONE
 - 150: [  2560, 10240]     NONE
 - 151: [  2560,     1]     NONE
 - 152: [  2560,  2560]     NONE
 - 153: [  2560,  2560]     NONE
 - 154: [  2560,     1]     NONE
 - 155: [  2560,     1]     NONE
 - 156: [  2560,     1]     NONE
 - 157: [  2560,     1]     NONE
 - 158: [ 10240,     1]     NONE
 - 159: [  2560,     1]     NONE
 - 160: [  2560,     1]     NONE
 - 161: [  2560,     1]     NONE
 - 162: [  2560,  2560]     NONE
 - 163: [  2560,     1]     NONE
 - 164: [  2560,  2560]     NONE
 - 165: [  2560,     1]     NONE
 - 166: [ 10240,  2560]     NONE
 - 167: [  2560, 10240]     NONE
 - 168: [  2560,     1]     NONE
 - 169: [  2560,  2560]     NONE
 - 170: [  2560,  2560]     NONE
 - 171: [  2560,     1]     NONE
 - 172: [  2560,     1]     NONE
 - 173: [  2560,     1]     NONE
 - 174: [  2560,     1]     NONE
 - 175: [ 10240,     1]     NONE
 - 176: [  2560,     1]     NONE
 - 177: [  2560,     1]     NONE
 - 178: [  2560,     1]     NONE
 - 179: [  2560,  2560]     NONE
 - 180: [  2560,     1]     NONE
 - 181: [  2560,  2560]     NONE
 - 182: [  2560,     1]     NONE
 - 183: [ 10240,  2560]     NONE
 - 184: [  2560, 10240]     NONE
 - 185: [  2560,     1]     NONE
 - 186: [  2560,  2560]     NONE
 - 187: [  2560,  2560]     NONE
 - 188: [  2560,     1]     NONE
 - 189: [  2560,     1]     NONE
 - 190: [  2560,     1]     NONE
 - 191: [  2560,     1]     NONE
 - 192: [ 10240,     1]     NONE
 - 193: [  2560,     1]     NONE
 - 194: [  2560,     1]     NONE
 - 195: [  2560,     1]     NONE
 - 196: [  2560,  2560]     NONE
 - 197: [  2560,     1]     NONE
 - 198: [  2560,  2560]     NONE
 - 199: [  2560,     1]     NONE
 - 200: [ 10240,  2560]     NONE
 - 201: [  2560, 10240]     NONE
 - 202: [  2560,     1]     NONE
 - 203: [  2560,  2560]     NONE
 - 204: [  2560,  2560]     NONE
 - 205: [  2560,     1]     NONE
 - 206: [  2560,     1]     NONE
 - 207: [  2560,     1]     NONE
 - 208: [  2560,     1]     NONE
 - 209: [ 10240,     1]     NONE
 - 210: [  2560,     1]     NONE
 - 211: [  2560,     1]     NONE
 - 212: [  2560,     1]     NONE
 - 213: [  2560,  2560]     NONE
 - 214: [  2560,     1]     NONE
 - 215: [  2560,  2560]     NONE
 - 216: [  2560,     1]     NONE
 - 217: [ 10240,  2560]     NONE
 - 218: [  2560, 10240]     NONE
 - 219: [  2560,     1]     NONE
 - 220: [  2560,  2560]     NONE
 - 221: [  2560,  2560]     NONE
 - 222: [  2560,     1]     NONE
 - 223: [  2560,     1]     NONE
 - 224: [  2560,     1]     NONE
 - 225: [  2560,     1]     NONE
 - 226: [ 10240,     1]     NONE
 - 227: [  2560,     1]     NONE
 - 228: [  2560,     1]     NONE
 - 229: [  2560,     1]     NONE
 - 230: [  2560,  2560]     NONE
 - 231: [  2560,     1]     NONE
 - 232: [  2560,  2560]     NONE
 - 233: [  2560,     1]     NONE
 - 234: [ 10240,  2560]     NONE
 - 235: [  2560, 10240]     NONE
 - 236: [  2560,     1]     NONE
 - 237: [  2560,  2560]     NONE
 - 238: [  2560,  2560]     NONE
 - 239: [  2560,     1]     NONE
 - 240: [  2560,     1]     NONE
 - 241: [  2560,     1]     NONE
 - 242: [  2560,     1]     NONE
 - 243: [ 10240,     1]     NONE
 - 244: [  2560,     1]     NONE
 - 245: [  2560,     1]     NONE
 - 246: [  2560,     1]     NONE
 - 247: [  2560,  2560]     NONE
 - 248: [  2560,     1]     NONE
 - 249: [  2560,  2560]     NONE
 - 250: [  2560,     1]     NONE
 - 251: [ 10240,  2560]     NONE
 - 252: [  2560, 10240]     NONE
 - 253: [  2560,     1]     NONE
 - 254: [  2560,  2560]     NONE
 - 255: [  2560,  2560]     NONE
 - 256: [  2560,     1]     NONE
 - 257: [  2560,     1]     NONE
 - 258: [  2560,     1]     NONE
 - 259: [  2560,     1]     NONE
 - 260: [ 10240,     1]     NONE
 - 261: [  2560,     1]     NONE
 - 262: [  2560,     1]     NONE
 - 263: [  2560,     1]     NONE
 - 264: [  2560,  2560]     NONE
 - 265: [  2560,     1]     NONE
 - 266: [  2560,  2560]     NONE
 - 267: [  2560,     1]     NONE
 - 268: [ 10240,  2560]     NONE
 - 269: [  2560, 10240]     NONE
 - 270: [  2560,     1]     NONE
 - 271: [  2560,  2560]     NONE
 - 272: [  2560,  2560]     NONE
 - 273: [  2560,     1]     NONE
 - 274: [  2560,     1]     NONE
 - 275: [  2560,     1]     NONE
 - 276: [  2560,     1]     NONE
 - 277: [ 10240,     1]     NONE
 - 278: [  2560,     1]     NONE
 - 279: [  2560,     1]     NONE
 - 280: [  2560,     1]     NONE
 - 281: [  2560,  2560]     NONE
 - 282: [  2560,     1]     NONE
 - 283: [  2560,  2560]     NONE
 - 284: [  2560,     1]     NONE
 - 285: [ 10240,  2560]     NONE
 - 286: [  2560, 10240]     NONE
 - 287: [  2560,     1]     NONE
 - 288: [  2560,  2560]     NONE
 - 289: [  2560,  2560]     NONE
 - 290: [  2560,     1]     NONE
 - 291: [  2560,     1]     NONE
 - 292: [  2560,     1]     NONE
 - 293: [  2560,     1]     NONE
 - 294: [ 10240,     1]     NONE
 - 295: [  2560,     1]     NONE
 - 296: [  2560,     1]     NONE
 - 297: [  2560,     1]     NONE
 - 298: [  2560,  2560]     NONE
 - 299: [  2560,     1]     NONE
 - 300: [  2560,  2560]     NONE
 - 301: [  2560,     1]     NONE
 - 302: [ 10240,  2560]     NONE
 - 303: [  2560, 10240]     NONE
 - 304: [  2560,     1]     NONE
 - 305: [  2560,  2560]     NONE
 - 306: [  2560,  2560]     NONE
 - 307: [  2560,     1]     NONE
 - 308: [  2560,     1]     NONE
 - 309: [  2560,     1]     NONE
 - 310: [  2560,     1]     NONE
 - 311: [ 10240,     1]     NONE
 - 312: [  2560,     1]     NONE
 - 313: [  2560,     1]     NONE
 - 314: [  2560,     1]     NONE
 - 315: [  2560,  2560]     NONE
 - 316: [  2560,     1]     NONE
 - 317: [  2560,  2560]     NONE
 - 318: [  2560,     1]     NONE
 - 319: [ 10240,  2560]     NONE
 - 320: [  2560, 10240]     NONE
 - 321: [  2560,     1]     NONE
 - 322: [  2560,  2560]     NONE
 - 323: [  2560,  2560]     NONE
 - 324: [  2560,     1]     NONE
 - 325: [  2560,     1]     NONE
 - 326: [  2560,     1]     NONE
 - 327: [  2560,     1]     NONE
 - 328: [ 10240,     1]     NONE
 - 329: [  2560,     1]     NONE
 - 330: [  2560,     1]     NONE
 - 331: [  2560,     1]     NONE
 - 332: [  2560,  2560]     NONE
 - 333: [  2560,     1]     NONE
 - 334: [  2560,  2560]     NONE
 - 335: [  2560,     1]     NONE
 - 336: [ 10240,  2560]     NONE
 - 337: [  2560, 10240]     NONE
 - 338: [  2560,     1]     NONE
 - 339: [  2560,  2560]     NONE
 - 340: [  2560,  2560]     NONE
 - 341: [  2560,     1]     NONE
 - 342: [  2560,     1]     NONE
 - 343: [  2560,     1]     NONE
 - 344: [  2560,     1]     NONE
 - 345: [ 10240,     1]     NONE
 - 346: [  2560,     1]     NONE
 - 347: [  2560,     1]     NONE
 - 348: [  2560,     1]     NONE
 - 349: [  2560,  2560]     NONE
 - 350: [  2560,     1]     NONE
 - 351: [  2560,  2560]     NONE
 - 352: [  2560,     1]     NONE
 - 353: [ 10240,  2560]     NONE
 - 354: [  2560, 10240]     NONE
 - 355: [  2560,     1]     NONE
 - 356: [  2560,  2560]     NONE
 - 357: [  2560,  2560]     NONE
 - 358: [  2560,     1]     NONE
 - 359: [  2560,     1]     NONE
 - 360: [  2560,     1]     NONE
 - 361: [  2560,     1]     NONE
 - 362: [ 10240,     1]     NONE
 - 363: [  2560,     1]     NONE
 - 364: [  2560,     1]     NONE
 - 365: [  2560,     1]     NONE
 - 366: [  2560,  2560]     NONE
 - 367: [  2560,     1]     NONE
 - 368: [  2560,  2560]     NONE
 - 369: [  2560,     1]     NONE
 - 370: [ 10240,  2560]     NONE
 - 371: [  2560, 10240]     NONE
 - 372: [  2560,     1]     NONE
 - 373: [  2560,  2560]     NONE
 - 374: [  2560,  2560]     NONE
 - 375: [  2560,     1]     NONE
 - 376: [  2560,     1]     NONE
 - 377: [  2560,     1]     NONE
 - 378: [  2560,     1]     NONE
 - 379: [ 10240,     1]     NONE
 - 380: [  2560,     1]     NONE
 - 381: [  2560,     1]     NONE
 - 382: [  2560,     1]     NONE
 - 383: [  2560,  2560]     NONE
 - 384: [  2560,     1]     NONE
 - 385: [  2560,  2560]     NONE
 - 386: [  2560,     1]     NONE
 - 387: [ 10240,  2560]     NONE
 - 388: [  2560, 10240]     NONE
 - 389: [  2560,     1]     NONE
 - 390: [  2560,  2560]     NONE
 - 391: [  2560,  2560]     NONE
 - 392: [  2560,     1]     NONE
 - 393: [  2560,     1]     NONE
 - 394: [  2560,     1]     NONE
 - 395: [  2560,     1]     NONE
 - 396: [ 10240,     1]     NONE
 - 397: [  2560,     1]     NONE
 - 398: [  2560,     1]     NONE
 - 399: [  2560,     1]     NONE
 - 400: [  2560,  2560]     NONE
 - 401: [  2560,     1]     NONE
 - 402: [  2560,  2560]     NONE
 - 403: [  2560,     1]     NONE
 - 404: [ 10240,  2560]     NONE
 - 405: [  2560, 10240]     NONE
 - 406: [  2560,     1]     NONE
 - 407: [  2560,  2560]     NONE
 - 408: [  2560,  2560]     NONE
 - 409: [  2560,     1]     NONE
 - 410: [  2560,     1]     NONE
 - 411: [  2560,     1]     NONE
 - 412: [  2560,     1]     NONE
 - 413: [ 10240,     1]     NONE
 - 414: [  2560,     1]     NONE
 - 415: [  2560,     1]     NONE
 - 416: [  2560,     1]     NONE
 - 417: [  2560,  2560]     NONE
 - 418: [  2560,     1]     NONE
 - 419: [  2560,  2560]     NONE
 - 420: [  2560,     1]     NONE
 - 421: [ 10240,  2560]     NONE
 - 422: [  2560, 10240]     NONE
 - 423: [  2560,     1]     NONE
 - 424: [  2560,  2560]     NONE
 - 425: [  2560,  2560]     NONE
 - 426: [  2560,     1]     NONE
 - 427: [  2560,     1]     NONE
 - 428: [  2560,     1]     NONE
 - 429: [  2560,     1]     NONE
 - 430: [ 10240,     1]     NONE
 - 431: [  2560,     1]     NONE
 - 432: [  2560,     1]     NONE
 - 433: [  2560,     1]     NONE
 - 434: [  2560,  2560]     NONE
 - 435: [  2560,     1]     NONE
 - 436: [  2560,  2560]     NONE
 - 437: [  2560,     1]     NONE
 - 438: [ 10240,  2560]     NONE
 - 439: [  2560, 10240]     NONE
 - 440: [  2560,     1]     NONE
 - 441: [  2560,  2560]     NONE
 - 442: [  2560,  2560]     NONE
 - 443: [  2560,     1]     NONE
 - 444: [  2560,     1]     NONE
 - 445: [  2560,     1]     NONE
 - 446: [  2560,     1]     NONE
 - 447: [ 10240,     1]     NONE
 - 448: [  2560,     1]     NONE
 - 449: [  2560,     1]     NONE
 - 450: [  2560,     1]     NONE
 - 451: [  2560,  2560]     NONE
 - 452: [  2560,     1]     NONE
 - 453: [  2560,  2560]     NONE
 - 454: [  2560,     1]     NONE
 - 455: [ 10240,  2560]     NONE
 - 456: [  2560, 10240]     NONE
 - 457: [  2560,     1]     NONE
 - 458: [  2560,  2560]     NONE
 - 459: [  2560,  2560]     NONE
 - 460: [  2560,     1]     NONE
 - 461: [  2560,     1]     NONE
 - 462: [  2560,     1]     NONE
 - 463: [  2560,     1]     NONE
 - 464: [ 10240,     1]     NONE
 - 465: [  2560,     1]     NONE
 - 466: [  2560,     1]     NONE
 - 467: [  2560,     1]     NONE
 - 468: [  2560,  2560]     NONE
 - 469: [  2560,     1]     NONE
 - 470: [  2560,  2560]     NONE
 - 471: [  2560,     1]     NONE
 - 472: [ 10240,  2560]     NONE
 - 473: [  2560, 10240]     NONE
 - 474: [  2560,     1]     NONE
 - 475: [  2560,  2560]     NONE
 - 476: [  2560,  2560]     NONE
 - 477: [  2560,     1]     NONE
 - 478: [  2560,     1]     NONE
 - 479: [  2560,     1]     NONE
 - 480: [  2560,     1]     NONE
 - 481: [ 10240,     1]     NONE
 - 482: [  2560,     1]     NONE
 - 483: [  2560,     1]     NONE
 - 484: [  2560,     1]     NONE
 - 485: [  2560,  2560]     NONE
 - 486: [  2560,     1]     NONE
 - 487: [  2560,  2560]     NONE
 - 488: [  2560,     1]     NONE
 - 489: [ 10240,  2560]     NONE
 - 490: [  2560, 10240]     NONE
 - 491: [  2560,     1]     NONE
 - 492: [  2560,  2560]     NONE
 - 493: [  2560,  2560]     NONE
 - 494: [  2560,     1]     NONE
 - 495: [  2560,     1]     NONE
 - 496: [  2560,     1]     NONE
 - 497: [  2560,     1]     NONE
 - 498: [ 10240,     1]     NONE
 - 499: [  2560,     1]     NONE
 - 500: [  2560,     1]     NONE
 - 501: [  2560,     1]     NONE
 - 502: [  2560,  2560]     NONE
 - 503: [  2560,     1]     NONE
 - 504: [  2560,  2560]     NONE
 - 505: [  2560,     1]     NONE
 - 506: [ 10240,  2560]     NONE
 - 507: [  2560, 10240]     NONE
 - 508: [  2560,     1]     NONE
 - 509: [  2560,  2560]     NONE
 - 510: [  2560,  2560]     NONE
 - 511: [  2560,     1]     NONE
 - 512: [  2560,     1]     NONE
 - 513: [  2560,     1]     NONE
 - 514: [  2560,     1]     NONE
 - 515: [ 10240,     1]     NONE
 - 516: [  2560,     1]     NONE
 - 517: [  2560,     1]     NONE
 - 518: [  2560,     1]     NONE
 - 519: [  2560,  2560]     NONE
 - 520: [  2560,     1]     NONE
 - 521: [  2560,  2560]     NONE
 - 522: [  2560,     1]     NONE
 - 523: [ 10240,  2560]     NONE
 - 524: [  2560, 10240]     NONE
 - 525: [  2560,     1]     NONE
 - 526: [  2560,  2560]     NONE
 - 527: [  2560,  2560]     NONE
 - 528: [  2560,     1]     NONE
 - 529: [  2560,     1]     NONE
 - 530: [  2560,     1]     NONE
 - 531: [  2560,     1]     NONE
 - 532: [ 10240,     1]     NONE
 - 533: [  2560,     1]     NONE
 - 534: [  2560,     1]     NONE
 - 535: [  2560,     1]     NONE
 - 536: [  2560,  2560]     NONE
 - 537: [  2560,     1]     NONE
 - 538: [  2560, 102400]     NONE
 - 539: [  2560,     1]     NONE
 - 540: [ 10240,  2560]     NONE
 - 541: [  2560, 10240]     NONE
 - 542: [  2560,     1]     NONE
 - 543: [  2560,  2560]     NONE
 - 544: [  2560,  2560]     NONE
 - 545: [  2560,     1]     NONE
 - 546: [  2560,     1]     NONE
 - 547: [  2560,     1]     NONE
 - 548: [  2560,     1]     NONE
 - 549: [ 10240,     1]     NONE
 - 550: [  2560,     1]     NONE
 - 551: [  2560,     1]     NONE
perf_total_per_op_us[             ADD] =   0.321 ms
perf_total_per_op_us[             MUL] =   0.065 ms
perf_total_per_op_us[            NORM] =   0.065 ms
perf_total_per_op_us[         MUL_MAT] =   0.257 ms
perf_total_per_op_us[           SCALE] =   0.032 ms
perf_total_per_op_us[             CPY] =   0.096 ms
perf_total_per_op_us[         RESHAPE] =   0.096 ms
perf_total_per_op_us[            VIEW] =   0.128 ms
perf_total_per_op_us[         PERMUTE] =   0.064 ms
perf_total_per_op_us[       TRANSPOSE] =   0.032 ms
perf_total_per_op_us[        GET_ROWS] =   0.001 ms
perf_total_per_op_us[   DIAG_MASK_INF] =   0.032 ms
perf_total_per_op_us[        SOFT_MAX] =   0.032 ms
perf_total_per_op_us[            ROPE] =   0.064 ms
perf_total_per_op_us[           UNARY] =   0.032 ms
========================================
user=== GRAPH ===
n_nodes = 1317
 -   0: [  2560,     1,     1]         GET_ROWS   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   1: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   2: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   3: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   4: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   5: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   6: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   7: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   8: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   9: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  10: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  11: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  12: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  13: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  14: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  15: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  16: [     2,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  17: [   128,     2,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  18: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  19: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  20: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  21: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  22: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  23: [     2,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  24: [     2,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  25: [     2,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  26: [     2,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  27: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  28: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  29: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  30: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  31: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  32: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  33: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  34: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  35: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  36: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  37: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  38: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  39: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  40: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  41: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  42: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  43: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  44: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  45: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  46: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  47: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  48: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  49: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  50: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  51: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  52: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  53: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  54: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  55: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  56: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  57: [     2,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  58: [   128,     2,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  59: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  60: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  61: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  62: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  63: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  64: [     2,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  65: [     2,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  66: [     2,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  67: [     2,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  68: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  69: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  70: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  71: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  72: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  73: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  74: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  75: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  76: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  77: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  78: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  79: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  80: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  81: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  82: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  83: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  84: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  85: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  86: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  87: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  88: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  89: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  90: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  91: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  92: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  93: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  94: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  95: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  96: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  97: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  98: [     2,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  99: [   128,     2,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 100: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 102: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 103: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 104: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 105: [     2,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 106: [     2,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 107: [     2,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 108: [     2,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 109: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 110: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 111: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 112: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 113: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 114: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 115: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 116: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 117: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 118: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 119: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 120: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 121: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 122: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 123: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 124: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 125: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 127: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 128: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 129: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 130: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 131: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 132: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 133: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 134: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 135: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 136: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 137: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 138: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 139: [     2,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 140: [   128,     2,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 141: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 143: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 144: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 145: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 146: [     2,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 147: [     2,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 148: [     2,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 149: [     2,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 150: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 151: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 152: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 153: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 154: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 155: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 156: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 157: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 158: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 159: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 160: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 161: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 162: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 163: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 164: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 165: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 166: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 168: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 169: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 170: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 171: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 172: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 173: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 174: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 175: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 176: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 177: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 178: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 179: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 180: [     2,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 181: [   128,     2,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 182: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 184: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 185: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 186: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 187: [     2,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 188: [     2,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 189: [     2,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 190: [     2,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 191: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 192: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 193: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 194: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 195: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 196: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 197: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 198: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 199: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 200: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 201: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 202: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 203: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 204: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 205: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 206: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 207: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 209: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 210: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 211: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 212: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 213: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 214: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 215: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 216: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 217: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 218: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 219: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 220: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 221: [     2,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 222: [   128,     2,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 223: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 225: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 226: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 227: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 228: [     2,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 229: [     2,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 230: [     2,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 231: [     2,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 232: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 233: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 234: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 235: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 236: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 237: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 238: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 239: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 240: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 241: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 242: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 243: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 244: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 245: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 246: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 247: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 248: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 250: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 251: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 252: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 253: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 254: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 255: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 256: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 257: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 258: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 259: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 260: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 261: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 262: [     2,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 263: [   128,     2,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 264: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 266: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 267: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 268: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 269: [     2,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 270: [     2,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 271: [     2,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 272: [     2,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 273: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 274: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 275: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 276: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 277: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 278: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 279: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 280: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 281: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 282: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 283: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 284: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 285: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 286: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 287: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 288: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 289: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 291: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 292: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 293: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 294: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 295: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 296: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 297: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 298: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 299: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 300: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 301: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 302: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 303: [     2,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 304: [   128,     2,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 305: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 307: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 308: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 309: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 310: [     2,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 311: [     2,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 312: [     2,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 313: [     2,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 314: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 315: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 316: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 317: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 318: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 319: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 320: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 321: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 322: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 323: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 324: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 325: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 326: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 327: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 328: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 329: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 330: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 331: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 332: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 333: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 334: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 335: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 336: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 337: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 338: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 339: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 340: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 341: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 342: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 343: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 344: [     2,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 345: [   128,     2,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 346: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 347: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 348: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 349: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 350: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 351: [     2,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 352: [     2,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 353: [     2,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 354: [     2,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 355: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 356: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 357: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 358: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 359: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 360: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 361: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 362: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 363: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 364: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 365: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 366: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 367: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 368: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 369: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 370: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 371: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 372: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 373: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 374: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 375: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 376: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 377: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 378: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 379: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 380: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 381: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 382: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 383: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 384: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 385: [     2,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 386: [   128,     2,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 387: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 388: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 389: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 390: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 391: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 392: [     2,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 393: [     2,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 394: [     2,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 395: [     2,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 396: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 397: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 398: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 399: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 400: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 401: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 402: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 403: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 404: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 405: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 406: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 407: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 408: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 409: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 410: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 411: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 412: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 413: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 414: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 415: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 416: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 417: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 418: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 419: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 420: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 421: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 422: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 423: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 424: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 425: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 426: [     2,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 427: [   128,     2,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 428: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 429: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 430: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 431: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 432: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 433: [     2,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 434: [     2,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 435: [     2,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 436: [     2,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 437: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 438: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 439: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 440: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 441: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 442: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 443: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 444: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 445: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 446: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 447: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 448: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 449: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 450: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 451: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 452: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 453: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 454: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 455: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 456: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 457: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 458: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 459: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 460: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 461: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 462: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 463: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 464: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 465: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 466: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 467: [     2,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 468: [   128,     2,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 469: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 470: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 471: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 472: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 473: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 474: [     2,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 475: [     2,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 476: [     2,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 477: [     2,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 478: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 479: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 480: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 481: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 482: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 483: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 484: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 485: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 486: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 487: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 488: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 489: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 490: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 491: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 492: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 493: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 494: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 495: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 496: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 497: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 498: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 499: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 500: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 501: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 502: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 503: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 504: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 505: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 506: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 507: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 508: [     2,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 509: [   128,     2,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 510: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 511: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 512: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 513: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 514: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 515: [     2,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 516: [     2,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 517: [     2,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 518: [     2,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 519: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 520: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 521: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 522: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 523: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 524: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 525: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 526: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 527: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 528: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 529: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 530: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 531: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 532: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 533: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 534: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 535: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 536: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 537: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 538: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 539: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 540: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 541: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 542: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 543: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 544: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 545: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 546: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 547: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 548: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 549: [     2,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 550: [   128,     2,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 551: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 552: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 553: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 554: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 555: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 556: [     2,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 557: [     2,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 558: [     2,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 559: [     2,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 560: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 561: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 562: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 563: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 564: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 565: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 566: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 567: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 568: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 569: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 570: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 571: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 572: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 573: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 574: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 575: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 576: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 577: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 578: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 579: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 580: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 581: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 582: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 583: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 584: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 585: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 586: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 587: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 588: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 589: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 590: [     2,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 591: [   128,     2,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 592: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 593: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 594: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 595: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 596: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 597: [     2,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 598: [     2,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 599: [     2,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 600: [     2,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 601: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 602: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 603: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 604: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 605: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 606: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 607: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 608: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 609: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 610: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 611: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 612: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 613: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 614: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 615: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 616: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 617: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 618: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 619: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 620: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 621: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 622: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 623: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 624: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 625: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 626: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 627: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 628: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 629: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 630: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 631: [     2,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 632: [   128,     2,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 633: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 634: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 635: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 636: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 637: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 638: [     2,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 639: [     2,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 640: [     2,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 641: [     2,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 642: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 643: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 644: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 645: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 646: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 647: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 648: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 649: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 650: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 651: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 652: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 653: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 654: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 655: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 656: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 657: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 658: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 659: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 660: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 661: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 662: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 663: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 664: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 665: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 666: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 667: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 668: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 669: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 670: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 671: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 672: [     2,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 673: [   128,     2,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 674: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 675: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 676: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 677: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 678: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 679: [     2,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 680: [     2,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 681: [     2,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 682: [     2,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 683: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 684: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 685: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 686: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 687: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 688: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 689: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 690: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 691: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 692: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 693: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 694: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 695: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 696: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 697: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 698: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 699: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 700: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 701: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 702: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 703: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 704: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 705: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 706: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 707: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 708: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 709: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 710: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 711: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 712: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 713: [     2,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 714: [   128,     2,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 715: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 716: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 717: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 718: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 719: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 720: [     2,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 721: [     2,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 722: [     2,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 723: [     2,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 724: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 725: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 726: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 727: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 728: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 729: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 730: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 731: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 732: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 733: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 734: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 735: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 736: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 737: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 738: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 739: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 740: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 741: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 742: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 743: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 744: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 745: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 746: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 747: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 748: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 749: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 750: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 751: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 752: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 753: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 754: [     2,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 755: [   128,     2,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 756: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 757: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 758: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 759: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 760: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 761: [     2,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 762: [     2,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 763: [     2,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 764: [     2,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 765: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 766: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 767: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 768: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 769: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 770: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 771: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 772: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 773: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 774: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 775: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 776: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 777: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 778: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 779: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 780: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 781: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 782: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 783: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 784: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 785: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 786: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 787: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 788: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 789: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 790: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 791: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 792: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 793: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 794: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 795: [     2,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 796: [   128,     2,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 797: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 798: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 799: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 800: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 801: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 802: [     2,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 803: [     2,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 804: [     2,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 805: [     2,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 806: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 807: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 808: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 809: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 810: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 811: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 812: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 813: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 814: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 815: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 816: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 817: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 818: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 819: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 820: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 821: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 822: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 823: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 824: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 825: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 826: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 827: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 828: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 829: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 830: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 831: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 832: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 833: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 834: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 835: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 836: [     2,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 837: [   128,     2,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 838: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 839: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 840: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 841: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 842: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 843: [     2,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 844: [     2,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 845: [     2,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 846: [     2,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 847: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 848: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 849: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 850: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 851: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 852: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 853: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 854: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 855: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 856: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 857: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 858: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 859: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 860: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 861: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 862: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 863: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 864: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 865: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 866: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 867: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 868: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 869: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 870: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 871: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 872: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 873: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 874: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 875: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 876: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 877: [     2,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 878: [   128,     2,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 879: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 880: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 881: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 882: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 883: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 884: [     2,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 885: [     2,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 886: [     2,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 887: [     2,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 888: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 889: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 890: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 891: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 892: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 893: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 894: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 895: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 896: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 897: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 898: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 899: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 900: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 901: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 902: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 903: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 904: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 905: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 906: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 907: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 908: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 909: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 910: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 911: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 912: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 913: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 914: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 915: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 916: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 917: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 918: [     2,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 919: [   128,     2,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 920: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 921: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 922: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 923: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 924: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 925: [     2,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 926: [     2,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 927: [     2,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 928: [     2,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 929: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 930: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 931: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 932: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 933: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 934: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 935: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 936: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 937: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 938: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 939: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 940: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 941: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 942: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 943: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 944: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 945: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 946: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 947: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 948: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 949: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 950: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 951: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 952: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 953: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 954: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 955: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 956: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 957: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 958: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 959: [     2,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 960: [   128,     2,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 961: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 962: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 963: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 964: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 965: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 966: [     2,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 967: [     2,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 968: [     2,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 969: [     2,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 970: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 971: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 972: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 973: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 974: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 975: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 976: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 977: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 978: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 979: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 980: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 981: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 982: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 983: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 984: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 985: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 986: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 987: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 988: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 989: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 990: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 991: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 992: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 993: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 994: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 995: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 996: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 997: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 998: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 999: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1000: [     2,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1001: [   128,     2,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1002: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1003: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1004: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1005: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1006: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1007: [     2,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1008: [     2,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1009: [     2,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1010: [     2,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1011: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1012: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1013: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1014: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1015: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1016: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1017: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1018: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1019: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1020: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1021: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1022: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1023: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1024: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1025: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1026: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1027: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1028: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1029: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1030: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1031: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1032: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1033: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1034: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1035: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1036: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1037: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1038: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1039: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1040: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1041: [     2,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1042: [   128,     2,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1043: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1044: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1045: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1046: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1047: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1048: [     2,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1049: [     2,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1050: [     2,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1051: [     2,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1052: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1053: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1054: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1055: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1056: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1057: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1058: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1059: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1060: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1061: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1062: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1063: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1064: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1065: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1066: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1067: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1068: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1069: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1070: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1071: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1072: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1073: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1074: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1075: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1076: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1077: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1078: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1079: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1080: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1081: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1082: [     2,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1083: [   128,     2,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1084: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1085: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1086: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1087: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1088: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1089: [     2,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1090: [     2,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1091: [     2,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1092: [     2,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1093: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1094: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1095: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1096: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1097: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1098: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1099: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1100: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1102: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1103: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1104: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1105: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1106: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1107: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1108: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1109: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1110: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1111: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1112: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1113: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1114: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1115: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1116: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1117: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1118: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1119: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1120: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1121: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1122: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1123: [     2,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1124: [   128,     2,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1125: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1127: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1128: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1129: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1130: [     2,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1131: [     2,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1132: [     2,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1133: [     2,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1134: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1135: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1136: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1137: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1138: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1139: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1140: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1141: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1143: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1144: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1145: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1146: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1147: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1148: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1149: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1150: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1151: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1152: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1153: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1154: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1155: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1156: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1157: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1158: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1159: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1160: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1161: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1162: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1163: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1164: [     2,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1165: [   128,     2,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1166: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1168: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1169: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1170: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1171: [     2,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1172: [     2,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1173: [     2,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1174: [     2,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1175: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1176: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1177: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1178: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1179: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1180: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1181: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1182: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1184: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1185: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1186: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1187: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1188: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1189: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1190: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1191: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1192: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1193: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1194: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1195: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1196: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1197: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1198: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1199: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1200: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1201: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1202: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1203: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1204: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1205: [     2,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1206: [   128,     2,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1207: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1209: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1210: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1211: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1212: [     2,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1213: [     2,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1214: [     2,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1215: [     2,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1216: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1217: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1218: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1219: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1220: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1221: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1222: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1223: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1225: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1226: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1227: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1228: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1229: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1230: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1231: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1232: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1233: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1234: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1235: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1236: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1237: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1238: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1239: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1240: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1241: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1242: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1243: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1244: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1245: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1246: [     2,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1247: [   128,     2,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1248: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1250: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1251: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1252: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1253: [     2,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1254: [     2,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1255: [     2,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1256: [     2,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1257: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1258: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1259: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1260: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1261: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1262: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1263: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1264: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1266: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1267: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1268: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1269: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1270: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1271: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1272: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1273: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1274: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1275: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1276: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1277: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1278: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1279: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1280: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1281: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1282: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1283: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1284: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1285: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1286: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1287: [     2,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1288: [   128,     2,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1289: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1291: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1292: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1293: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1294: [     2,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1295: [     2,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1296: [     2,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1297: [     2,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1298: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1299: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1300: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1301: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1302: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1303: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1304: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1305: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1307: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1308: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1309: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1310: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1311: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1312: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1313: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1314: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1315: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1316: [ 102400,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
n_leafs = 552
 -   0: [  2560,  2560]     NONE
 -   1: [  2560,     1]     NONE
 -   2: [  2560, 102400]     NONE
 -   3: [     1,     1]     NONE
 -   4: [  2560,     1]     NONE
 -   5: [  2560,     1]     NONE
 -   6: [ 41943040,     1]     NONE
 -   7: [  2560,  2560]     NONE
 -   8: [  2560,     1]     NONE
 -   9: [ 41943040,     1]     NONE
 -  10: [  2560,  2560]     NONE
 -  11: [  2560,     1]     NONE
 -  12: [ 10240,  2560]     NONE
 -  13: [  2560, 10240]     NONE
 -  14: [  2560,     1]     NONE
 -  15: [  2560,  2560]     NONE
 -  16: [  2560,  2560]     NONE
 -  17: [  2560,     1]     NONE
 -  18: [     1,     1]     NONE
 -  19: [  2560,     1]     NONE
 -  20: [  2560,     1]     NONE
 -  21: [  2560,     1]     NONE
 -  22: [ 10240,     1]     NONE
 -  23: [  2560,     1]     NONE
 -  24: [  2560,     1]     NONE
 -  25: [  2560,     1]     NONE
 -  26: [  2560,  2560]     NONE
 -  27: [  2560,     1]     NONE
 -  28: [  2560,  2560]     NONE
 -  29: [  2560,     1]     NONE
 -  30: [ 10240,  2560]     NONE
 -  31: [  2560, 10240]     NONE
 -  32: [  2560,     1]     NONE
 -  33: [  2560,  2560]     NONE
 -  34: [  2560,  2560]     NONE
 -  35: [  2560,     1]     NONE
 -  36: [  2560,     1]     NONE
 -  37: [  2560,     1]     NONE
 -  38: [  2560,     1]     NONE
 -  39: [ 10240,     1]     NONE
 -  40: [  2560,     1]     NONE
 -  41: [  2560,     1]     NONE
 -  42: [  2560,     1]     NONE
 -  43: [  2560,  2560]     NONE
 -  44: [  2560,     1]     NONE
 -  45: [  2560,  2560]     NONE
 -  46: [  2560,     1]     NONE
 -  47: [ 10240,  2560]     NONE
 -  48: [  2560, 10240]     NONE
 -  49: [  2560,     1]     NONE
 -  50: [  2560,  2560]     NONE
 -  51: [  2560,  2560]     NONE
 -  52: [  2560,     1]     NONE
 -  53: [  2560,     1]     NONE
 -  54: [  2560,     1]     NONE
 -  55: [  2560,     1]     NONE
 -  56: [ 10240,     1]     NONE
 -  57: [  2560,     1]     NONE
 -  58: [  2560,     1]     NONE
 -  59: [  2560,     1]     NONE
 -  60: [  2560,  2560]     NONE
 -  61: [  2560,     1]     NONE
 -  62: [  2560,  2560]     NONE
 -  63: [  2560,     1]     NONE
 -  64: [ 10240,  2560]     NONE
 -  65: [  2560, 10240]     NONE
 -  66: [  2560,     1]     NONE
 -  67: [  2560,  2560]     NONE
 -  68: [  2560,  2560]     NONE
 -  69: [  2560,     1]     NONE
 -  70: [  2560,     1]     NONE
 -  71: [  2560,     1]     NONE
 -  72: [  2560,     1]     NONE
 -  73: [ 10240,     1]     NONE
 -  74: [  2560,     1]     NONE
 -  75: [  2560,     1]     NONE
 -  76: [  2560,     1]     NONE
 -  77: [  2560,  2560]     NONE
 -  78: [  2560,     1]     NONE
 -  79: [  2560,  2560]     NONE
 -  80: [  2560,     1]     NONE
 -  81: [ 10240,  2560]     NONE
 -  82: [  2560, 10240]     NONE
 -  83: [  2560,     1]     NONE
 -  84: [  2560,  2560]     NONE
 -  85: [  2560,  2560]     NONE
 -  86: [  2560,     1]     NONE
 -  87: [  2560,     1]     NONE
 -  88: [  2560,     1]     NONE
 -  89: [  2560,     1]     NONE
 -  90: [ 10240,     1]     NONE
 -  91: [  2560,     1]     NONE
 -  92: [  2560,     1]     NONE
 -  93: [  2560,     1]     NONE
 -  94: [  2560,  2560]     NONE
 -  95: [  2560,     1]     NONE
 -  96: [  2560,  2560]     NONE
 -  97: [  2560,     1]     NONE
 -  98: [ 10240,  2560]     NONE
 -  99: [  2560, 10240]     NONE
 - 100: [  2560,     1]     NONE
 - 101: [  2560,  2560]     NONE
 - 102: [  2560,  2560]     NONE
 - 103: [  2560,     1]     NONE
 - 104: [  2560,     1]     NONE
 - 105: [  2560,     1]     NONE
 - 106: [  2560,     1]     NONE
 - 107: [ 10240,     1]     NONE
 - 108: [  2560,     1]     NONE
 - 109: [  2560,     1]     NONE
 - 110: [  2560,     1]     NONE
 - 111: [  2560,  2560]     NONE
 - 112: [  2560,     1]     NONE
 - 113: [  2560,  2560]     NONE
 - 114: [  2560,     1]     NONE
 - 115: [ 10240,  2560]     NONE
 - 116: [  2560, 10240]     NONE
 - 117: [  2560,     1]     NONE
 - 118: [  2560,  2560]     NONE
 - 119: [  2560,  2560]     NONE
 - 120: [  2560,     1]     NONE
 - 121: [  2560,     1]     NONE
 - 122: [  2560,     1]     NONE
 - 123: [  2560,     1]     NONE
 - 124: [ 10240,     1]     NONE
 - 125: [  2560,     1]     NONE
 - 126: [  2560,     1]     NONE
 - 127: [  2560,     1]     NONE
 - 128: [  2560,  2560]     NONE
 - 129: [  2560,     1]     NONE
 - 130: [  2560,  2560]     NONE
 - 131: [  2560,     1]     NONE
 - 132: [ 10240,  2560]     NONE
 - 133: [  2560, 10240]     NONE
 - 134: [  2560,     1]     NONE
 - 135: [  2560,  2560]     NONE
 - 136: [  2560,  2560]     NONE
 - 137: [  2560,     1]     NONE
 - 138: [  2560,     1]     NONE
 - 139: [  2560,     1]     NONE
 - 140: [  2560,     1]     NONE
 - 141: [ 10240,     1]     NONE
 - 142: [  2560,     1]     NONE
 - 143: [  2560,     1]     NONE
 - 144: [  2560,     1]     NONE
 - 145: [  2560,  2560]     NONE
 - 146: [  2560,     1]     NONE
 - 147: [  2560,  2560]     NONE
 - 148: [  2560,     1]     NONE
 - 149: [ 10240,  2560]     NONE
 - 150: [  2560, 10240]     NONE
 - 151: [  2560,     1]     NONE
 - 152: [  2560,  2560]     NONE
 - 153: [  2560,  2560]     NONE
 - 154: [  2560,     1]     NONE
 - 155: [  2560,     1]     NONE
 - 156: [  2560,     1]     NONE
 - 157: [  2560,     1]     NONE
 - 158: [ 10240,     1]     NONE
 - 159: [  2560,     1]     NONE
 - 160: [  2560,     1]     NONE
 - 161: [  2560,     1]     NONE
 - 162: [  2560,  2560]     NONE
 - 163: [  2560,     1]     NONE
 - 164: [  2560,  2560]     NONE
 - 165: [  2560,     1]     NONE
 - 166: [ 10240,  2560]     NONE
 - 167: [  2560, 10240]     NONE
 - 168: [  2560,     1]     NONE
 - 169: [  2560,  2560]     NONE
 - 170: [  2560,  2560]     NONE
 - 171: [  2560,     1]     NONE
 - 172: [  2560,     1]     NONE
 - 173: [  2560,     1]     NONE
 - 174: [  2560,     1]     NONE
 - 175: [ 10240,     1]     NONE
 - 176: [  2560,     1]     NONE
 - 177: [  2560,     1]     NONE
 - 178: [  2560,     1]     NONE
 - 179: [  2560,  2560]     NONE
 - 180: [  2560,     1]     NONE
 - 181: [  2560,  2560]     NONE
 - 182: [  2560,     1]     NONE
 - 183: [ 10240,  2560]     NONE
 - 184: [  2560, 10240]     NONE
 - 185: [  2560,     1]     NONE
 - 186: [  2560,  2560]     NONE
 - 187: [  2560,  2560]     NONE
 - 188: [  2560,     1]     NONE
 - 189: [  2560,     1]     NONE
 - 190: [  2560,     1]     NONE
 - 191: [  2560,     1]     NONE
 - 192: [ 10240,     1]     NONE
 - 193: [  2560,     1]     NONE
 - 194: [  2560,     1]     NONE
 - 195: [  2560,     1]     NONE
 - 196: [  2560,  2560]     NONE
 - 197: [  2560,     1]     NONE
 - 198: [  2560,  2560]     NONE
 - 199: [  2560,     1]     NONE
 - 200: [ 10240,  2560]     NONE
 - 201: [  2560, 10240]     NONE
 - 202: [  2560,     1]     NONE
 - 203: [  2560,  2560]     NONE
 - 204: [  2560,  2560]     NONE
 - 205: [  2560,     1]     NONE
 - 206: [  2560,     1]     NONE
 - 207: [  2560,     1]     NONE
 - 208: [  2560,     1]     NONE
 - 209: [ 10240,     1]     NONE
 - 210: [  2560,     1]     NONE
 - 211: [  2560,     1]     NONE
 - 212: [  2560,     1]     NONE
 - 213: [  2560,  2560]     NONE
 - 214: [  2560,     1]     NONE
 - 215: [  2560,  2560]     NONE
 - 216: [  2560,     1]     NONE
 - 217: [ 10240,  2560]     NONE
 - 218: [  2560, 10240]     NONE
 - 219: [  2560,     1]     NONE
 - 220: [  2560,  2560]     NONE
 - 221: [  2560,  2560]     NONE
 - 222: [  2560,     1]     NONE
 - 223: [  2560,     1]     NONE
 - 224: [  2560,     1]     NONE
 - 225: [  2560,     1]     NONE
 - 226: [ 10240,     1]     NONE
 - 227: [  2560,     1]     NONE
 - 228: [  2560,     1]     NONE
 - 229: [  2560,     1]     NONE
 - 230: [  2560,  2560]     NONE
 - 231: [  2560,     1]     NONE
 - 232: [  2560,  2560]     NONE
 - 233: [  2560,     1]     NONE
 - 234: [ 10240,  2560]     NONE
 - 235: [  2560, 10240]     NONE
 - 236: [  2560,     1]     NONE
 - 237: [  2560,  2560]     NONE
 - 238: [  2560,  2560]     NONE
 - 239: [  2560,     1]     NONE
 - 240: [  2560,     1]     NONE
 - 241: [  2560,     1]     NONE
 - 242: [  2560,     1]     NONE
 - 243: [ 10240,     1]     NONE
 - 244: [  2560,     1]     NONE
 - 245: [  2560,     1]     NONE
 - 246: [  2560,     1]     NONE
 - 247: [  2560,  2560]     NONE
 - 248: [  2560,     1]     NONE
 - 249: [  2560,  2560]     NONE
 - 250: [  2560,     1]     NONE
 - 251: [ 10240,  2560]     NONE
 - 252: [  2560, 10240]     NONE
 - 253: [  2560,     1]     NONE
 - 254: [  2560,  2560]     NONE
 - 255: [  2560,  2560]     NONE
 - 256: [  2560,     1]     NONE
 - 257: [  2560,     1]     NONE
 - 258: [  2560,     1]     NONE
 - 259: [  2560,     1]     NONE
 - 260: [ 10240,     1]     NONE
 - 261: [  2560,     1]     NONE
 - 262: [  2560,     1]     NONE
 - 263: [  2560,     1]     NONE
 - 264: [  2560,  2560]     NONE
 - 265: [  2560,     1]     NONE
 - 266: [  2560,  2560]     NONE
 - 267: [  2560,     1]     NONE
 - 268: [ 10240,  2560]     NONE
 - 269: [  2560, 10240]     NONE
 - 270: [  2560,     1]     NONE
 - 271: [  2560,  2560]     NONE
 - 272: [  2560,  2560]     NONE
 - 273: [  2560,     1]     NONE
 - 274: [  2560,     1]     NONE
 - 275: [  2560,     1]     NONE
 - 276: [  2560,     1]     NONE
 - 277: [ 10240,     1]     NONE
 - 278: [  2560,     1]     NONE
 - 279: [  2560,     1]     NONE
 - 280: [  2560,     1]     NONE
 - 281: [  2560,  2560]     NONE
 - 282: [  2560,     1]     NONE
 - 283: [  2560,  2560]     NONE
 - 284: [  2560,     1]     NONE
 - 285: [ 10240,  2560]     NONE
 - 286: [  2560, 10240]     NONE
 - 287: [  2560,     1]     NONE
 - 288: [  2560,  2560]     NONE
 - 289: [  2560,  2560]     NONE
 - 290: [  2560,     1]     NONE
 - 291: [  2560,     1]     NONE
 - 292: [  2560,     1]     NONE
 - 293: [  2560,     1]     NONE
 - 294: [ 10240,     1]     NONE
 - 295: [  2560,     1]     NONE
 - 296: [  2560,     1]     NONE
 - 297: [  2560,     1]     NONE
 - 298: [  2560,  2560]     NONE
 - 299: [  2560,     1]     NONE
 - 300: [  2560,  2560]     NONE
 - 301: [  2560,     1]     NONE
 - 302: [ 10240,  2560]     NONE
 - 303: [  2560, 10240]     NONE
 - 304: [  2560,     1]     NONE
 - 305: [  2560,  2560]     NONE
 - 306: [  2560,  2560]     NONE
 - 307: [  2560,     1]     NONE
 - 308: [  2560,     1]     NONE
 - 309: [  2560,     1]     NONE
 - 310: [  2560,     1]     NONE
 - 311: [ 10240,     1]     NONE
 - 312: [  2560,     1]     NONE
 - 313: [  2560,     1]     NONE
 - 314: [  2560,     1]     NONE
 - 315: [  2560,  2560]     NONE
 - 316: [  2560,     1]     NONE
 - 317: [  2560,  2560]     NONE
 - 318: [  2560,     1]     NONE
 - 319: [ 10240,  2560]     NONE
 - 320: [  2560, 10240]     NONE
 - 321: [  2560,     1]     NONE
 - 322: [  2560,  2560]     NONE
 - 323: [  2560,  2560]     NONE
 - 324: [  2560,     1]     NONE
 - 325: [  2560,     1]     NONE
 - 326: [  2560,     1]     NONE
 - 327: [  2560,     1]     NONE
 - 328: [ 10240,     1]     NONE
 - 329: [  2560,     1]     NONE
 - 330: [  2560,     1]     NONE
 - 331: [  2560,     1]     NONE
 - 332: [  2560,  2560]     NONE
 - 333: [  2560,     1]     NONE
 - 334: [  2560,  2560]     NONE
 - 335: [  2560,     1]     NONE
 - 336: [ 10240,  2560]     NONE
 - 337: [  2560, 10240]     NONE
 - 338: [  2560,     1]     NONE
 - 339: [  2560,  2560]     NONE
 - 340: [  2560,  2560]     NONE
 - 341: [  2560,     1]     NONE
 - 342: [  2560,     1]     NONE
 - 343: [  2560,     1]     NONE
 - 344: [  2560,     1]     NONE
 - 345: [ 10240,     1]     NONE
 - 346: [  2560,     1]     NONE
 - 347: [  2560,     1]     NONE
 - 348: [  2560,     1]     NONE
 - 349: [  2560,  2560]     NONE
 - 350: [  2560,     1]     NONE
 - 351: [  2560,  2560]     NONE
 - 352: [  2560,     1]     NONE
 - 353: [ 10240,  2560]     NONE
 - 354: [  2560, 10240]     NONE
 - 355: [  2560,     1]     NONE
 - 356: [  2560,  2560]     NONE
 - 357: [  2560,  2560]     NONE
 - 358: [  2560,     1]     NONE
 - 359: [  2560,     1]     NONE
 - 360: [  2560,     1]     NONE
 - 361: [  2560,     1]     NONE
 - 362: [ 10240,     1]     NONE
 - 363: [  2560,     1]     NONE
 - 364: [  2560,     1]     NONE
 - 365: [  2560,     1]     NONE
 - 366: [  2560,  2560]     NONE
 - 367: [  2560,     1]     NONE
 - 368: [  2560,  2560]     NONE
 - 369: [  2560,     1]     NONE
 - 370: [ 10240,  2560]     NONE
 - 371: [  2560, 10240]     NONE
 - 372: [  2560,     1]     NONE
 - 373: [  2560,  2560]     NONE
 - 374: [  2560,  2560]     NONE
 - 375: [  2560,     1]     NONE
 - 376: [  2560,     1]     NONE
 - 377: [  2560,     1]     NONE
 - 378: [  2560,     1]     NONE
 - 379: [ 10240,     1]     NONE
 - 380: [  2560,     1]     NONE
 - 381: [  2560,     1]     NONE
 - 382: [  2560,     1]     NONE
 - 383: [  2560,  2560]     NONE
 - 384: [  2560,     1]     NONE
 - 385: [  2560,  2560]     NONE
 - 386: [  2560,     1]     NONE
 - 387: [ 10240,  2560]     NONE
 - 388: [  2560, 10240]     NONE
 - 389: [  2560,     1]     NONE
 - 390: [  2560,  2560]     NONE
 - 391: [  2560,  2560]     NONE
 - 392: [  2560,     1]     NONE
 - 393: [  2560,     1]     NONE
 - 394: [  2560,     1]     NONE
 - 395: [  2560,     1]     NONE
 - 396: [ 10240,     1]     NONE
 - 397: [  2560,     1]     NONE
 - 398: [  2560,     1]     NONE
 - 399: [  2560,     1]     NONE
 - 400: [  2560,  2560]     NONE
 - 401: [  2560,     1]     NONE
 - 402: [  2560,  2560]     NONE
 - 403: [  2560,     1]     NONE
 - 404: [ 10240,  2560]     NONE
 - 405: [  2560, 10240]     NONE
 - 406: [  2560,     1]     NONE
 - 407: [  2560,  2560]     NONE
 - 408: [  2560,  2560]     NONE
 - 409: [  2560,     1]     NONE
 - 410: [  2560,     1]     NONE
 - 411: [  2560,     1]     NONE
 - 412: [  2560,     1]     NONE
 - 413: [ 10240,     1]     NONE
 - 414: [  2560,     1]     NONE
 - 415: [  2560,     1]     NONE
 - 416: [  2560,     1]     NONE
 - 417: [  2560,  2560]     NONE
 - 418: [  2560,     1]     NONE
 - 419: [  2560,  2560]     NONE
 - 420: [  2560,     1]     NONE
 - 421: [ 10240,  2560]     NONE
 - 422: [  2560, 10240]     NONE
 - 423: [  2560,     1]     NONE
 - 424: [  2560,  2560]     NONE
 - 425: [  2560,  2560]     NONE
 - 426: [  2560,     1]     NONE
 - 427: [  2560,     1]     NONE
 - 428: [  2560,     1]     NONE
 - 429: [  2560,     1]     NONE
 - 430: [ 10240,     1]     NONE
 - 431: [  2560,     1]     NONE
 - 432: [  2560,     1]     NONE
 - 433: [  2560,     1]     NONE
 - 434: [  2560,  2560]     NONE
 - 435: [  2560,     1]     NONE
 - 436: [  2560,  2560]     NONE
 - 437: [  2560,     1]     NONE
 - 438: [ 10240,  2560]     NONE
 - 439: [  2560, 10240]     NONE
 - 440: [  2560,     1]     NONE
 - 441: [  2560,  2560]     NONE
 - 442: [  2560,  2560]     NONE
 - 443: [  2560,     1]     NONE
 - 444: [  2560,     1]     NONE
 - 445: [  2560,     1]     NONE
 - 446: [  2560,     1]     NONE
 - 447: [ 10240,     1]     NONE
 - 448: [  2560,     1]     NONE
 - 449: [  2560,     1]     NONE
 - 450: [  2560,     1]     NONE
 - 451: [  2560,  2560]     NONE
 - 452: [  2560,     1]     NONE
 - 453: [  2560,  2560]     NONE
 - 454: [  2560,     1]     NONE
 - 455: [ 10240,  2560]     NONE
 - 456: [  2560, 10240]     NONE
 - 457: [  2560,     1]     NONE
 - 458: [  2560,  2560]     NONE
 - 459: [  2560,  2560]     NONE
 - 460: [  2560,     1]     NONE
 - 461: [  2560,     1]     NONE
 - 462: [  2560,     1]     NONE
 - 463: [  2560,     1]     NONE
 - 464: [ 10240,     1]     NONE
 - 465: [  2560,     1]     NONE
 - 466: [  2560,     1]     NONE
 - 467: [  2560,     1]     NONE
 - 468: [  2560,  2560]     NONE
 - 469: [  2560,     1]     NONE
 - 470: [  2560,  2560]     NONE
 - 471: [  2560,     1]     NONE
 - 472: [ 10240,  2560]     NONE
 - 473: [  2560, 10240]     NONE
 - 474: [  2560,     1]     NONE
 - 475: [  2560,  2560]     NONE
 - 476: [  2560,  2560]     NONE
 - 477: [  2560,     1]     NONE
 - 478: [  2560,     1]     NONE
 - 479: [  2560,     1]     NONE
 - 480: [  2560,     1]     NONE
 - 481: [ 10240,     1]     NONE
 - 482: [  2560,     1]     NONE
 - 483: [  2560,     1]     NONE
 - 484: [  2560,     1]     NONE
 - 485: [  2560,  2560]     NONE
 - 486: [  2560,     1]     NONE
 - 487: [  2560,  2560]     NONE
 - 488: [  2560,     1]     NONE
 - 489: [ 10240,  2560]     NONE
 - 490: [  2560, 10240]     NONE
 - 491: [  2560,     1]     NONE
 - 492: [  2560,  2560]     NONE
 - 493: [  2560,  2560]     NONE
 - 494: [  2560,     1]     NONE
 - 495: [  2560,     1]     NONE
 - 496: [  2560,     1]     NONE
 - 497: [  2560,     1]     NONE
 - 498: [ 10240,     1]     NONE
 - 499: [  2560,     1]     NONE
 - 500: [  2560,     1]     NONE
 - 501: [  2560,     1]     NONE
 - 502: [  2560,  2560]     NONE
 - 503: [  2560,     1]     NONE
 - 504: [  2560,  2560]     NONE
 - 505: [  2560,     1]     NONE
 - 506: [ 10240,  2560]     NONE
 - 507: [  2560, 10240]     NONE
 - 508: [  2560,     1]     NONE
 - 509: [  2560,  2560]     NONE
 - 510: [  2560,  2560]     NONE
 - 511: [  2560,     1]     NONE
 - 512: [  2560,     1]     NONE
 - 513: [  2560,     1]     NONE
 - 514: [  2560,     1]     NONE
 - 515: [ 10240,     1]     NONE
 - 516: [  2560,     1]     NONE
 - 517: [  2560,     1]     NONE
 - 518: [  2560,     1]     NONE
 - 519: [  2560,  2560]     NONE
 - 520: [  2560,     1]     NONE
 - 521: [  2560,  2560]     NONE
 - 522: [  2560,     1]     NONE
 - 523: [ 10240,  2560]     NONE
 - 524: [  2560, 10240]     NONE
 - 525: [  2560,     1]     NONE
 - 526: [  2560,  2560]     NONE
 - 527: [  2560,  2560]     NONE
 - 528: [  2560,     1]     NONE
 - 529: [  2560,     1]     NONE
 - 530: [  2560,     1]     NONE
 - 531: [  2560,     1]     NONE
 - 532: [ 10240,     1]     NONE
 - 533: [  2560,     1]     NONE
 - 534: [  2560,     1]     NONE
 - 535: [  2560,     1]     NONE
 - 536: [  2560,  2560]     NONE
 - 537: [  2560,     1]     NONE
 - 538: [  2560, 102400]     NONE
 - 539: [  2560,     1]     NONE
 - 540: [ 10240,  2560]     NONE
 - 541: [  2560, 10240]     NONE
 - 542: [  2560,     1]     NONE
 - 543: [  2560,  2560]     NONE
 - 544: [  2560,  2560]     NONE
 - 545: [  2560,     1]     NONE
 - 546: [  2560,     1]     NONE
 - 547: [  2560,     1]     NONE
 - 548: [  2560,     1]     NONE
 - 549: [ 10240,     1]     NONE
 - 550: [  2560,     1]     NONE
 - 551: [  2560,     1]     NONE
perf_total_per_op_us[             ADD] =   0.321 ms
perf_total_per_op_us[             MUL] =   0.065 ms
perf_total_per_op_us[            NORM] =   0.065 ms
perf_total_per_op_us[         MUL_MAT] =   0.257 ms
perf_total_per_op_us[           SCALE] =   0.032 ms
perf_total_per_op_us[             CPY] =   0.096 ms
perf_total_per_op_us[         RESHAPE] =   0.096 ms
perf_total_per_op_us[            VIEW] =   0.128 ms
perf_total_per_op_us[         PERMUTE] =   0.064 ms
perf_total_per_op_us[       TRANSPOSE] =   0.032 ms
perf_total_per_op_us[        GET_ROWS] =   0.001 ms
perf_total_per_op_us[   DIAG_MASK_INF] =   0.032 ms
perf_total_per_op_us[        SOFT_MAX] =   0.032 ms
perf_total_per_op_us[            ROPE] =   0.064 ms
perf_total_per_op_us[           UNARY] =   0.032 ms
========================================
商品=== GRAPH ===
n_nodes = 1317
 -   0: [  2560,     1,     1]         GET_ROWS   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   1: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   2: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   3: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   4: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   5: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   6: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   7: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   8: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   9: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  10: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  11: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  12: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  13: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  14: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  15: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  16: [     3,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  17: [   128,     3,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  18: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  19: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  20: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  21: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  22: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  23: [     3,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  24: [     3,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  25: [     3,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  26: [     3,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  27: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  28: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  29: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  30: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  31: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  32: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  33: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  34: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  35: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  36: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  37: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  38: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  39: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  40: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  41: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  42: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  43: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  44: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  45: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  46: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  47: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  48: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  49: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  50: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  51: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  52: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  53: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  54: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  55: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  56: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  57: [     3,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  58: [   128,     3,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  59: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  60: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  61: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  62: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  63: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  64: [     3,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  65: [     3,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  66: [     3,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  67: [     3,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  68: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  69: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  70: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  71: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  72: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  73: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  74: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  75: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  76: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  77: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  78: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  79: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  80: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  81: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  82: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  83: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  84: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  85: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  86: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  87: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  88: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  89: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  90: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  91: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  92: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  93: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  94: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  95: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  96: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  97: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  98: [     3,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  99: [   128,     3,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 100: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 102: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 103: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 104: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 105: [     3,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 106: [     3,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 107: [     3,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 108: [     3,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 109: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 110: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 111: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 112: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 113: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 114: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 115: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 116: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 117: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 118: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 119: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 120: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 121: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 122: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 123: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 124: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 125: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 127: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 128: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 129: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 130: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 131: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 132: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 133: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 134: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 135: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 136: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 137: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 138: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 139: [     3,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 140: [   128,     3,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 141: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 143: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 144: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 145: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 146: [     3,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 147: [     3,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 148: [     3,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 149: [     3,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 150: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 151: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 152: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 153: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 154: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 155: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 156: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 157: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 158: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 159: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 160: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 161: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 162: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 163: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 164: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 165: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 166: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 168: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 169: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 170: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 171: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 172: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 173: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 174: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 175: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 176: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 177: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 178: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 179: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 180: [     3,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 181: [   128,     3,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 182: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 184: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 185: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 186: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 187: [     3,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 188: [     3,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 189: [     3,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 190: [     3,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 191: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 192: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 193: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 194: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 195: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 196: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 197: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 198: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 199: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 200: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 201: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 202: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 203: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 204: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 205: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 206: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 207: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 209: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 210: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 211: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 212: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 213: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 214: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 215: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 216: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 217: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 218: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 219: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 220: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 221: [     3,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 222: [   128,     3,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 223: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 225: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 226: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 227: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 228: [     3,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 229: [     3,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 230: [     3,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 231: [     3,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 232: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 233: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 234: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 235: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 236: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 237: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 238: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 239: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 240: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 241: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 242: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 243: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 244: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 245: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 246: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 247: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 248: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 250: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 251: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 252: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 253: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 254: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 255: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 256: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 257: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 258: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 259: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 260: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 261: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 262: [     3,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 263: [   128,     3,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 264: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 266: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 267: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 268: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 269: [     3,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 270: [     3,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 271: [     3,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 272: [     3,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 273: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 274: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 275: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 276: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 277: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 278: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 279: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 280: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 281: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 282: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 283: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 284: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 285: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 286: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 287: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 288: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 289: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 291: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 292: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 293: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 294: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 295: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 296: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 297: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 298: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 299: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 300: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 301: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 302: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 303: [     3,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 304: [   128,     3,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 305: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 307: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 308: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 309: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 310: [     3,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 311: [     3,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 312: [     3,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 313: [     3,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 314: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 315: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 316: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 317: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 318: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 319: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 320: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 321: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 322: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 323: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 324: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 325: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 326: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 327: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 328: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 329: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 330: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 331: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 332: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 333: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 334: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 335: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 336: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 337: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 338: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 339: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 340: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 341: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 342: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 343: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 344: [     3,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 345: [   128,     3,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 346: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 347: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 348: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 349: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 350: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 351: [     3,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 352: [     3,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 353: [     3,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 354: [     3,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 355: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 356: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 357: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 358: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 359: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 360: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 361: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 362: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 363: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 364: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 365: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 366: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 367: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 368: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 369: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 370: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 371: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 372: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 373: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 374: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 375: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 376: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 377: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 378: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 379: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 380: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 381: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 382: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 383: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 384: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 385: [     3,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 386: [   128,     3,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 387: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 388: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 389: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 390: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 391: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 392: [     3,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 393: [     3,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 394: [     3,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 395: [     3,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 396: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 397: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 398: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 399: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 400: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 401: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 402: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 403: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 404: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 405: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 406: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 407: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 408: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 409: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 410: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 411: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 412: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 413: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 414: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 415: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 416: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 417: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 418: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 419: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 420: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 421: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 422: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 423: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 424: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 425: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 426: [     3,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 427: [   128,     3,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 428: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 429: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 430: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 431: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 432: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 433: [     3,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 434: [     3,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 435: [     3,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 436: [     3,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 437: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 438: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 439: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 440: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 441: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 442: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 443: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 444: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 445: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 446: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 447: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 448: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 449: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 450: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 451: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 452: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 453: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 454: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 455: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 456: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 457: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 458: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 459: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 460: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 461: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 462: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 463: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 464: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 465: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 466: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 467: [     3,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 468: [   128,     3,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 469: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 470: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 471: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 472: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 473: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 474: [     3,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 475: [     3,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 476: [     3,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 477: [     3,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 478: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 479: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 480: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 481: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 482: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 483: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 484: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 485: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 486: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 487: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 488: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 489: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 490: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 491: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 492: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 493: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 494: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 495: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 496: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 497: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 498: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 499: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 500: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 501: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 502: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 503: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 504: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 505: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 506: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 507: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 508: [     3,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 509: [   128,     3,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 510: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 511: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 512: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 513: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 514: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 515: [     3,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 516: [     3,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 517: [     3,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 518: [     3,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 519: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 520: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 521: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 522: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 523: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 524: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 525: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 526: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 527: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 528: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 529: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 530: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 531: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 532: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 533: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 534: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 535: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 536: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 537: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 538: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 539: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 540: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 541: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 542: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 543: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 544: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 545: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 546: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 547: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 548: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 549: [     3,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 550: [   128,     3,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 551: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 552: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 553: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 554: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 555: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 556: [     3,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 557: [     3,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 558: [     3,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 559: [     3,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 560: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 561: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 562: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 563: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 564: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 565: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 566: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 567: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 568: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 569: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 570: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 571: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 572: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 573: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 574: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 575: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 576: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 577: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 578: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 579: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 580: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 581: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 582: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 583: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 584: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 585: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 586: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 587: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 588: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 589: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 590: [     3,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 591: [   128,     3,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 592: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 593: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 594: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 595: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 596: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 597: [     3,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 598: [     3,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 599: [     3,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 600: [     3,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 601: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 602: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 603: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 604: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 605: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 606: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 607: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 608: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 609: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 610: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 611: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 612: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 613: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 614: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 615: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 616: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 617: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 618: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 619: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 620: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 621: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 622: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 623: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 624: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 625: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 626: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 627: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 628: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 629: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 630: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 631: [     3,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 632: [   128,     3,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 633: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 634: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 635: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 636: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 637: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 638: [     3,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 639: [     3,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 640: [     3,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 641: [     3,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 642: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 643: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 644: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 645: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 646: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 647: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 648: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 649: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 650: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 651: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 652: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 653: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 654: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 655: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 656: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 657: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 658: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 659: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 660: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 661: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 662: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 663: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 664: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 665: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 666: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 667: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 668: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 669: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 670: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 671: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 672: [     3,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 673: [   128,     3,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 674: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 675: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 676: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 677: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 678: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 679: [     3,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 680: [     3,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 681: [     3,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 682: [     3,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 683: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 684: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 685: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 686: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 687: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 688: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 689: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 690: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 691: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 692: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 693: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 694: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 695: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 696: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 697: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 698: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 699: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 700: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 701: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 702: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 703: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 704: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 705: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 706: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 707: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 708: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 709: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 710: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 711: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 712: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 713: [     3,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 714: [   128,     3,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 715: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 716: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 717: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 718: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 719: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 720: [     3,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 721: [     3,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 722: [     3,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 723: [     3,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 724: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 725: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 726: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 727: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 728: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 729: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 730: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 731: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 732: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 733: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 734: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 735: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 736: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 737: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 738: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 739: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 740: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 741: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 742: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 743: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 744: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 745: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 746: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 747: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 748: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 749: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 750: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 751: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 752: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 753: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 754: [     3,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 755: [   128,     3,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 756: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 757: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 758: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 759: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 760: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 761: [     3,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 762: [     3,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 763: [     3,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 764: [     3,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 765: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 766: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 767: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 768: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 769: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 770: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 771: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 772: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 773: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 774: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 775: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 776: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 777: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 778: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 779: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 780: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 781: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 782: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 783: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 784: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 785: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 786: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 787: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 788: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 789: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 790: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 791: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 792: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 793: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 794: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 795: [     3,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 796: [   128,     3,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 797: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 798: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 799: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 800: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 801: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 802: [     3,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 803: [     3,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 804: [     3,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 805: [     3,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 806: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 807: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 808: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 809: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 810: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 811: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 812: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 813: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 814: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 815: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 816: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 817: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 818: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 819: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 820: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 821: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 822: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 823: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 824: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 825: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 826: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 827: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 828: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 829: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 830: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 831: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 832: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 833: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 834: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 835: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 836: [     3,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 837: [   128,     3,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 838: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 839: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 840: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 841: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 842: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 843: [     3,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 844: [     3,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 845: [     3,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 846: [     3,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 847: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 848: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 849: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 850: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 851: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 852: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 853: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 854: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 855: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 856: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 857: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 858: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 859: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 860: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 861: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 862: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 863: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 864: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 865: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 866: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 867: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 868: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 869: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 870: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 871: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 872: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 873: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 874: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 875: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 876: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 877: [     3,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 878: [   128,     3,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 879: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 880: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 881: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 882: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 883: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 884: [     3,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 885: [     3,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 886: [     3,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 887: [     3,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 888: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 889: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 890: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 891: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 892: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 893: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 894: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 895: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 896: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 897: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 898: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 899: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 900: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 901: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 902: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 903: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 904: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 905: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 906: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 907: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 908: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 909: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 910: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 911: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 912: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 913: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 914: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 915: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 916: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 917: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 918: [     3,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 919: [   128,     3,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 920: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 921: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 922: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 923: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 924: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 925: [     3,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 926: [     3,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 927: [     3,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 928: [     3,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 929: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 930: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 931: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 932: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 933: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 934: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 935: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 936: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 937: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 938: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 939: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 940: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 941: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 942: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 943: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 944: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 945: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 946: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 947: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 948: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 949: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 950: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 951: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 952: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 953: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 954: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 955: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 956: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 957: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 958: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 959: [     3,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 960: [   128,     3,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 961: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 962: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 963: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 964: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 965: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 966: [     3,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 967: [     3,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 968: [     3,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 969: [     3,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 970: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 971: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 972: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 973: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 974: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 975: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 976: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 977: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 978: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 979: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 980: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 981: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 982: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 983: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 984: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 985: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 986: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 987: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 988: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 989: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 990: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 991: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 992: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 993: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 994: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 995: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 996: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 997: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 998: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 999: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1000: [     3,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1001: [   128,     3,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1002: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1003: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1004: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1005: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1006: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1007: [     3,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1008: [     3,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1009: [     3,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1010: [     3,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1011: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1012: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1013: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1014: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1015: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1016: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1017: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1018: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1019: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1020: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1021: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1022: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1023: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1024: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1025: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1026: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1027: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1028: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1029: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1030: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1031: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1032: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1033: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1034: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1035: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1036: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1037: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1038: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1039: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1040: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1041: [     3,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1042: [   128,     3,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1043: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1044: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1045: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1046: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1047: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1048: [     3,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1049: [     3,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1050: [     3,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1051: [     3,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1052: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1053: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1054: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1055: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1056: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1057: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1058: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1059: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1060: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1061: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1062: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1063: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1064: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1065: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1066: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1067: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1068: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1069: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1070: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1071: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1072: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1073: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1074: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1075: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1076: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1077: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1078: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1079: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1080: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1081: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1082: [     3,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1083: [   128,     3,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1084: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1085: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1086: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1087: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1088: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1089: [     3,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1090: [     3,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1091: [     3,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1092: [     3,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1093: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1094: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1095: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1096: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1097: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1098: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1099: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1100: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1102: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1103: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1104: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1105: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1106: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1107: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1108: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1109: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1110: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1111: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1112: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1113: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1114: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1115: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1116: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1117: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1118: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1119: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1120: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1121: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1122: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1123: [     3,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1124: [   128,     3,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1125: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1127: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1128: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1129: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1130: [     3,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1131: [     3,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1132: [     3,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1133: [     3,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1134: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1135: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1136: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1137: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1138: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1139: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1140: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1141: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1143: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1144: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1145: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1146: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1147: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1148: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1149: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1150: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1151: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1152: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1153: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1154: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1155: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1156: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1157: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1158: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1159: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1160: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1161: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1162: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1163: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1164: [     3,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1165: [   128,     3,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1166: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1168: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1169: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1170: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1171: [     3,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1172: [     3,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1173: [     3,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1174: [     3,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1175: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1176: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1177: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1178: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1179: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1180: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1181: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1182: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1184: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1185: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1186: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1187: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1188: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1189: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1190: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1191: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1192: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1193: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1194: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1195: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1196: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1197: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1198: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1199: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1200: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1201: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1202: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1203: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1204: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1205: [     3,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1206: [   128,     3,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1207: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1209: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1210: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1211: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1212: [     3,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1213: [     3,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1214: [     3,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1215: [     3,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1216: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1217: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1218: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1219: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1220: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1221: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1222: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1223: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1225: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1226: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1227: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1228: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1229: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1230: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1231: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1232: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1233: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1234: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1235: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1236: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1237: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1238: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1239: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1240: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1241: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1242: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1243: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1244: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1245: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1246: [     3,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1247: [   128,     3,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1248: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1250: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1251: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1252: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1253: [     3,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1254: [     3,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1255: [     3,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1256: [     3,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1257: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1258: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1259: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1260: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1261: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1262: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1263: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1264: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1266: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1267: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1268: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1269: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1270: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1271: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1272: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1273: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1274: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1275: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1276: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1277: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1278: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1279: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1280: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1281: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1282: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1283: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1284: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1285: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1286: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1287: [     3,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1288: [   128,     3,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1289: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1291: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1292: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1293: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1294: [     3,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1295: [     3,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1296: [     3,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1297: [     3,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1298: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1299: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1300: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1301: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1302: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1303: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1304: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1305: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1307: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1308: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1309: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1310: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1311: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1312: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1313: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1314: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1315: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1316: [ 102400,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
n_leafs = 552
 -   0: [  2560,  2560]     NONE
 -   1: [  2560,     1]     NONE
 -   2: [  2560, 102400]     NONE
 -   3: [     1,     1]     NONE
 -   4: [  2560,     1]     NONE
 -   5: [  2560,     1]     NONE
 -   6: [ 41943040,     1]     NONE
 -   7: [  2560,  2560]     NONE
 -   8: [  2560,     1]     NONE
 -   9: [ 41943040,     1]     NONE
 -  10: [  2560,  2560]     NONE
 -  11: [  2560,     1]     NONE
 -  12: [ 10240,  2560]     NONE
 -  13: [  2560, 10240]     NONE
 -  14: [  2560,     1]     NONE
 -  15: [  2560,  2560]     NONE
 -  16: [  2560,  2560]     NONE
 -  17: [  2560,     1]     NONE
 -  18: [     1,     1]     NONE
 -  19: [  2560,     1]     NONE
 -  20: [  2560,     1]     NONE
 -  21: [  2560,     1]     NONE
 -  22: [ 10240,     1]     NONE
 -  23: [  2560,     1]     NONE
 -  24: [  2560,     1]     NONE
 -  25: [  2560,     1]     NONE
 -  26: [  2560,  2560]     NONE
 -  27: [  2560,     1]     NONE
 -  28: [  2560,  2560]     NONE
 -  29: [  2560,     1]     NONE
 -  30: [ 10240,  2560]     NONE
 -  31: [  2560, 10240]     NONE
 -  32: [  2560,     1]     NONE
 -  33: [  2560,  2560]     NONE
 -  34: [  2560,  2560]     NONE
 -  35: [  2560,     1]     NONE
 -  36: [  2560,     1]     NONE
 -  37: [  2560,     1]     NONE
 -  38: [  2560,     1]     NONE
 -  39: [ 10240,     1]     NONE
 -  40: [  2560,     1]     NONE
 -  41: [  2560,     1]     NONE
 -  42: [  2560,     1]     NONE
 -  43: [  2560,  2560]     NONE
 -  44: [  2560,     1]     NONE
 -  45: [  2560,  2560]     NONE
 -  46: [  2560,     1]     NONE
 -  47: [ 10240,  2560]     NONE
 -  48: [  2560, 10240]     NONE
 -  49: [  2560,     1]     NONE
 -  50: [  2560,  2560]     NONE
 -  51: [  2560,  2560]     NONE
 -  52: [  2560,     1]     NONE
 -  53: [  2560,     1]     NONE
 -  54: [  2560,     1]     NONE
 -  55: [  2560,     1]     NONE
 -  56: [ 10240,     1]     NONE
 -  57: [  2560,     1]     NONE
 -  58: [  2560,     1]     NONE
 -  59: [  2560,     1]     NONE
 -  60: [  2560,  2560]     NONE
 -  61: [  2560,     1]     NONE
 -  62: [  2560,  2560]     NONE
 -  63: [  2560,     1]     NONE
 -  64: [ 10240,  2560]     NONE
 -  65: [  2560, 10240]     NONE
 -  66: [  2560,     1]     NONE
 -  67: [  2560,  2560]     NONE
 -  68: [  2560,  2560]     NONE
 -  69: [  2560,     1]     NONE
 -  70: [  2560,     1]     NONE
 -  71: [  2560,     1]     NONE
 -  72: [  2560,     1]     NONE
 -  73: [ 10240,     1]     NONE
 -  74: [  2560,     1]     NONE
 -  75: [  2560,     1]     NONE
 -  76: [  2560,     1]     NONE
 -  77: [  2560,  2560]     NONE
 -  78: [  2560,     1]     NONE
 -  79: [  2560,  2560]     NONE
 -  80: [  2560,     1]     NONE
 -  81: [ 10240,  2560]     NONE
 -  82: [  2560, 10240]     NONE
 -  83: [  2560,     1]     NONE
 -  84: [  2560,  2560]     NONE
 -  85: [  2560,  2560]     NONE
 -  86: [  2560,     1]     NONE
 -  87: [  2560,     1]     NONE
 -  88: [  2560,     1]     NONE
 -  89: [  2560,     1]     NONE
 -  90: [ 10240,     1]     NONE
 -  91: [  2560,     1]     NONE
 -  92: [  2560,     1]     NONE
 -  93: [  2560,     1]     NONE
 -  94: [  2560,  2560]     NONE
 -  95: [  2560,     1]     NONE
 -  96: [  2560,  2560]     NONE
 -  97: [  2560,     1]     NONE
 -  98: [ 10240,  2560]     NONE
 -  99: [  2560, 10240]     NONE
 - 100: [  2560,     1]     NONE
 - 101: [  2560,  2560]     NONE
 - 102: [  2560,  2560]     NONE
 - 103: [  2560,     1]     NONE
 - 104: [  2560,     1]     NONE
 - 105: [  2560,     1]     NONE
 - 106: [  2560,     1]     NONE
 - 107: [ 10240,     1]     NONE
 - 108: [  2560,     1]     NONE
 - 109: [  2560,     1]     NONE
 - 110: [  2560,     1]     NONE
 - 111: [  2560,  2560]     NONE
 - 112: [  2560,     1]     NONE
 - 113: [  2560,  2560]     NONE
 - 114: [  2560,     1]     NONE
 - 115: [ 10240,  2560]     NONE
 - 116: [  2560, 10240]     NONE
 - 117: [  2560,     1]     NONE
 - 118: [  2560,  2560]     NONE
 - 119: [  2560,  2560]     NONE
 - 120: [  2560,     1]     NONE
 - 121: [  2560,     1]     NONE
 - 122: [  2560,     1]     NONE
 - 123: [  2560,     1]     NONE
 - 124: [ 10240,     1]     NONE
 - 125: [  2560,     1]     NONE
 - 126: [  2560,     1]     NONE
 - 127: [  2560,     1]     NONE
 - 128: [  2560,  2560]     NONE
 - 129: [  2560,     1]     NONE
 - 130: [  2560,  2560]     NONE
 - 131: [  2560,     1]     NONE
 - 132: [ 10240,  2560]     NONE
 - 133: [  2560, 10240]     NONE
 - 134: [  2560,     1]     NONE
 - 135: [  2560,  2560]     NONE
 - 136: [  2560,  2560]     NONE
 - 137: [  2560,     1]     NONE
 - 138: [  2560,     1]     NONE
 - 139: [  2560,     1]     NONE
 - 140: [  2560,     1]     NONE
 - 141: [ 10240,     1]     NONE
 - 142: [  2560,     1]     NONE
 - 143: [  2560,     1]     NONE
 - 144: [  2560,     1]     NONE
 - 145: [  2560,  2560]     NONE
 - 146: [  2560,     1]     NONE
 - 147: [  2560,  2560]     NONE
 - 148: [  2560,     1]     NONE
 - 149: [ 10240,  2560]     NONE
 - 150: [  2560, 10240]     NONE
 - 151: [  2560,     1]     NONE
 - 152: [  2560,  2560]     NONE
 - 153: [  2560,  2560]     NONE
 - 154: [  2560,     1]     NONE
 - 155: [  2560,     1]     NONE
 - 156: [  2560,     1]     NONE
 - 157: [  2560,     1]     NONE
 - 158: [ 10240,     1]     NONE
 - 159: [  2560,     1]     NONE
 - 160: [  2560,     1]     NONE
 - 161: [  2560,     1]     NONE
 - 162: [  2560,  2560]     NONE
 - 163: [  2560,     1]     NONE
 - 164: [  2560,  2560]     NONE
 - 165: [  2560,     1]     NONE
 - 166: [ 10240,  2560]     NONE
 - 167: [  2560, 10240]     NONE
 - 168: [  2560,     1]     NONE
 - 169: [  2560,  2560]     NONE
 - 170: [  2560,  2560]     NONE
 - 171: [  2560,     1]     NONE
 - 172: [  2560,     1]     NONE
 - 173: [  2560,     1]     NONE
 - 174: [  2560,     1]     NONE
 - 175: [ 10240,     1]     NONE
 - 176: [  2560,     1]     NONE
 - 177: [  2560,     1]     NONE
 - 178: [  2560,     1]     NONE
 - 179: [  2560,  2560]     NONE
 - 180: [  2560,     1]     NONE
 - 181: [  2560,  2560]     NONE
 - 182: [  2560,     1]     NONE
 - 183: [ 10240,  2560]     NONE
 - 184: [  2560, 10240]     NONE
 - 185: [  2560,     1]     NONE
 - 186: [  2560,  2560]     NONE
 - 187: [  2560,  2560]     NONE
 - 188: [  2560,     1]     NONE
 - 189: [  2560,     1]     NONE
 - 190: [  2560,     1]     NONE
 - 191: [  2560,     1]     NONE
 - 192: [ 10240,     1]     NONE
 - 193: [  2560,     1]     NONE
 - 194: [  2560,     1]     NONE
 - 195: [  2560,     1]     NONE
 - 196: [  2560,  2560]     NONE
 - 197: [  2560,     1]     NONE
 - 198: [  2560,  2560]     NONE
 - 199: [  2560,     1]     NONE
 - 200: [ 10240,  2560]     NONE
 - 201: [  2560, 10240]     NONE
 - 202: [  2560,     1]     NONE
 - 203: [  2560,  2560]     NONE
 - 204: [  2560,  2560]     NONE
 - 205: [  2560,     1]     NONE
 - 206: [  2560,     1]     NONE
 - 207: [  2560,     1]     NONE
 - 208: [  2560,     1]     NONE
 - 209: [ 10240,     1]     NONE
 - 210: [  2560,     1]     NONE
 - 211: [  2560,     1]     NONE
 - 212: [  2560,     1]     NONE
 - 213: [  2560,  2560]     NONE
 - 214: [  2560,     1]     NONE
 - 215: [  2560,  2560]     NONE
 - 216: [  2560,     1]     NONE
 - 217: [ 10240,  2560]     NONE
 - 218: [  2560, 10240]     NONE
 - 219: [  2560,     1]     NONE
 - 220: [  2560,  2560]     NONE
 - 221: [  2560,  2560]     NONE
 - 222: [  2560,     1]     NONE
 - 223: [  2560,     1]     NONE
 - 224: [  2560,     1]     NONE
 - 225: [  2560,     1]     NONE
 - 226: [ 10240,     1]     NONE
 - 227: [  2560,     1]     NONE
 - 228: [  2560,     1]     NONE
 - 229: [  2560,     1]     NONE
 - 230: [  2560,  2560]     NONE
 - 231: [  2560,     1]     NONE
 - 232: [  2560,  2560]     NONE
 - 233: [  2560,     1]     NONE
 - 234: [ 10240,  2560]     NONE
 - 235: [  2560, 10240]     NONE
 - 236: [  2560,     1]     NONE
 - 237: [  2560,  2560]     NONE
 - 238: [  2560,  2560]     NONE
 - 239: [  2560,     1]     NONE
 - 240: [  2560,     1]     NONE
 - 241: [  2560,     1]     NONE
 - 242: [  2560,     1]     NONE
 - 243: [ 10240,     1]     NONE
 - 244: [  2560,     1]     NONE
 - 245: [  2560,     1]     NONE
 - 246: [  2560,     1]     NONE
 - 247: [  2560,  2560]     NONE
 - 248: [  2560,     1]     NONE
 - 249: [  2560,  2560]     NONE
 - 250: [  2560,     1]     NONE
 - 251: [ 10240,  2560]     NONE
 - 252: [  2560, 10240]     NONE
 - 253: [  2560,     1]     NONE
 - 254: [  2560,  2560]     NONE
 - 255: [  2560,  2560]     NONE
 - 256: [  2560,     1]     NONE
 - 257: [  2560,     1]     NONE
 - 258: [  2560,     1]     NONE
 - 259: [  2560,     1]     NONE
 - 260: [ 10240,     1]     NONE
 - 261: [  2560,     1]     NONE
 - 262: [  2560,     1]     NONE
 - 263: [  2560,     1]     NONE
 - 264: [  2560,  2560]     NONE
 - 265: [  2560,     1]     NONE
 - 266: [  2560,  2560]     NONE
 - 267: [  2560,     1]     NONE
 - 268: [ 10240,  2560]     NONE
 - 269: [  2560, 10240]     NONE
 - 270: [  2560,     1]     NONE
 - 271: [  2560,  2560]     NONE
 - 272: [  2560,  2560]     NONE
 - 273: [  2560,     1]     NONE
 - 274: [  2560,     1]     NONE
 - 275: [  2560,     1]     NONE
 - 276: [  2560,     1]     NONE
 - 277: [ 10240,     1]     NONE
 - 278: [  2560,     1]     NONE
 - 279: [  2560,     1]     NONE
 - 280: [  2560,     1]     NONE
 - 281: [  2560,  2560]     NONE
 - 282: [  2560,     1]     NONE
 - 283: [  2560,  2560]     NONE
 - 284: [  2560,     1]     NONE
 - 285: [ 10240,  2560]     NONE
 - 286: [  2560, 10240]     NONE
 - 287: [  2560,     1]     NONE
 - 288: [  2560,  2560]     NONE
 - 289: [  2560,  2560]     NONE
 - 290: [  2560,     1]     NONE
 - 291: [  2560,     1]     NONE
 - 292: [  2560,     1]     NONE
 - 293: [  2560,     1]     NONE
 - 294: [ 10240,     1]     NONE
 - 295: [  2560,     1]     NONE
 - 296: [  2560,     1]     NONE
 - 297: [  2560,     1]     NONE
 - 298: [  2560,  2560]     NONE
 - 299: [  2560,     1]     NONE
 - 300: [  2560,  2560]     NONE
 - 301: [  2560,     1]     NONE
 - 302: [ 10240,  2560]     NONE
 - 303: [  2560, 10240]     NONE
 - 304: [  2560,     1]     NONE
 - 305: [  2560,  2560]     NONE
 - 306: [  2560,  2560]     NONE
 - 307: [  2560,     1]     NONE
 - 308: [  2560,     1]     NONE
 - 309: [  2560,     1]     NONE
 - 310: [  2560,     1]     NONE
 - 311: [ 10240,     1]     NONE
 - 312: [  2560,     1]     NONE
 - 313: [  2560,     1]     NONE
 - 314: [  2560,     1]     NONE
 - 315: [  2560,  2560]     NONE
 - 316: [  2560,     1]     NONE
 - 317: [  2560,  2560]     NONE
 - 318: [  2560,     1]     NONE
 - 319: [ 10240,  2560]     NONE
 - 320: [  2560, 10240]     NONE
 - 321: [  2560,     1]     NONE
 - 322: [  2560,  2560]     NONE
 - 323: [  2560,  2560]     NONE
 - 324: [  2560,     1]     NONE
 - 325: [  2560,     1]     NONE
 - 326: [  2560,     1]     NONE
 - 327: [  2560,     1]     NONE
 - 328: [ 10240,     1]     NONE
 - 329: [  2560,     1]     NONE
 - 330: [  2560,     1]     NONE
 - 331: [  2560,     1]     NONE
 - 332: [  2560,  2560]     NONE
 - 333: [  2560,     1]     NONE
 - 334: [  2560,  2560]     NONE
 - 335: [  2560,     1]     NONE
 - 336: [ 10240,  2560]     NONE
 - 337: [  2560, 10240]     NONE
 - 338: [  2560,     1]     NONE
 - 339: [  2560,  2560]     NONE
 - 340: [  2560,  2560]     NONE
 - 341: [  2560,     1]     NONE
 - 342: [  2560,     1]     NONE
 - 343: [  2560,     1]     NONE
 - 344: [  2560,     1]     NONE
 - 345: [ 10240,     1]     NONE
 - 346: [  2560,     1]     NONE
 - 347: [  2560,     1]     NONE
 - 348: [  2560,     1]     NONE
 - 349: [  2560,  2560]     NONE
 - 350: [  2560,     1]     NONE
 - 351: [  2560,  2560]     NONE
 - 352: [  2560,     1]     NONE
 - 353: [ 10240,  2560]     NONE
 - 354: [  2560, 10240]     NONE
 - 355: [  2560,     1]     NONE
 - 356: [  2560,  2560]     NONE
 - 357: [  2560,  2560]     NONE
 - 358: [  2560,     1]     NONE
 - 359: [  2560,     1]     NONE
 - 360: [  2560,     1]     NONE
 - 361: [  2560,     1]     NONE
 - 362: [ 10240,     1]     NONE
 - 363: [  2560,     1]     NONE
 - 364: [  2560,     1]     NONE
 - 365: [  2560,     1]     NONE
 - 366: [  2560,  2560]     NONE
 - 367: [  2560,     1]     NONE
 - 368: [  2560,  2560]     NONE
 - 369: [  2560,     1]     NONE
 - 370: [ 10240,  2560]     NONE
 - 371: [  2560, 10240]     NONE
 - 372: [  2560,     1]     NONE
 - 373: [  2560,  2560]     NONE
 - 374: [  2560,  2560]     NONE
 - 375: [  2560,     1]     NONE
 - 376: [  2560,     1]     NONE
 - 377: [  2560,     1]     NONE
 - 378: [  2560,     1]     NONE
 - 379: [ 10240,     1]     NONE
 - 380: [  2560,     1]     NONE
 - 381: [  2560,     1]     NONE
 - 382: [  2560,     1]     NONE
 - 383: [  2560,  2560]     NONE
 - 384: [  2560,     1]     NONE
 - 385: [  2560,  2560]     NONE
 - 386: [  2560,     1]     NONE
 - 387: [ 10240,  2560]     NONE
 - 388: [  2560, 10240]     NONE
 - 389: [  2560,     1]     NONE
 - 390: [  2560,  2560]     NONE
 - 391: [  2560,  2560]     NONE
 - 392: [  2560,     1]     NONE
 - 393: [  2560,     1]     NONE
 - 394: [  2560,     1]     NONE
 - 395: [  2560,     1]     NONE
 - 396: [ 10240,     1]     NONE
 - 397: [  2560,     1]     NONE
 - 398: [  2560,     1]     NONE
 - 399: [  2560,     1]     NONE
 - 400: [  2560,  2560]     NONE
 - 401: [  2560,     1]     NONE
 - 402: [  2560,  2560]     NONE
 - 403: [  2560,     1]     NONE
 - 404: [ 10240,  2560]     NONE
 - 405: [  2560, 10240]     NONE
 - 406: [  2560,     1]     NONE
 - 407: [  2560,  2560]     NONE
 - 408: [  2560,  2560]     NONE
 - 409: [  2560,     1]     NONE
 - 410: [  2560,     1]     NONE
 - 411: [  2560,     1]     NONE
 - 412: [  2560,     1]     NONE
 - 413: [ 10240,     1]     NONE
 - 414: [  2560,     1]     NONE
 - 415: [  2560,     1]     NONE
 - 416: [  2560,     1]     NONE
 - 417: [  2560,  2560]     NONE
 - 418: [  2560,     1]     NONE
 - 419: [  2560,  2560]     NONE
 - 420: [  2560,     1]     NONE
 - 421: [ 10240,  2560]     NONE
 - 422: [  2560, 10240]     NONE
 - 423: [  2560,     1]     NONE
 - 424: [  2560,  2560]     NONE
 - 425: [  2560,  2560]     NONE
 - 426: [  2560,     1]     NONE
 - 427: [  2560,     1]     NONE
 - 428: [  2560,     1]     NONE
 - 429: [  2560,     1]     NONE
 - 430: [ 10240,     1]     NONE
 - 431: [  2560,     1]     NONE
 - 432: [  2560,     1]     NONE
 - 433: [  2560,     1]     NONE
 - 434: [  2560,  2560]     NONE
 - 435: [  2560,     1]     NONE
 - 436: [  2560,  2560]     NONE
 - 437: [  2560,     1]     NONE
 - 438: [ 10240,  2560]     NONE
 - 439: [  2560, 10240]     NONE
 - 440: [  2560,     1]     NONE
 - 441: [  2560,  2560]     NONE
 - 442: [  2560,  2560]     NONE
 - 443: [  2560,     1]     NONE
 - 444: [  2560,     1]     NONE
 - 445: [  2560,     1]     NONE
 - 446: [  2560,     1]     NONE
 - 447: [ 10240,     1]     NONE
 - 448: [  2560,     1]     NONE
 - 449: [  2560,     1]     NONE
 - 450: [  2560,     1]     NONE
 - 451: [  2560,  2560]     NONE
 - 452: [  2560,     1]     NONE
 - 453: [  2560,  2560]     NONE
 - 454: [  2560,     1]     NONE
 - 455: [ 10240,  2560]     NONE
 - 456: [  2560, 10240]     NONE
 - 457: [  2560,     1]     NONE
 - 458: [  2560,  2560]     NONE
 - 459: [  2560,  2560]     NONE
 - 460: [  2560,     1]     NONE
 - 461: [  2560,     1]     NONE
 - 462: [  2560,     1]     NONE
 - 463: [  2560,     1]     NONE
 - 464: [ 10240,     1]     NONE
 - 465: [  2560,     1]     NONE
 - 466: [  2560,     1]     NONE
 - 467: [  2560,     1]     NONE
 - 468: [  2560,  2560]     NONE
 - 469: [  2560,     1]     NONE
 - 470: [  2560,  2560]     NONE
 - 471: [  2560,     1]     NONE
 - 472: [ 10240,  2560]     NONE
 - 473: [  2560, 10240]     NONE
 - 474: [  2560,     1]     NONE
 - 475: [  2560,  2560]     NONE
 - 476: [  2560,  2560]     NONE
 - 477: [  2560,     1]     NONE
 - 478: [  2560,     1]     NONE
 - 479: [  2560,     1]     NONE
 - 480: [  2560,     1]     NONE
 - 481: [ 10240,     1]     NONE
 - 482: [  2560,     1]     NONE
 - 483: [  2560,     1]     NONE
 - 484: [  2560,     1]     NONE
 - 485: [  2560,  2560]     NONE
 - 486: [  2560,     1]     NONE
 - 487: [  2560,  2560]     NONE
 - 488: [  2560,     1]     NONE
 - 489: [ 10240,  2560]     NONE
 - 490: [  2560, 10240]     NONE
 - 491: [  2560,     1]     NONE
 - 492: [  2560,  2560]     NONE
 - 493: [  2560,  2560]     NONE
 - 494: [  2560,     1]     NONE
 - 495: [  2560,     1]     NONE
 - 496: [  2560,     1]     NONE
 - 497: [  2560,     1]     NONE
 - 498: [ 10240,     1]     NONE
 - 499: [  2560,     1]     NONE
 - 500: [  2560,     1]     NONE
 - 501: [  2560,     1]     NONE
 - 502: [  2560,  2560]     NONE
 - 503: [  2560,     1]     NONE
 - 504: [  2560,  2560]     NONE
 - 505: [  2560,     1]     NONE
 - 506: [ 10240,  2560]     NONE
 - 507: [  2560, 10240]     NONE
 - 508: [  2560,     1]     NONE
 - 509: [  2560,  2560]     NONE
 - 510: [  2560,  2560]     NONE
 - 511: [  2560,     1]     NONE
 - 512: [  2560,     1]     NONE
 - 513: [  2560,     1]     NONE
 - 514: [  2560,     1]     NONE
 - 515: [ 10240,     1]     NONE
 - 516: [  2560,     1]     NONE
 - 517: [  2560,     1]     NONE
 - 518: [  2560,     1]     NONE
 - 519: [  2560,  2560]     NONE
 - 520: [  2560,     1]     NONE
 - 521: [  2560,  2560]     NONE
 - 522: [  2560,     1]     NONE
 - 523: [ 10240,  2560]     NONE
 - 524: [  2560, 10240]     NONE
 - 525: [  2560,     1]     NONE
 - 526: [  2560,  2560]     NONE
 - 527: [  2560,  2560]     NONE
 - 528: [  2560,     1]     NONE
 - 529: [  2560,     1]     NONE
 - 530: [  2560,     1]     NONE
 - 531: [  2560,     1]     NONE
 - 532: [ 10240,     1]     NONE
 - 533: [  2560,     1]     NONE
 - 534: [  2560,     1]     NONE
 - 535: [  2560,     1]     NONE
 - 536: [  2560,  2560]     NONE
 - 537: [  2560,     1]     NONE
 - 538: [  2560, 102400]     NONE
 - 539: [  2560,     1]     NONE
 - 540: [ 10240,  2560]     NONE
 - 541: [  2560, 10240]     NONE
 - 542: [  2560,     1]     NONE
 - 543: [  2560,  2560]     NONE
 - 544: [  2560,  2560]     NONE
 - 545: [  2560,     1]     NONE
 - 546: [  2560,     1]     NONE
 - 547: [  2560,     1]     NONE
 - 548: [  2560,     1]     NONE
 - 549: [ 10240,     1]     NONE
 - 550: [  2560,     1]     NONE
 - 551: [  2560,     1]     NONE
perf_total_per_op_us[             ADD] =   0.321 ms
perf_total_per_op_us[             MUL] =   0.065 ms
perf_total_per_op_us[            NORM] =   0.065 ms
perf_total_per_op_us[         MUL_MAT] =   0.257 ms
perf_total_per_op_us[           SCALE] =   0.032 ms
perf_total_per_op_us[             CPY] =   0.096 ms
perf_total_per_op_us[         RESHAPE] =   0.096 ms
perf_total_per_op_us[            VIEW] =   0.128 ms
perf_total_per_op_us[         PERMUTE] =   0.064 ms
perf_total_per_op_us[       TRANSPOSE] =   0.032 ms
perf_total_per_op_us[        GET_ROWS] =   0.001 ms
perf_total_per_op_us[   DIAG_MASK_INF] =   0.032 ms
perf_total_per_op_us[        SOFT_MAX] =   0.032 ms
perf_total_per_op_us[            ROPE] =   0.064 ms
perf_total_per_op_us[           UNARY] =   0.032 ms
========================================

=== GRAPH ===
n_nodes = 1317
 -   0: [  2560,     1,     1]         GET_ROWS   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   1: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   2: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   3: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   4: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   5: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   6: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   7: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   8: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   9: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  10: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  11: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  12: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  13: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  14: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  15: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  16: [     4,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  17: [   128,     4,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  18: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  19: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  20: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  21: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  22: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  23: [     4,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  24: [     4,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  25: [     4,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  26: [     4,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  27: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  28: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  29: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  30: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  31: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  32: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  33: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  34: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  35: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  36: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  37: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  38: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  39: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  40: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  41: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  42: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  43: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  44: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  45: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  46: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  47: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  48: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  49: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  50: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  51: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  52: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  53: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  54: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  55: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  56: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  57: [     4,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  58: [   128,     4,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  59: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  60: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  61: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  62: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  63: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  64: [     4,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  65: [     4,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  66: [     4,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  67: [     4,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  68: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  69: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  70: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  71: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  72: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  73: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  74: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  75: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  76: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  77: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  78: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  79: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  80: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  81: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  82: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  83: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  84: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  85: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  86: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  87: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  88: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  89: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  90: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  91: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  92: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  93: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  94: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  95: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  96: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  97: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  98: [     4,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  99: [   128,     4,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 100: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 102: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 103: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 104: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 105: [     4,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 106: [     4,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 107: [     4,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 108: [     4,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 109: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 110: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 111: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 112: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 113: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 114: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 115: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 116: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 117: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 118: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 119: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 120: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 121: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 122: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 123: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 124: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 125: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 127: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 128: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 129: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 130: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 131: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 132: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 133: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 134: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 135: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 136: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 137: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 138: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 139: [     4,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 140: [   128,     4,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 141: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 143: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 144: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 145: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 146: [     4,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 147: [     4,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 148: [     4,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 149: [     4,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 150: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 151: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 152: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 153: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 154: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 155: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 156: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 157: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 158: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 159: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 160: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 161: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 162: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 163: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 164: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 165: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 166: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 168: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 169: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 170: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 171: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 172: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 173: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 174: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 175: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 176: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 177: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 178: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 179: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 180: [     4,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 181: [   128,     4,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 182: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 184: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 185: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 186: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 187: [     4,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 188: [     4,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 189: [     4,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 190: [     4,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 191: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 192: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 193: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 194: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 195: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 196: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 197: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 198: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 199: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 200: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 201: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 202: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 203: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 204: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 205: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 206: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 207: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 209: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 210: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 211: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 212: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 213: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 214: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 215: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 216: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 217: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 218: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 219: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 220: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 221: [     4,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 222: [   128,     4,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 223: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 225: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 226: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 227: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 228: [     4,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 229: [     4,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 230: [     4,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 231: [     4,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 232: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 233: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 234: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 235: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 236: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 237: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 238: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 239: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 240: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 241: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 242: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 243: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 244: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 245: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 246: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 247: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 248: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 250: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 251: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 252: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 253: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 254: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 255: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 256: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 257: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 258: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 259: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 260: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 261: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 262: [     4,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 263: [   128,     4,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 264: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 266: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 267: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 268: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 269: [     4,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 270: [     4,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 271: [     4,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 272: [     4,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 273: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 274: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 275: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 276: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 277: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 278: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 279: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 280: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 281: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 282: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 283: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 284: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 285: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 286: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 287: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 288: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 289: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 291: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 292: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 293: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 294: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 295: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 296: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 297: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 298: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 299: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 300: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 301: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 302: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 303: [     4,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 304: [   128,     4,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 305: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 307: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 308: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 309: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 310: [     4,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 311: [     4,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 312: [     4,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 313: [     4,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 314: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 315: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 316: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 317: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 318: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 319: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 320: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 321: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 322: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 323: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 324: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 325: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 326: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 327: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 328: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 329: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 330: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 331: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 332: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 333: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 334: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 335: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 336: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 337: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 338: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 339: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 340: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 341: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 342: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 343: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 344: [     4,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 345: [   128,     4,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 346: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 347: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 348: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 349: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 350: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 351: [     4,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 352: [     4,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 353: [     4,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 354: [     4,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 355: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 356: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 357: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 358: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 359: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 360: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 361: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 362: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 363: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 364: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 365: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 366: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 367: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 368: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 369: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 370: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 371: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 372: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 373: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 374: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 375: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 376: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 377: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 378: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 379: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 380: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 381: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 382: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 383: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 384: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 385: [     4,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 386: [   128,     4,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 387: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 388: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 389: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 390: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 391: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 392: [     4,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 393: [     4,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 394: [     4,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 395: [     4,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 396: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 397: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 398: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 399: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 400: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 401: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 402: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 403: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 404: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 405: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 406: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 407: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 408: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 409: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 410: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 411: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 412: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 413: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 414: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 415: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 416: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 417: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 418: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 419: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 420: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 421: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 422: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 423: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 424: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 425: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 426: [     4,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 427: [   128,     4,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 428: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 429: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 430: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 431: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 432: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 433: [     4,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 434: [     4,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 435: [     4,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 436: [     4,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 437: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 438: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 439: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 440: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 441: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 442: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 443: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 444: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 445: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 446: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 447: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 448: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 449: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 450: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 451: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 452: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 453: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 454: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 455: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 456: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 457: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 458: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 459: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 460: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 461: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 462: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 463: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 464: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 465: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 466: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 467: [     4,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 468: [   128,     4,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 469: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 470: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 471: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 472: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 473: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 474: [     4,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 475: [     4,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 476: [     4,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 477: [     4,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 478: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 479: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 480: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 481: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 482: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 483: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 484: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 485: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 486: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 487: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 488: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 489: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 490: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 491: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 492: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 493: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 494: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 495: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 496: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 497: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 498: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 499: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 500: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 501: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 502: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 503: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 504: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 505: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 506: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 507: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 508: [     4,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 509: [   128,     4,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 510: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 511: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 512: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 513: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 514: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 515: [     4,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 516: [     4,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 517: [     4,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 518: [     4,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 519: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 520: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 521: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 522: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 523: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 524: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 525: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 526: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 527: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 528: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 529: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 530: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 531: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 532: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 533: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 534: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 535: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 536: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 537: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 538: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 539: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 540: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 541: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 542: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 543: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 544: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 545: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 546: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 547: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 548: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 549: [     4,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 550: [   128,     4,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 551: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 552: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 553: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 554: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 555: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 556: [     4,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 557: [     4,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 558: [     4,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 559: [     4,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 560: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 561: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 562: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 563: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 564: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 565: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 566: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 567: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 568: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 569: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 570: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 571: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 572: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 573: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 574: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 575: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 576: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 577: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 578: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 579: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 580: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 581: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 582: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 583: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 584: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 585: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 586: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 587: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 588: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 589: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 590: [     4,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 591: [   128,     4,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 592: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 593: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 594: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 595: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 596: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 597: [     4,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 598: [     4,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 599: [     4,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 600: [     4,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 601: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 602: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 603: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 604: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 605: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 606: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 607: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 608: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 609: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 610: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 611: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 612: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 613: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 614: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 615: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 616: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 617: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 618: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 619: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 620: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 621: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 622: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 623: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 624: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 625: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 626: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 627: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 628: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 629: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 630: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 631: [     4,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 632: [   128,     4,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 633: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 634: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 635: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 636: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 637: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 638: [     4,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 639: [     4,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 640: [     4,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 641: [     4,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 642: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 643: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 644: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 645: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 646: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 647: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 648: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 649: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 650: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 651: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 652: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 653: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 654: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 655: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 656: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 657: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 658: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 659: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 660: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 661: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 662: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 663: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 664: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 665: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 666: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 667: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 668: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 669: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 670: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 671: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 672: [     4,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 673: [   128,     4,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 674: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 675: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 676: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 677: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 678: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 679: [     4,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 680: [     4,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 681: [     4,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 682: [     4,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 683: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 684: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 685: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 686: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 687: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 688: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 689: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 690: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 691: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 692: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 693: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 694: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 695: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 696: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 697: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 698: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 699: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 700: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 701: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 702: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 703: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 704: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 705: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 706: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 707: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 708: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 709: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 710: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 711: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 712: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 713: [     4,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 714: [   128,     4,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 715: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 716: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 717: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 718: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 719: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 720: [     4,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 721: [     4,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 722: [     4,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 723: [     4,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 724: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 725: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 726: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 727: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 728: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 729: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 730: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 731: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 732: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 733: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 734: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 735: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 736: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 737: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 738: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 739: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 740: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 741: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 742: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 743: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 744: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 745: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 746: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 747: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 748: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 749: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 750: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 751: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 752: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 753: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 754: [     4,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 755: [   128,     4,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 756: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 757: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 758: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 759: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 760: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 761: [     4,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 762: [     4,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 763: [     4,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 764: [     4,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 765: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 766: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 767: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 768: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 769: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 770: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 771: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 772: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 773: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 774: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 775: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 776: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 777: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 778: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 779: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 780: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 781: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 782: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 783: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 784: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 785: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 786: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 787: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 788: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 789: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 790: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 791: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 792: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 793: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 794: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 795: [     4,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 796: [   128,     4,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 797: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 798: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 799: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 800: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 801: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 802: [     4,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 803: [     4,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 804: [     4,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 805: [     4,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 806: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 807: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 808: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 809: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 810: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 811: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 812: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 813: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 814: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 815: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 816: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 817: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 818: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 819: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 820: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 821: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 822: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 823: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 824: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 825: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 826: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 827: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 828: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 829: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 830: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 831: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 832: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 833: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 834: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 835: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 836: [     4,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 837: [   128,     4,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 838: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 839: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 840: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 841: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 842: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 843: [     4,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 844: [     4,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 845: [     4,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 846: [     4,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 847: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 848: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 849: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 850: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 851: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 852: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 853: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 854: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 855: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 856: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 857: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 858: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 859: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 860: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 861: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 862: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 863: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 864: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 865: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 866: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 867: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 868: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 869: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 870: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 871: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 872: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 873: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 874: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 875: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 876: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 877: [     4,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 878: [   128,     4,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 879: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 880: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 881: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 882: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 883: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 884: [     4,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 885: [     4,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 886: [     4,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 887: [     4,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 888: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 889: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 890: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 891: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 892: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 893: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 894: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 895: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 896: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 897: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 898: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 899: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 900: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 901: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 902: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 903: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 904: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 905: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 906: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 907: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 908: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 909: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 910: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 911: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 912: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 913: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 914: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 915: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 916: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 917: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 918: [     4,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 919: [   128,     4,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 920: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 921: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 922: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 923: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 924: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 925: [     4,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 926: [     4,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 927: [     4,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 928: [     4,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 929: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 930: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 931: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 932: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 933: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 934: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 935: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 936: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 937: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 938: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 939: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 940: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 941: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 942: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 943: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 944: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 945: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 946: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 947: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 948: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 949: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 950: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 951: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 952: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 953: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 954: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 955: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 956: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 957: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 958: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 959: [     4,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 960: [   128,     4,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 961: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 962: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 963: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 964: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 965: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 966: [     4,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 967: [     4,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 968: [     4,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 969: [     4,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 970: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 971: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 972: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 973: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 974: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 975: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 976: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 977: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 978: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 979: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 980: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 981: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 982: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 983: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 984: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 985: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 986: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 987: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 988: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 989: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 990: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 991: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 992: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 993: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 994: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 995: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 996: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 997: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 998: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 999: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1000: [     4,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1001: [   128,     4,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1002: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1003: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1004: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1005: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1006: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1007: [     4,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1008: [     4,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1009: [     4,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1010: [     4,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1011: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1012: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1013: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1014: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1015: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1016: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1017: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1018: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1019: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1020: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1021: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1022: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1023: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1024: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1025: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1026: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1027: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1028: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1029: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1030: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1031: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1032: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1033: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1034: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1035: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1036: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1037: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1038: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1039: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1040: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1041: [     4,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1042: [   128,     4,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1043: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1044: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1045: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1046: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1047: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1048: [     4,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1049: [     4,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1050: [     4,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1051: [     4,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1052: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1053: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1054: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1055: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1056: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1057: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1058: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1059: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1060: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1061: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1062: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1063: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1064: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1065: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1066: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1067: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1068: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1069: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1070: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1071: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1072: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1073: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1074: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1075: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1076: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1077: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1078: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1079: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1080: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1081: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1082: [     4,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1083: [   128,     4,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1084: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1085: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1086: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1087: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1088: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1089: [     4,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1090: [     4,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1091: [     4,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1092: [     4,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1093: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1094: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1095: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1096: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1097: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1098: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1099: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1100: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1102: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1103: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1104: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1105: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1106: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1107: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1108: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1109: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1110: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1111: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1112: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1113: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1114: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1115: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1116: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1117: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1118: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1119: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1120: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1121: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1122: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1123: [     4,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1124: [   128,     4,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1125: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1127: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1128: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1129: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1130: [     4,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1131: [     4,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1132: [     4,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1133: [     4,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1134: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1135: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1136: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1137: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1138: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1139: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1140: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1141: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1143: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1144: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1145: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1146: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1147: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1148: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1149: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1150: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1151: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1152: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1153: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1154: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1155: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1156: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1157: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1158: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1159: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1160: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1161: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1162: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1163: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1164: [     4,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1165: [   128,     4,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1166: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1168: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1169: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1170: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1171: [     4,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1172: [     4,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1173: [     4,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1174: [     4,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1175: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1176: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1177: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1178: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1179: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1180: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1181: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1182: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1184: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1185: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1186: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1187: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1188: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1189: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1190: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1191: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1192: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1193: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1194: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1195: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1196: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1197: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1198: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1199: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1200: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1201: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1202: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1203: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1204: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1205: [     4,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1206: [   128,     4,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1207: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1209: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1210: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1211: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1212: [     4,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1213: [     4,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1214: [     4,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1215: [     4,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1216: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1217: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1218: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1219: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1220: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1221: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1222: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1223: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1225: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1226: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1227: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1228: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1229: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1230: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1231: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1232: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1233: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1234: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1235: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1236: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1237: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1238: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1239: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1240: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1241: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1242: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1243: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1244: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1245: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1246: [     4,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1247: [   128,     4,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1248: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1250: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1251: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1252: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1253: [     4,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1254: [     4,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1255: [     4,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1256: [     4,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1257: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1258: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1259: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1260: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1261: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1262: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1263: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1264: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1266: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1267: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1268: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1269: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1270: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1271: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1272: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1273: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1274: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1275: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1276: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1277: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1278: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1279: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1280: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1281: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1282: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1283: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1284: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1285: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1286: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1287: [     4,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1288: [   128,     4,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1289: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1291: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1292: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1293: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1294: [     4,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1295: [     4,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1296: [     4,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1297: [     4,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1298: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1299: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1300: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1301: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1302: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1303: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1304: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1305: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1307: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1308: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1309: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1310: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1311: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1312: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1313: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1314: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1315: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1316: [ 102400,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
n_leafs = 552
 -   0: [  2560,  2560]     NONE
 -   1: [  2560,     1]     NONE
 -   2: [  2560, 102400]     NONE
 -   3: [     1,     1]     NONE
 -   4: [  2560,     1]     NONE
 -   5: [  2560,     1]     NONE
 -   6: [ 41943040,     1]     NONE
 -   7: [  2560,  2560]     NONE
 -   8: [  2560,     1]     NONE
 -   9: [ 41943040,     1]     NONE
 -  10: [  2560,  2560]     NONE
 -  11: [  2560,     1]     NONE
 -  12: [ 10240,  2560]     NONE
 -  13: [  2560, 10240]     NONE
 -  14: [  2560,     1]     NONE
 -  15: [  2560,  2560]     NONE
 -  16: [  2560,  2560]     NONE
 -  17: [  2560,     1]     NONE
 -  18: [     1,     1]     NONE
 -  19: [  2560,     1]     NONE
 -  20: [  2560,     1]     NONE
 -  21: [  2560,     1]     NONE
 -  22: [ 10240,     1]     NONE
 -  23: [  2560,     1]     NONE
 -  24: [  2560,     1]     NONE
 -  25: [  2560,     1]     NONE
 -  26: [  2560,  2560]     NONE
 -  27: [  2560,     1]     NONE
 -  28: [  2560,  2560]     NONE
 -  29: [  2560,     1]     NONE
 -  30: [ 10240,  2560]     NONE
 -  31: [  2560, 10240]     NONE
 -  32: [  2560,     1]     NONE
 -  33: [  2560,  2560]     NONE
 -  34: [  2560,  2560]     NONE
 -  35: [  2560,     1]     NONE
 -  36: [  2560,     1]     NONE
 -  37: [  2560,     1]     NONE
 -  38: [  2560,     1]     NONE
 -  39: [ 10240,     1]     NONE
 -  40: [  2560,     1]     NONE
 -  41: [  2560,     1]     NONE
 -  42: [  2560,     1]     NONE
 -  43: [  2560,  2560]     NONE
 -  44: [  2560,     1]     NONE
 -  45: [  2560,  2560]     NONE
 -  46: [  2560,     1]     NONE
 -  47: [ 10240,  2560]     NONE
 -  48: [  2560, 10240]     NONE
 -  49: [  2560,     1]     NONE
 -  50: [  2560,  2560]     NONE
 -  51: [  2560,  2560]     NONE
 -  52: [  2560,     1]     NONE
 -  53: [  2560,     1]     NONE
 -  54: [  2560,     1]     NONE
 -  55: [  2560,     1]     NONE
 -  56: [ 10240,     1]     NONE
 -  57: [  2560,     1]     NONE
 -  58: [  2560,     1]     NONE
 -  59: [  2560,     1]     NONE
 -  60: [  2560,  2560]     NONE
 -  61: [  2560,     1]     NONE
 -  62: [  2560,  2560]     NONE
 -  63: [  2560,     1]     NONE
 -  64: [ 10240,  2560]     NONE
 -  65: [  2560, 10240]     NONE
 -  66: [  2560,     1]     NONE
 -  67: [  2560,  2560]     NONE
 -  68: [  2560,  2560]     NONE
 -  69: [  2560,     1]     NONE
 -  70: [  2560,     1]     NONE
 -  71: [  2560,     1]     NONE
 -  72: [  2560,     1]     NONE
 -  73: [ 10240,     1]     NONE
 -  74: [  2560,     1]     NONE
 -  75: [  2560,     1]     NONE
 -  76: [  2560,     1]     NONE
 -  77: [  2560,  2560]     NONE
 -  78: [  2560,     1]     NONE
 -  79: [  2560,  2560]     NONE
 -  80: [  2560,     1]     NONE
 -  81: [ 10240,  2560]     NONE
 -  82: [  2560, 10240]     NONE
 -  83: [  2560,     1]     NONE
 -  84: [  2560,  2560]     NONE
 -  85: [  2560,  2560]     NONE
 -  86: [  2560,     1]     NONE
 -  87: [  2560,     1]     NONE
 -  88: [  2560,     1]     NONE
 -  89: [  2560,     1]     NONE
 -  90: [ 10240,     1]     NONE
 -  91: [  2560,     1]     NONE
 -  92: [  2560,     1]     NONE
 -  93: [  2560,     1]     NONE
 -  94: [  2560,  2560]     NONE
 -  95: [  2560,     1]     NONE
 -  96: [  2560,  2560]     NONE
 -  97: [  2560,     1]     NONE
 -  98: [ 10240,  2560]     NONE
 -  99: [  2560, 10240]     NONE
 - 100: [  2560,     1]     NONE
 - 101: [  2560,  2560]     NONE
 - 102: [  2560,  2560]     NONE
 - 103: [  2560,     1]     NONE
 - 104: [  2560,     1]     NONE
 - 105: [  2560,     1]     NONE
 - 106: [  2560,     1]     NONE
 - 107: [ 10240,     1]     NONE
 - 108: [  2560,     1]     NONE
 - 109: [  2560,     1]     NONE
 - 110: [  2560,     1]     NONE
 - 111: [  2560,  2560]     NONE
 - 112: [  2560,     1]     NONE
 - 113: [  2560,  2560]     NONE
 - 114: [  2560,     1]     NONE
 - 115: [ 10240,  2560]     NONE
 - 116: [  2560, 10240]     NONE
 - 117: [  2560,     1]     NONE
 - 118: [  2560,  2560]     NONE
 - 119: [  2560,  2560]     NONE
 - 120: [  2560,     1]     NONE
 - 121: [  2560,     1]     NONE
 - 122: [  2560,     1]     NONE
 - 123: [  2560,     1]     NONE
 - 124: [ 10240,     1]     NONE
 - 125: [  2560,     1]     NONE
 - 126: [  2560,     1]     NONE
 - 127: [  2560,     1]     NONE
 - 128: [  2560,  2560]     NONE
 - 129: [  2560,     1]     NONE
 - 130: [  2560,  2560]     NONE
 - 131: [  2560,     1]     NONE
 - 132: [ 10240,  2560]     NONE
 - 133: [  2560, 10240]     NONE
 - 134: [  2560,     1]     NONE
 - 135: [  2560,  2560]     NONE
 - 136: [  2560,  2560]     NONE
 - 137: [  2560,     1]     NONE
 - 138: [  2560,     1]     NONE
 - 139: [  2560,     1]     NONE
 - 140: [  2560,     1]     NONE
 - 141: [ 10240,     1]     NONE
 - 142: [  2560,     1]     NONE
 - 143: [  2560,     1]     NONE
 - 144: [  2560,     1]     NONE
 - 145: [  2560,  2560]     NONE
 - 146: [  2560,     1]     NONE
 - 147: [  2560,  2560]     NONE
 - 148: [  2560,     1]     NONE
 - 149: [ 10240,  2560]     NONE
 - 150: [  2560, 10240]     NONE
 - 151: [  2560,     1]     NONE
 - 152: [  2560,  2560]     NONE
 - 153: [  2560,  2560]     NONE
 - 154: [  2560,     1]     NONE
 - 155: [  2560,     1]     NONE
 - 156: [  2560,     1]     NONE
 - 157: [  2560,     1]     NONE
 - 158: [ 10240,     1]     NONE
 - 159: [  2560,     1]     NONE
 - 160: [  2560,     1]     NONE
 - 161: [  2560,     1]     NONE
 - 162: [  2560,  2560]     NONE
 - 163: [  2560,     1]     NONE
 - 164: [  2560,  2560]     NONE
 - 165: [  2560,     1]     NONE
 - 166: [ 10240,  2560]     NONE
 - 167: [  2560, 10240]     NONE
 - 168: [  2560,     1]     NONE
 - 169: [  2560,  2560]     NONE
 - 170: [  2560,  2560]     NONE
 - 171: [  2560,     1]     NONE
 - 172: [  2560,     1]     NONE
 - 173: [  2560,     1]     NONE
 - 174: [  2560,     1]     NONE
 - 175: [ 10240,     1]     NONE
 - 176: [  2560,     1]     NONE
 - 177: [  2560,     1]     NONE
 - 178: [  2560,     1]     NONE
 - 179: [  2560,  2560]     NONE
 - 180: [  2560,     1]     NONE
 - 181: [  2560,  2560]     NONE
 - 182: [  2560,     1]     NONE
 - 183: [ 10240,  2560]     NONE
 - 184: [  2560, 10240]     NONE
 - 185: [  2560,     1]     NONE
 - 186: [  2560,  2560]     NONE
 - 187: [  2560,  2560]     NONE
 - 188: [  2560,     1]     NONE
 - 189: [  2560,     1]     NONE
 - 190: [  2560,     1]     NONE
 - 191: [  2560,     1]     NONE
 - 192: [ 10240,     1]     NONE
 - 193: [  2560,     1]     NONE
 - 194: [  2560,     1]     NONE
 - 195: [  2560,     1]     NONE
 - 196: [  2560,  2560]     NONE
 - 197: [  2560,     1]     NONE
 - 198: [  2560,  2560]     NONE
 - 199: [  2560,     1]     NONE
 - 200: [ 10240,  2560]     NONE
 - 201: [  2560, 10240]     NONE
 - 202: [  2560,     1]     NONE
 - 203: [  2560,  2560]     NONE
 - 204: [  2560,  2560]     NONE
 - 205: [  2560,     1]     NONE
 - 206: [  2560,     1]     NONE
 - 207: [  2560,     1]     NONE
 - 208: [  2560,     1]     NONE
 - 209: [ 10240,     1]     NONE
 - 210: [  2560,     1]     NONE
 - 211: [  2560,     1]     NONE
 - 212: [  2560,     1]     NONE
 - 213: [  2560,  2560]     NONE
 - 214: [  2560,     1]     NONE
 - 215: [  2560,  2560]     NONE
 - 216: [  2560,     1]     NONE
 - 217: [ 10240,  2560]     NONE
 - 218: [  2560, 10240]     NONE
 - 219: [  2560,     1]     NONE
 - 220: [  2560,  2560]     NONE
 - 221: [  2560,  2560]     NONE
 - 222: [  2560,     1]     NONE
 - 223: [  2560,     1]     NONE
 - 224: [  2560,     1]     NONE
 - 225: [  2560,     1]     NONE
 - 226: [ 10240,     1]     NONE
 - 227: [  2560,     1]     NONE
 - 228: [  2560,     1]     NONE
 - 229: [  2560,     1]     NONE
 - 230: [  2560,  2560]     NONE
 - 231: [  2560,     1]     NONE
 - 232: [  2560,  2560]     NONE
 - 233: [  2560,     1]     NONE
 - 234: [ 10240,  2560]     NONE
 - 235: [  2560, 10240]     NONE
 - 236: [  2560,     1]     NONE
 - 237: [  2560,  2560]     NONE
 - 238: [  2560,  2560]     NONE
 - 239: [  2560,     1]     NONE
 - 240: [  2560,     1]     NONE
 - 241: [  2560,     1]     NONE
 - 242: [  2560,     1]     NONE
 - 243: [ 10240,     1]     NONE
 - 244: [  2560,     1]     NONE
 - 245: [  2560,     1]     NONE
 - 246: [  2560,     1]     NONE
 - 247: [  2560,  2560]     NONE
 - 248: [  2560,     1]     NONE
 - 249: [  2560,  2560]     NONE
 - 250: [  2560,     1]     NONE
 - 251: [ 10240,  2560]     NONE
 - 252: [  2560, 10240]     NONE
 - 253: [  2560,     1]     NONE
 - 254: [  2560,  2560]     NONE
 - 255: [  2560,  2560]     NONE
 - 256: [  2560,     1]     NONE
 - 257: [  2560,     1]     NONE
 - 258: [  2560,     1]     NONE
 - 259: [  2560,     1]     NONE
 - 260: [ 10240,     1]     NONE
 - 261: [  2560,     1]     NONE
 - 262: [  2560,     1]     NONE
 - 263: [  2560,     1]     NONE
 - 264: [  2560,  2560]     NONE
 - 265: [  2560,     1]     NONE
 - 266: [  2560,  2560]     NONE
 - 267: [  2560,     1]     NONE
 - 268: [ 10240,  2560]     NONE
 - 269: [  2560, 10240]     NONE
 - 270: [  2560,     1]     NONE
 - 271: [  2560,  2560]     NONE
 - 272: [  2560,  2560]     NONE
 - 273: [  2560,     1]     NONE
 - 274: [  2560,     1]     NONE
 - 275: [  2560,     1]     NONE
 - 276: [  2560,     1]     NONE
 - 277: [ 10240,     1]     NONE
 - 278: [  2560,     1]     NONE
 - 279: [  2560,     1]     NONE
 - 280: [  2560,     1]     NONE
 - 281: [  2560,  2560]     NONE
 - 282: [  2560,     1]     NONE
 - 283: [  2560,  2560]     NONE
 - 284: [  2560,     1]     NONE
 - 285: [ 10240,  2560]     NONE
 - 286: [  2560, 10240]     NONE
 - 287: [  2560,     1]     NONE
 - 288: [  2560,  2560]     NONE
 - 289: [  2560,  2560]     NONE
 - 290: [  2560,     1]     NONE
 - 291: [  2560,     1]     NONE
 - 292: [  2560,     1]     NONE
 - 293: [  2560,     1]     NONE
 - 294: [ 10240,     1]     NONE
 - 295: [  2560,     1]     NONE
 - 296: [  2560,     1]     NONE
 - 297: [  2560,     1]     NONE
 - 298: [  2560,  2560]     NONE
 - 299: [  2560,     1]     NONE
 - 300: [  2560,  2560]     NONE
 - 301: [  2560,     1]     NONE
 - 302: [ 10240,  2560]     NONE
 - 303: [  2560, 10240]     NONE
 - 304: [  2560,     1]     NONE
 - 305: [  2560,  2560]     NONE
 - 306: [  2560,  2560]     NONE
 - 307: [  2560,     1]     NONE
 - 308: [  2560,     1]     NONE
 - 309: [  2560,     1]     NONE
 - 310: [  2560,     1]     NONE
 - 311: [ 10240,     1]     NONE
 - 312: [  2560,     1]     NONE
 - 313: [  2560,     1]     NONE
 - 314: [  2560,     1]     NONE
 - 315: [  2560,  2560]     NONE
 - 316: [  2560,     1]     NONE
 - 317: [  2560,  2560]     NONE
 - 318: [  2560,     1]     NONE
 - 319: [ 10240,  2560]     NONE
 - 320: [  2560, 10240]     NONE
 - 321: [  2560,     1]     NONE
 - 322: [  2560,  2560]     NONE
 - 323: [  2560,  2560]     NONE
 - 324: [  2560,     1]     NONE
 - 325: [  2560,     1]     NONE
 - 326: [  2560,     1]     NONE
 - 327: [  2560,     1]     NONE
 - 328: [ 10240,     1]     NONE
 - 329: [  2560,     1]     NONE
 - 330: [  2560,     1]     NONE
 - 331: [  2560,     1]     NONE
 - 332: [  2560,  2560]     NONE
 - 333: [  2560,     1]     NONE
 - 334: [  2560,  2560]     NONE
 - 335: [  2560,     1]     NONE
 - 336: [ 10240,  2560]     NONE
 - 337: [  2560, 10240]     NONE
 - 338: [  2560,     1]     NONE
 - 339: [  2560,  2560]     NONE
 - 340: [  2560,  2560]     NONE
 - 341: [  2560,     1]     NONE
 - 342: [  2560,     1]     NONE
 - 343: [  2560,     1]     NONE
 - 344: [  2560,     1]     NONE
 - 345: [ 10240,     1]     NONE
 - 346: [  2560,     1]     NONE
 - 347: [  2560,     1]     NONE
 - 348: [  2560,     1]     NONE
 - 349: [  2560,  2560]     NONE
 - 350: [  2560,     1]     NONE
 - 351: [  2560,  2560]     NONE
 - 352: [  2560,     1]     NONE
 - 353: [ 10240,  2560]     NONE
 - 354: [  2560, 10240]     NONE
 - 355: [  2560,     1]     NONE
 - 356: [  2560,  2560]     NONE
 - 357: [  2560,  2560]     NONE
 - 358: [  2560,     1]     NONE
 - 359: [  2560,     1]     NONE
 - 360: [  2560,     1]     NONE
 - 361: [  2560,     1]     NONE
 - 362: [ 10240,     1]     NONE
 - 363: [  2560,     1]     NONE
 - 364: [  2560,     1]     NONE
 - 365: [  2560,     1]     NONE
 - 366: [  2560,  2560]     NONE
 - 367: [  2560,     1]     NONE
 - 368: [  2560,  2560]     NONE
 - 369: [  2560,     1]     NONE
 - 370: [ 10240,  2560]     NONE
 - 371: [  2560, 10240]     NONE
 - 372: [  2560,     1]     NONE
 - 373: [  2560,  2560]     NONE
 - 374: [  2560,  2560]     NONE
 - 375: [  2560,     1]     NONE
 - 376: [  2560,     1]     NONE
 - 377: [  2560,     1]     NONE
 - 378: [  2560,     1]     NONE
 - 379: [ 10240,     1]     NONE
 - 380: [  2560,     1]     NONE
 - 381: [  2560,     1]     NONE
 - 382: [  2560,     1]     NONE
 - 383: [  2560,  2560]     NONE
 - 384: [  2560,     1]     NONE
 - 385: [  2560,  2560]     NONE
 - 386: [  2560,     1]     NONE
 - 387: [ 10240,  2560]     NONE
 - 388: [  2560, 10240]     NONE
 - 389: [  2560,     1]     NONE
 - 390: [  2560,  2560]     NONE
 - 391: [  2560,  2560]     NONE
 - 392: [  2560,     1]     NONE
 - 393: [  2560,     1]     NONE
 - 394: [  2560,     1]     NONE
 - 395: [  2560,     1]     NONE
 - 396: [ 10240,     1]     NONE
 - 397: [  2560,     1]     NONE
 - 398: [  2560,     1]     NONE
 - 399: [  2560,     1]     NONE
 - 400: [  2560,  2560]     NONE
 - 401: [  2560,     1]     NONE
 - 402: [  2560,  2560]     NONE
 - 403: [  2560,     1]     NONE
 - 404: [ 10240,  2560]     NONE
 - 405: [  2560, 10240]     NONE
 - 406: [  2560,     1]     NONE
 - 407: [  2560,  2560]     NONE
 - 408: [  2560,  2560]     NONE
 - 409: [  2560,     1]     NONE
 - 410: [  2560,     1]     NONE
 - 411: [  2560,     1]     NONE
 - 412: [  2560,     1]     NONE
 - 413: [ 10240,     1]     NONE
 - 414: [  2560,     1]     NONE
 - 415: [  2560,     1]     NONE
 - 416: [  2560,     1]     NONE
 - 417: [  2560,  2560]     NONE
 - 418: [  2560,     1]     NONE
 - 419: [  2560,  2560]     NONE
 - 420: [  2560,     1]     NONE
 - 421: [ 10240,  2560]     NONE
 - 422: [  2560, 10240]     NONE
 - 423: [  2560,     1]     NONE
 - 424: [  2560,  2560]     NONE
 - 425: [  2560,  2560]     NONE
 - 426: [  2560,     1]     NONE
 - 427: [  2560,     1]     NONE
 - 428: [  2560,     1]     NONE
 - 429: [  2560,     1]     NONE
 - 430: [ 10240,     1]     NONE
 - 431: [  2560,     1]     NONE
 - 432: [  2560,     1]     NONE
 - 433: [  2560,     1]     NONE
 - 434: [  2560,  2560]     NONE
 - 435: [  2560,     1]     NONE
 - 436: [  2560,  2560]     NONE
 - 437: [  2560,     1]     NONE
 - 438: [ 10240,  2560]     NONE
 - 439: [  2560, 10240]     NONE
 - 440: [  2560,     1]     NONE
 - 441: [  2560,  2560]     NONE
 - 442: [  2560,  2560]     NONE
 - 443: [  2560,     1]     NONE
 - 444: [  2560,     1]     NONE
 - 445: [  2560,     1]     NONE
 - 446: [  2560,     1]     NONE
 - 447: [ 10240,     1]     NONE
 - 448: [  2560,     1]     NONE
 - 449: [  2560,     1]     NONE
 - 450: [  2560,     1]     NONE
 - 451: [  2560,  2560]     NONE
 - 452: [  2560,     1]     NONE
 - 453: [  2560,  2560]     NONE
 - 454: [  2560,     1]     NONE
 - 455: [ 10240,  2560]     NONE
 - 456: [  2560, 10240]     NONE
 - 457: [  2560,     1]     NONE
 - 458: [  2560,  2560]     NONE
 - 459: [  2560,  2560]     NONE
 - 460: [  2560,     1]     NONE
 - 461: [  2560,     1]     NONE
 - 462: [  2560,     1]     NONE
 - 463: [  2560,     1]     NONE
 - 464: [ 10240,     1]     NONE
 - 465: [  2560,     1]     NONE
 - 466: [  2560,     1]     NONE
 - 467: [  2560,     1]     NONE
 - 468: [  2560,  2560]     NONE
 - 469: [  2560,     1]     NONE
 - 470: [  2560,  2560]     NONE
 - 471: [  2560,     1]     NONE
 - 472: [ 10240,  2560]     NONE
 - 473: [  2560, 10240]     NONE
 - 474: [  2560,     1]     NONE
 - 475: [  2560,  2560]     NONE
 - 476: [  2560,  2560]     NONE
 - 477: [  2560,     1]     NONE
 - 478: [  2560,     1]     NONE
 - 479: [  2560,     1]     NONE
 - 480: [  2560,     1]     NONE
 - 481: [ 10240,     1]     NONE
 - 482: [  2560,     1]     NONE
 - 483: [  2560,     1]     NONE
 - 484: [  2560,     1]     NONE
 - 485: [  2560,  2560]     NONE
 - 486: [  2560,     1]     NONE
 - 487: [  2560,  2560]     NONE
 - 488: [  2560,     1]     NONE
 - 489: [ 10240,  2560]     NONE
 - 490: [  2560, 10240]     NONE
 - 491: [  2560,     1]     NONE
 - 492: [  2560,  2560]     NONE
 - 493: [  2560,  2560]     NONE
 - 494: [  2560,     1]     NONE
 - 495: [  2560,     1]     NONE
 - 496: [  2560,     1]     NONE
 - 497: [  2560,     1]     NONE
 - 498: [ 10240,     1]     NONE
 - 499: [  2560,     1]     NONE
 - 500: [  2560,     1]     NONE
 - 501: [  2560,     1]     NONE
 - 502: [  2560,  2560]     NONE
 - 503: [  2560,     1]     NONE
 - 504: [  2560,  2560]     NONE
 - 505: [  2560,     1]     NONE
 - 506: [ 10240,  2560]     NONE
 - 507: [  2560, 10240]     NONE
 - 508: [  2560,     1]     NONE
 - 509: [  2560,  2560]     NONE
 - 510: [  2560,  2560]     NONE
 - 511: [  2560,     1]     NONE
 - 512: [  2560,     1]     NONE
 - 513: [  2560,     1]     NONE
 - 514: [  2560,     1]     NONE
 - 515: [ 10240,     1]     NONE
 - 516: [  2560,     1]     NONE
 - 517: [  2560,     1]     NONE
 - 518: [  2560,     1]     NONE
 - 519: [  2560,  2560]     NONE
 - 520: [  2560,     1]     NONE
 - 521: [  2560,  2560]     NONE
 - 522: [  2560,     1]     NONE
 - 523: [ 10240,  2560]     NONE
 - 524: [  2560, 10240]     NONE
 - 525: [  2560,     1]     NONE
 - 526: [  2560,  2560]     NONE
 - 527: [  2560,  2560]     NONE
 - 528: [  2560,     1]     NONE
 - 529: [  2560,     1]     NONE
 - 530: [  2560,     1]     NONE
 - 531: [  2560,     1]     NONE
 - 532: [ 10240,     1]     NONE
 - 533: [  2560,     1]     NONE
 - 534: [  2560,     1]     NONE
 - 535: [  2560,     1]     NONE
 - 536: [  2560,  2560]     NONE
 - 537: [  2560,     1]     NONE
 - 538: [  2560, 102400]     NONE
 - 539: [  2560,     1]     NONE
 - 540: [ 10240,  2560]     NONE
 - 541: [  2560, 10240]     NONE
 - 542: [  2560,     1]     NONE
 - 543: [  2560,  2560]     NONE
 - 544: [  2560,  2560]     NONE
 - 545: [  2560,     1]     NONE
 - 546: [  2560,     1]     NONE
 - 547: [  2560,     1]     NONE
 - 548: [  2560,     1]     NONE
 - 549: [ 10240,     1]     NONE
 - 550: [  2560,     1]     NONE
 - 551: [  2560,     1]     NONE
perf_total_per_op_us[             ADD] =   0.321 ms
perf_total_per_op_us[             MUL] =   0.065 ms
perf_total_per_op_us[            NORM] =   0.065 ms
perf_total_per_op_us[         MUL_MAT] =   0.257 ms
perf_total_per_op_us[           SCALE] =   0.032 ms
perf_total_per_op_us[             CPY] =   0.096 ms
perf_total_per_op_us[         RESHAPE] =   0.096 ms
perf_total_per_op_us[            VIEW] =   0.128 ms
perf_total_per_op_us[         PERMUTE] =   0.064 ms
perf_total_per_op_us[       TRANSPOSE] =   0.032 ms
perf_total_per_op_us[        GET_ROWS] =   0.001 ms
perf_total_per_op_us[   DIAG_MASK_INF] =   0.032 ms
perf_total_per_op_us[        SOFT_MAX] =   0.032 ms
perf_total_per_op_us[            ROPE] =   0.064 ms
perf_total_per_op_us[           UNARY] =   0.032 ms
========================================
user=== GRAPH ===
n_nodes = 1317
 -   0: [  2560,     1,     1]         GET_ROWS   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   1: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   2: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   3: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   4: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   5: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   6: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   7: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   8: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   9: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  10: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  11: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  12: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  13: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  14: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  15: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  16: [     5,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  17: [   128,     5,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  18: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  19: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  20: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  21: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  22: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  23: [     5,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  24: [     5,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  25: [     5,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  26: [     5,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  27: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  28: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  29: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  30: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  31: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  32: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  33: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  34: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  35: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  36: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  37: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  38: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  39: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  40: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  41: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  42: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  43: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  44: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  45: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  46: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  47: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  48: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  49: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  50: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  51: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  52: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  53: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  54: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  55: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  56: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  57: [     5,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  58: [   128,     5,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  59: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  60: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  61: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  62: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  63: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  64: [     5,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  65: [     5,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  66: [     5,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  67: [     5,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  68: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  69: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  70: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  71: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  72: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  73: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  74: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  75: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  76: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  77: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  78: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  79: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  80: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  81: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  82: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  83: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  84: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  85: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  86: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  87: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  88: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  89: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  90: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  91: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  92: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  93: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  94: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  95: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  96: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  97: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  98: [     5,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  99: [   128,     5,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 100: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 102: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 103: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 104: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 105: [     5,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 106: [     5,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 107: [     5,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 108: [     5,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 109: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 110: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 111: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 112: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 113: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 114: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 115: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 116: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 117: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 118: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 119: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 120: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 121: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 122: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 123: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 124: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 125: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 127: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 128: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 129: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 130: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 131: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 132: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 133: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 134: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 135: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 136: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 137: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 138: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 139: [     5,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 140: [   128,     5,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 141: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 143: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 144: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 145: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 146: [     5,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 147: [     5,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 148: [     5,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 149: [     5,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 150: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 151: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 152: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 153: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 154: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 155: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 156: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 157: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 158: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 159: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 160: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 161: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 162: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 163: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 164: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 165: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 166: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 168: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 169: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 170: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 171: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 172: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 173: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 174: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 175: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 176: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 177: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 178: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 179: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 180: [     5,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 181: [   128,     5,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 182: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 184: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 185: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 186: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 187: [     5,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 188: [     5,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 189: [     5,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 190: [     5,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 191: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 192: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 193: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 194: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 195: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 196: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 197: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 198: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 199: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 200: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 201: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 202: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 203: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 204: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 205: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 206: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 207: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 209: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 210: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 211: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 212: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 213: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 214: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 215: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 216: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 217: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 218: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 219: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 220: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 221: [     5,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 222: [   128,     5,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 223: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 225: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 226: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 227: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 228: [     5,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 229: [     5,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 230: [     5,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 231: [     5,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 232: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 233: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 234: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 235: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 236: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 237: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 238: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 239: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 240: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 241: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 242: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 243: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 244: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 245: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 246: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 247: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 248: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 250: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 251: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 252: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 253: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 254: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 255: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 256: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 257: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 258: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 259: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 260: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 261: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 262: [     5,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 263: [   128,     5,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 264: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 266: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 267: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 268: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 269: [     5,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 270: [     5,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 271: [     5,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 272: [     5,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 273: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 274: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 275: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 276: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 277: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 278: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 279: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 280: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 281: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 282: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 283: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 284: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 285: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 286: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 287: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 288: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 289: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 291: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 292: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 293: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 294: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 295: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 296: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 297: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 298: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 299: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 300: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 301: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 302: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 303: [     5,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 304: [   128,     5,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 305: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 307: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 308: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 309: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 310: [     5,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 311: [     5,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 312: [     5,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 313: [     5,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 314: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 315: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 316: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 317: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 318: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 319: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 320: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 321: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 322: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 323: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 324: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 325: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 326: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 327: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 328: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 329: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 330: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 331: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 332: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 333: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 334: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 335: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 336: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 337: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 338: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 339: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 340: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 341: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 342: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 343: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 344: [     5,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 345: [   128,     5,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 346: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 347: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 348: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 349: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 350: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 351: [     5,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 352: [     5,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 353: [     5,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 354: [     5,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 355: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 356: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 357: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 358: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 359: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 360: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 361: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 362: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 363: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 364: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 365: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 366: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 367: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 368: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 369: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 370: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 371: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 372: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 373: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 374: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 375: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 376: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 377: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 378: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 379: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 380: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 381: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 382: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 383: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 384: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 385: [     5,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 386: [   128,     5,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 387: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 388: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 389: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 390: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 391: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 392: [     5,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 393: [     5,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 394: [     5,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 395: [     5,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 396: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 397: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 398: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 399: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 400: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 401: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 402: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 403: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 404: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 405: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 406: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 407: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 408: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 409: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 410: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 411: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 412: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 413: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 414: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 415: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 416: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 417: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 418: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 419: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 420: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 421: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 422: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 423: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 424: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 425: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 426: [     5,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 427: [   128,     5,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 428: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 429: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 430: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 431: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 432: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 433: [     5,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 434: [     5,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 435: [     5,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 436: [     5,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 437: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 438: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 439: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 440: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 441: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 442: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 443: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 444: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 445: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 446: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 447: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 448: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 449: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 450: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 451: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 452: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 453: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 454: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 455: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 456: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 457: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 458: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 459: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 460: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 461: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 462: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 463: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 464: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 465: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 466: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 467: [     5,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 468: [   128,     5,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 469: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 470: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 471: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 472: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 473: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 474: [     5,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 475: [     5,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 476: [     5,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 477: [     5,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 478: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 479: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 480: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 481: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 482: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 483: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 484: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 485: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 486: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 487: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 488: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 489: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 490: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 491: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 492: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 493: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 494: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 495: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 496: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 497: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 498: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 499: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 500: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 501: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 502: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 503: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 504: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 505: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 506: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 507: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 508: [     5,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 509: [   128,     5,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 510: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 511: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 512: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 513: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 514: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 515: [     5,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 516: [     5,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 517: [     5,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 518: [     5,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 519: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 520: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 521: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 522: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 523: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 524: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 525: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 526: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 527: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 528: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 529: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 530: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 531: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 532: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 533: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 534: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 535: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 536: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 537: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 538: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 539: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 540: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 541: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 542: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 543: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 544: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 545: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 546: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 547: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 548: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 549: [     5,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 550: [   128,     5,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 551: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 552: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 553: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 554: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 555: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 556: [     5,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 557: [     5,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 558: [     5,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 559: [     5,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 560: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 561: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 562: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 563: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 564: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 565: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 566: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 567: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 568: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 569: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 570: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 571: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 572: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 573: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 574: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 575: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 576: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 577: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 578: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 579: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 580: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 581: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 582: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 583: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 584: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 585: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 586: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 587: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 588: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 589: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 590: [     5,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 591: [   128,     5,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 592: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 593: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 594: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 595: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 596: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 597: [     5,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 598: [     5,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 599: [     5,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 600: [     5,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 601: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 602: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 603: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 604: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 605: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 606: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 607: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 608: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 609: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 610: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 611: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 612: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 613: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 614: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 615: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 616: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 617: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 618: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 619: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 620: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 621: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 622: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 623: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 624: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 625: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 626: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 627: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 628: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 629: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 630: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 631: [     5,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 632: [   128,     5,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 633: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 634: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 635: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 636: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 637: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 638: [     5,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 639: [     5,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 640: [     5,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 641: [     5,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 642: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 643: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 644: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 645: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 646: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 647: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 648: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 649: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 650: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 651: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 652: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 653: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 654: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 655: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 656: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 657: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 658: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 659: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 660: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 661: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 662: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 663: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 664: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 665: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 666: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 667: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 668: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 669: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 670: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 671: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 672: [     5,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 673: [   128,     5,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 674: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 675: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 676: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 677: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 678: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 679: [     5,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 680: [     5,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 681: [     5,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 682: [     5,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 683: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 684: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 685: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 686: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 687: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 688: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 689: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 690: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 691: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 692: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 693: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 694: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 695: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 696: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 697: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 698: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 699: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 700: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 701: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 702: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 703: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 704: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 705: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 706: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 707: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 708: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 709: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 710: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 711: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 712: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 713: [     5,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 714: [   128,     5,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 715: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 716: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 717: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 718: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 719: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 720: [     5,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 721: [     5,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 722: [     5,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 723: [     5,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 724: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 725: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 726: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 727: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 728: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 729: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 730: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 731: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 732: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 733: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 734: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 735: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 736: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 737: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 738: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 739: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 740: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 741: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 742: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 743: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 744: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 745: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 746: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 747: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 748: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 749: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 750: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 751: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 752: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 753: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 754: [     5,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 755: [   128,     5,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 756: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 757: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 758: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 759: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 760: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 761: [     5,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 762: [     5,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 763: [     5,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 764: [     5,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 765: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 766: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 767: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 768: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 769: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 770: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 771: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 772: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 773: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 774: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 775: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 776: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 777: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 778: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 779: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 780: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 781: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 782: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 783: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 784: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 785: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 786: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 787: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 788: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 789: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 790: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 791: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 792: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 793: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 794: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 795: [     5,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 796: [   128,     5,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 797: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 798: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 799: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 800: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 801: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 802: [     5,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 803: [     5,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 804: [     5,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 805: [     5,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 806: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 807: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 808: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 809: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 810: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 811: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 812: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 813: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 814: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 815: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 816: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 817: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 818: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 819: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 820: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 821: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 822: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 823: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 824: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 825: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 826: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 827: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 828: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 829: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 830: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 831: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 832: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 833: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 834: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 835: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 836: [     5,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 837: [   128,     5,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 838: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 839: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 840: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 841: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 842: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 843: [     5,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 844: [     5,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 845: [     5,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 846: [     5,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 847: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 848: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 849: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 850: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 851: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 852: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 853: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 854: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 855: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 856: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 857: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 858: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 859: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 860: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 861: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 862: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 863: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 864: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 865: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 866: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 867: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 868: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 869: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 870: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 871: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 872: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 873: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 874: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 875: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 876: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 877: [     5,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 878: [   128,     5,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 879: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 880: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 881: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 882: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 883: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 884: [     5,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 885: [     5,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 886: [     5,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 887: [     5,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 888: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 889: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 890: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 891: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 892: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 893: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 894: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 895: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 896: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 897: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 898: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 899: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 900: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 901: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 902: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 903: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 904: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 905: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 906: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 907: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 908: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 909: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 910: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 911: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 912: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 913: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 914: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 915: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 916: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 917: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 918: [     5,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 919: [   128,     5,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 920: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 921: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 922: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 923: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 924: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 925: [     5,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 926: [     5,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 927: [     5,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 928: [     5,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 929: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 930: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 931: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 932: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 933: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 934: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 935: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 936: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 937: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 938: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 939: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 940: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 941: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 942: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 943: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 944: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 945: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 946: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 947: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 948: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 949: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 950: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 951: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 952: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 953: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 954: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 955: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 956: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 957: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 958: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 959: [     5,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 960: [   128,     5,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 961: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 962: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 963: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 964: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 965: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 966: [     5,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 967: [     5,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 968: [     5,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 969: [     5,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 970: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 971: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 972: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 973: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 974: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 975: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 976: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 977: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 978: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 979: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 980: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 981: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 982: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 983: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 984: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 985: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 986: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 987: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 988: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 989: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 990: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 991: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 992: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 993: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 994: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 995: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 996: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 997: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 998: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 999: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1000: [     5,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1001: [   128,     5,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1002: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1003: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1004: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1005: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1006: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1007: [     5,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1008: [     5,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1009: [     5,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1010: [     5,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1011: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1012: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1013: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1014: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1015: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1016: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1017: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1018: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1019: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1020: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1021: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1022: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1023: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1024: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1025: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1026: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1027: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1028: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1029: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1030: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1031: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1032: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1033: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1034: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1035: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1036: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1037: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1038: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1039: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1040: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1041: [     5,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1042: [   128,     5,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1043: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1044: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1045: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1046: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1047: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1048: [     5,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1049: [     5,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1050: [     5,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1051: [     5,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1052: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1053: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1054: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1055: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1056: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1057: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1058: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1059: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1060: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1061: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1062: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1063: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1064: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1065: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1066: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1067: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1068: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1069: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1070: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1071: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1072: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1073: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1074: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1075: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1076: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1077: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1078: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1079: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1080: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1081: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1082: [     5,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1083: [   128,     5,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1084: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1085: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1086: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1087: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1088: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1089: [     5,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1090: [     5,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1091: [     5,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1092: [     5,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1093: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1094: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1095: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1096: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1097: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1098: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1099: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1100: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1102: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1103: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1104: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1105: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1106: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1107: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1108: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1109: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1110: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1111: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1112: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1113: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1114: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1115: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1116: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1117: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1118: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1119: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1120: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1121: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1122: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1123: [     5,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1124: [   128,     5,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1125: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1127: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1128: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1129: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1130: [     5,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1131: [     5,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1132: [     5,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1133: [     5,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1134: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1135: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1136: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1137: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1138: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1139: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1140: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1141: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1143: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1144: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1145: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1146: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1147: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1148: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1149: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1150: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1151: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1152: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1153: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1154: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1155: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1156: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1157: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1158: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1159: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1160: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1161: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1162: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1163: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1164: [     5,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1165: [   128,     5,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1166: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1168: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1169: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1170: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1171: [     5,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1172: [     5,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1173: [     5,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1174: [     5,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1175: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1176: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1177: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1178: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1179: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1180: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1181: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1182: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1184: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1185: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1186: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1187: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1188: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1189: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1190: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1191: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1192: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1193: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1194: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1195: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1196: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1197: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1198: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1199: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1200: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1201: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1202: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1203: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1204: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1205: [     5,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1206: [   128,     5,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1207: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1209: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1210: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1211: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1212: [     5,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1213: [     5,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1214: [     5,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1215: [     5,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1216: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1217: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1218: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1219: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1220: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1221: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1222: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1223: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1225: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1226: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1227: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1228: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1229: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1230: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1231: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1232: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1233: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1234: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1235: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1236: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1237: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1238: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1239: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1240: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1241: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1242: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1243: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1244: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1245: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1246: [     5,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1247: [   128,     5,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1248: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1250: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1251: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1252: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1253: [     5,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1254: [     5,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1255: [     5,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1256: [     5,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1257: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1258: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1259: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1260: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1261: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1262: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1263: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1264: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1266: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1267: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1268: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1269: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1270: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1271: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1272: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1273: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1274: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1275: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1276: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1277: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1278: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1279: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1280: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1281: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1282: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1283: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1284: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1285: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1286: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1287: [     5,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1288: [   128,     5,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1289: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1291: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1292: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1293: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1294: [     5,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1295: [     5,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1296: [     5,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1297: [     5,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1298: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1299: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1300: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1301: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1302: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1303: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1304: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1305: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1307: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1308: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1309: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1310: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1311: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1312: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1313: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1314: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1315: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1316: [ 102400,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
n_leafs = 552
 -   0: [  2560,  2560]     NONE
 -   1: [  2560,     1]     NONE
 -   2: [  2560, 102400]     NONE
 -   3: [     1,     1]     NONE
 -   4: [  2560,     1]     NONE
 -   5: [  2560,     1]     NONE
 -   6: [ 41943040,     1]     NONE
 -   7: [  2560,  2560]     NONE
 -   8: [  2560,     1]     NONE
 -   9: [ 41943040,     1]     NONE
 -  10: [  2560,  2560]     NONE
 -  11: [  2560,     1]     NONE
 -  12: [ 10240,  2560]     NONE
 -  13: [  2560, 10240]     NONE
 -  14: [  2560,     1]     NONE
 -  15: [  2560,  2560]     NONE
 -  16: [  2560,  2560]     NONE
 -  17: [  2560,     1]     NONE
 -  18: [     1,     1]     NONE
 -  19: [  2560,     1]     NONE
 -  20: [  2560,     1]     NONE
 -  21: [  2560,     1]     NONE
 -  22: [ 10240,     1]     NONE
 -  23: [  2560,     1]     NONE
 -  24: [  2560,     1]     NONE
 -  25: [  2560,     1]     NONE
 -  26: [  2560,  2560]     NONE
 -  27: [  2560,     1]     NONE
 -  28: [  2560,  2560]     NONE
 -  29: [  2560,     1]     NONE
 -  30: [ 10240,  2560]     NONE
 -  31: [  2560, 10240]     NONE
 -  32: [  2560,     1]     NONE
 -  33: [  2560,  2560]     NONE
 -  34: [  2560,  2560]     NONE
 -  35: [  2560,     1]     NONE
 -  36: [  2560,     1]     NONE
 -  37: [  2560,     1]     NONE
 -  38: [  2560,     1]     NONE
 -  39: [ 10240,     1]     NONE
 -  40: [  2560,     1]     NONE
 -  41: [  2560,     1]     NONE
 -  42: [  2560,     1]     NONE
 -  43: [  2560,  2560]     NONE
 -  44: [  2560,     1]     NONE
 -  45: [  2560,  2560]     NONE
 -  46: [  2560,     1]     NONE
 -  47: [ 10240,  2560]     NONE
 -  48: [  2560, 10240]     NONE
 -  49: [  2560,     1]     NONE
 -  50: [  2560,  2560]     NONE
 -  51: [  2560,  2560]     NONE
 -  52: [  2560,     1]     NONE
 -  53: [  2560,     1]     NONE
 -  54: [  2560,     1]     NONE
 -  55: [  2560,     1]     NONE
 -  56: [ 10240,     1]     NONE
 -  57: [  2560,     1]     NONE
 -  58: [  2560,     1]     NONE
 -  59: [  2560,     1]     NONE
 -  60: [  2560,  2560]     NONE
 -  61: [  2560,     1]     NONE
 -  62: [  2560,  2560]     NONE
 -  63: [  2560,     1]     NONE
 -  64: [ 10240,  2560]     NONE
 -  65: [  2560, 10240]     NONE
 -  66: [  2560,     1]     NONE
 -  67: [  2560,  2560]     NONE
 -  68: [  2560,  2560]     NONE
 -  69: [  2560,     1]     NONE
 -  70: [  2560,     1]     NONE
 -  71: [  2560,     1]     NONE
 -  72: [  2560,     1]     NONE
 -  73: [ 10240,     1]     NONE
 -  74: [  2560,     1]     NONE
 -  75: [  2560,     1]     NONE
 -  76: [  2560,     1]     NONE
 -  77: [  2560,  2560]     NONE
 -  78: [  2560,     1]     NONE
 -  79: [  2560,  2560]     NONE
 -  80: [  2560,     1]     NONE
 -  81: [ 10240,  2560]     NONE
 -  82: [  2560, 10240]     NONE
 -  83: [  2560,     1]     NONE
 -  84: [  2560,  2560]     NONE
 -  85: [  2560,  2560]     NONE
 -  86: [  2560,     1]     NONE
 -  87: [  2560,     1]     NONE
 -  88: [  2560,     1]     NONE
 -  89: [  2560,     1]     NONE
 -  90: [ 10240,     1]     NONE
 -  91: [  2560,     1]     NONE
 -  92: [  2560,     1]     NONE
 -  93: [  2560,     1]     NONE
 -  94: [  2560,  2560]     NONE
 -  95: [  2560,     1]     NONE
 -  96: [  2560,  2560]     NONE
 -  97: [  2560,     1]     NONE
 -  98: [ 10240,  2560]     NONE
 -  99: [  2560, 10240]     NONE
 - 100: [  2560,     1]     NONE
 - 101: [  2560,  2560]     NONE
 - 102: [  2560,  2560]     NONE
 - 103: [  2560,     1]     NONE
 - 104: [  2560,     1]     NONE
 - 105: [  2560,     1]     NONE
 - 106: [  2560,     1]     NONE
 - 107: [ 10240,     1]     NONE
 - 108: [  2560,     1]     NONE
 - 109: [  2560,     1]     NONE
 - 110: [  2560,     1]     NONE
 - 111: [  2560,  2560]     NONE
 - 112: [  2560,     1]     NONE
 - 113: [  2560,  2560]     NONE
 - 114: [  2560,     1]     NONE
 - 115: [ 10240,  2560]     NONE
 - 116: [  2560, 10240]     NONE
 - 117: [  2560,     1]     NONE
 - 118: [  2560,  2560]     NONE
 - 119: [  2560,  2560]     NONE
 - 120: [  2560,     1]     NONE
 - 121: [  2560,     1]     NONE
 - 122: [  2560,     1]     NONE
 - 123: [  2560,     1]     NONE
 - 124: [ 10240,     1]     NONE
 - 125: [  2560,     1]     NONE
 - 126: [  2560,     1]     NONE
 - 127: [  2560,     1]     NONE
 - 128: [  2560,  2560]     NONE
 - 129: [  2560,     1]     NONE
 - 130: [  2560,  2560]     NONE
 - 131: [  2560,     1]     NONE
 - 132: [ 10240,  2560]     NONE
 - 133: [  2560, 10240]     NONE
 - 134: [  2560,     1]     NONE
 - 135: [  2560,  2560]     NONE
 - 136: [  2560,  2560]     NONE
 - 137: [  2560,     1]     NONE
 - 138: [  2560,     1]     NONE
 - 139: [  2560,     1]     NONE
 - 140: [  2560,     1]     NONE
 - 141: [ 10240,     1]     NONE
 - 142: [  2560,     1]     NONE
 - 143: [  2560,     1]     NONE
 - 144: [  2560,     1]     NONE
 - 145: [  2560,  2560]     NONE
 - 146: [  2560,     1]     NONE
 - 147: [  2560,  2560]     NONE
 - 148: [  2560,     1]     NONE
 - 149: [ 10240,  2560]     NONE
 - 150: [  2560, 10240]     NONE
 - 151: [  2560,     1]     NONE
 - 152: [  2560,  2560]     NONE
 - 153: [  2560,  2560]     NONE
 - 154: [  2560,     1]     NONE
 - 155: [  2560,     1]     NONE
 - 156: [  2560,     1]     NONE
 - 157: [  2560,     1]     NONE
 - 158: [ 10240,     1]     NONE
 - 159: [  2560,     1]     NONE
 - 160: [  2560,     1]     NONE
 - 161: [  2560,     1]     NONE
 - 162: [  2560,  2560]     NONE
 - 163: [  2560,     1]     NONE
 - 164: [  2560,  2560]     NONE
 - 165: [  2560,     1]     NONE
 - 166: [ 10240,  2560]     NONE
 - 167: [  2560, 10240]     NONE
 - 168: [  2560,     1]     NONE
 - 169: [  2560,  2560]     NONE
 - 170: [  2560,  2560]     NONE
 - 171: [  2560,     1]     NONE
 - 172: [  2560,     1]     NONE
 - 173: [  2560,     1]     NONE
 - 174: [  2560,     1]     NONE
 - 175: [ 10240,     1]     NONE
 - 176: [  2560,     1]     NONE
 - 177: [  2560,     1]     NONE
 - 178: [  2560,     1]     NONE
 - 179: [  2560,  2560]     NONE
 - 180: [  2560,     1]     NONE
 - 181: [  2560,  2560]     NONE
 - 182: [  2560,     1]     NONE
 - 183: [ 10240,  2560]     NONE
 - 184: [  2560, 10240]     NONE
 - 185: [  2560,     1]     NONE
 - 186: [  2560,  2560]     NONE
 - 187: [  2560,  2560]     NONE
 - 188: [  2560,     1]     NONE
 - 189: [  2560,     1]     NONE
 - 190: [  2560,     1]     NONE
 - 191: [  2560,     1]     NONE
 - 192: [ 10240,     1]     NONE
 - 193: [  2560,     1]     NONE
 - 194: [  2560,     1]     NONE
 - 195: [  2560,     1]     NONE
 - 196: [  2560,  2560]     NONE
 - 197: [  2560,     1]     NONE
 - 198: [  2560,  2560]     NONE
 - 199: [  2560,     1]     NONE
 - 200: [ 10240,  2560]     NONE
 - 201: [  2560, 10240]     NONE
 - 202: [  2560,     1]     NONE
 - 203: [  2560,  2560]     NONE
 - 204: [  2560,  2560]     NONE
 - 205: [  2560,     1]     NONE
 - 206: [  2560,     1]     NONE
 - 207: [  2560,     1]     NONE
 - 208: [  2560,     1]     NONE
 - 209: [ 10240,     1]     NONE
 - 210: [  2560,     1]     NONE
 - 211: [  2560,     1]     NONE
 - 212: [  2560,     1]     NONE
 - 213: [  2560,  2560]     NONE
 - 214: [  2560,     1]     NONE
 - 215: [  2560,  2560]     NONE
 - 216: [  2560,     1]     NONE
 - 217: [ 10240,  2560]     NONE
 - 218: [  2560, 10240]     NONE
 - 219: [  2560,     1]     NONE
 - 220: [  2560,  2560]     NONE
 - 221: [  2560,  2560]     NONE
 - 222: [  2560,     1]     NONE
 - 223: [  2560,     1]     NONE
 - 224: [  2560,     1]     NONE
 - 225: [  2560,     1]     NONE
 - 226: [ 10240,     1]     NONE
 - 227: [  2560,     1]     NONE
 - 228: [  2560,     1]     NONE
 - 229: [  2560,     1]     NONE
 - 230: [  2560,  2560]     NONE
 - 231: [  2560,     1]     NONE
 - 232: [  2560,  2560]     NONE
 - 233: [  2560,     1]     NONE
 - 234: [ 10240,  2560]     NONE
 - 235: [  2560, 10240]     NONE
 - 236: [  2560,     1]     NONE
 - 237: [  2560,  2560]     NONE
 - 238: [  2560,  2560]     NONE
 - 239: [  2560,     1]     NONE
 - 240: [  2560,     1]     NONE
 - 241: [  2560,     1]     NONE
 - 242: [  2560,     1]     NONE
 - 243: [ 10240,     1]     NONE
 - 244: [  2560,     1]     NONE
 - 245: [  2560,     1]     NONE
 - 246: [  2560,     1]     NONE
 - 247: [  2560,  2560]     NONE
 - 248: [  2560,     1]     NONE
 - 249: [  2560,  2560]     NONE
 - 250: [  2560,     1]     NONE
 - 251: [ 10240,  2560]     NONE
 - 252: [  2560, 10240]     NONE
 - 253: [  2560,     1]     NONE
 - 254: [  2560,  2560]     NONE
 - 255: [  2560,  2560]     NONE
 - 256: [  2560,     1]     NONE
 - 257: [  2560,     1]     NONE
 - 258: [  2560,     1]     NONE
 - 259: [  2560,     1]     NONE
 - 260: [ 10240,     1]     NONE
 - 261: [  2560,     1]     NONE
 - 262: [  2560,     1]     NONE
 - 263: [  2560,     1]     NONE
 - 264: [  2560,  2560]     NONE
 - 265: [  2560,     1]     NONE
 - 266: [  2560,  2560]     NONE
 - 267: [  2560,     1]     NONE
 - 268: [ 10240,  2560]     NONE
 - 269: [  2560, 10240]     NONE
 - 270: [  2560,     1]     NONE
 - 271: [  2560,  2560]     NONE
 - 272: [  2560,  2560]     NONE
 - 273: [  2560,     1]     NONE
 - 274: [  2560,     1]     NONE
 - 275: [  2560,     1]     NONE
 - 276: [  2560,     1]     NONE
 - 277: [ 10240,     1]     NONE
 - 278: [  2560,     1]     NONE
 - 279: [  2560,     1]     NONE
 - 280: [  2560,     1]     NONE
 - 281: [  2560,  2560]     NONE
 - 282: [  2560,     1]     NONE
 - 283: [  2560,  2560]     NONE
 - 284: [  2560,     1]     NONE
 - 285: [ 10240,  2560]     NONE
 - 286: [  2560, 10240]     NONE
 - 287: [  2560,     1]     NONE
 - 288: [  2560,  2560]     NONE
 - 289: [  2560,  2560]     NONE
 - 290: [  2560,     1]     NONE
 - 291: [  2560,     1]     NONE
 - 292: [  2560,     1]     NONE
 - 293: [  2560,     1]     NONE
 - 294: [ 10240,     1]     NONE
 - 295: [  2560,     1]     NONE
 - 296: [  2560,     1]     NONE
 - 297: [  2560,     1]     NONE
 - 298: [  2560,  2560]     NONE
 - 299: [  2560,     1]     NONE
 - 300: [  2560,  2560]     NONE
 - 301: [  2560,     1]     NONE
 - 302: [ 10240,  2560]     NONE
 - 303: [  2560, 10240]     NONE
 - 304: [  2560,     1]     NONE
 - 305: [  2560,  2560]     NONE
 - 306: [  2560,  2560]     NONE
 - 307: [  2560,     1]     NONE
 - 308: [  2560,     1]     NONE
 - 309: [  2560,     1]     NONE
 - 310: [  2560,     1]     NONE
 - 311: [ 10240,     1]     NONE
 - 312: [  2560,     1]     NONE
 - 313: [  2560,     1]     NONE
 - 314: [  2560,     1]     NONE
 - 315: [  2560,  2560]     NONE
 - 316: [  2560,     1]     NONE
 - 317: [  2560,  2560]     NONE
 - 318: [  2560,     1]     NONE
 - 319: [ 10240,  2560]     NONE
 - 320: [  2560, 10240]     NONE
 - 321: [  2560,     1]     NONE
 - 322: [  2560,  2560]     NONE
 - 323: [  2560,  2560]     NONE
 - 324: [  2560,     1]     NONE
 - 325: [  2560,     1]     NONE
 - 326: [  2560,     1]     NONE
 - 327: [  2560,     1]     NONE
 - 328: [ 10240,     1]     NONE
 - 329: [  2560,     1]     NONE
 - 330: [  2560,     1]     NONE
 - 331: [  2560,     1]     NONE
 - 332: [  2560,  2560]     NONE
 - 333: [  2560,     1]     NONE
 - 334: [  2560,  2560]     NONE
 - 335: [  2560,     1]     NONE
 - 336: [ 10240,  2560]     NONE
 - 337: [  2560, 10240]     NONE
 - 338: [  2560,     1]     NONE
 - 339: [  2560,  2560]     NONE
 - 340: [  2560,  2560]     NONE
 - 341: [  2560,     1]     NONE
 - 342: [  2560,     1]     NONE
 - 343: [  2560,     1]     NONE
 - 344: [  2560,     1]     NONE
 - 345: [ 10240,     1]     NONE
 - 346: [  2560,     1]     NONE
 - 347: [  2560,     1]     NONE
 - 348: [  2560,     1]     NONE
 - 349: [  2560,  2560]     NONE
 - 350: [  2560,     1]     NONE
 - 351: [  2560,  2560]     NONE
 - 352: [  2560,     1]     NONE
 - 353: [ 10240,  2560]     NONE
 - 354: [  2560, 10240]     NONE
 - 355: [  2560,     1]     NONE
 - 356: [  2560,  2560]     NONE
 - 357: [  2560,  2560]     NONE
 - 358: [  2560,     1]     NONE
 - 359: [  2560,     1]     NONE
 - 360: [  2560,     1]     NONE
 - 361: [  2560,     1]     NONE
 - 362: [ 10240,     1]     NONE
 - 363: [  2560,     1]     NONE
 - 364: [  2560,     1]     NONE
 - 365: [  2560,     1]     NONE
 - 366: [  2560,  2560]     NONE
 - 367: [  2560,     1]     NONE
 - 368: [  2560,  2560]     NONE
 - 369: [  2560,     1]     NONE
 - 370: [ 10240,  2560]     NONE
 - 371: [  2560, 10240]     NONE
 - 372: [  2560,     1]     NONE
 - 373: [  2560,  2560]     NONE
 - 374: [  2560,  2560]     NONE
 - 375: [  2560,     1]     NONE
 - 376: [  2560,     1]     NONE
 - 377: [  2560,     1]     NONE
 - 378: [  2560,     1]     NONE
 - 379: [ 10240,     1]     NONE
 - 380: [  2560,     1]     NONE
 - 381: [  2560,     1]     NONE
 - 382: [  2560,     1]     NONE
 - 383: [  2560,  2560]     NONE
 - 384: [  2560,     1]     NONE
 - 385: [  2560,  2560]     NONE
 - 386: [  2560,     1]     NONE
 - 387: [ 10240,  2560]     NONE
 - 388: [  2560, 10240]     NONE
 - 389: [  2560,     1]     NONE
 - 390: [  2560,  2560]     NONE
 - 391: [  2560,  2560]     NONE
 - 392: [  2560,     1]     NONE
 - 393: [  2560,     1]     NONE
 - 394: [  2560,     1]     NONE
 - 395: [  2560,     1]     NONE
 - 396: [ 10240,     1]     NONE
 - 397: [  2560,     1]     NONE
 - 398: [  2560,     1]     NONE
 - 399: [  2560,     1]     NONE
 - 400: [  2560,  2560]     NONE
 - 401: [  2560,     1]     NONE
 - 402: [  2560,  2560]     NONE
 - 403: [  2560,     1]     NONE
 - 404: [ 10240,  2560]     NONE
 - 405: [  2560, 10240]     NONE
 - 406: [  2560,     1]     NONE
 - 407: [  2560,  2560]     NONE
 - 408: [  2560,  2560]     NONE
 - 409: [  2560,     1]     NONE
 - 410: [  2560,     1]     NONE
 - 411: [  2560,     1]     NONE
 - 412: [  2560,     1]     NONE
 - 413: [ 10240,     1]     NONE
 - 414: [  2560,     1]     NONE
 - 415: [  2560,     1]     NONE
 - 416: [  2560,     1]     NONE
 - 417: [  2560,  2560]     NONE
 - 418: [  2560,     1]     NONE
 - 419: [  2560,  2560]     NONE
 - 420: [  2560,     1]     NONE
 - 421: [ 10240,  2560]     NONE
 - 422: [  2560, 10240]     NONE
 - 423: [  2560,     1]     NONE
 - 424: [  2560,  2560]     NONE
 - 425: [  2560,  2560]     NONE
 - 426: [  2560,     1]     NONE
 - 427: [  2560,     1]     NONE
 - 428: [  2560,     1]     NONE
 - 429: [  2560,     1]     NONE
 - 430: [ 10240,     1]     NONE
 - 431: [  2560,     1]     NONE
 - 432: [  2560,     1]     NONE
 - 433: [  2560,     1]     NONE
 - 434: [  2560,  2560]     NONE
 - 435: [  2560,     1]     NONE
 - 436: [  2560,  2560]     NONE
 - 437: [  2560,     1]     NONE
 - 438: [ 10240,  2560]     NONE
 - 439: [  2560, 10240]     NONE
 - 440: [  2560,     1]     NONE
 - 441: [  2560,  2560]     NONE
 - 442: [  2560,  2560]     NONE
 - 443: [  2560,     1]     NONE
 - 444: [  2560,     1]     NONE
 - 445: [  2560,     1]     NONE
 - 446: [  2560,     1]     NONE
 - 447: [ 10240,     1]     NONE
 - 448: [  2560,     1]     NONE
 - 449: [  2560,     1]     NONE
 - 450: [  2560,     1]     NONE
 - 451: [  2560,  2560]     NONE
 - 452: [  2560,     1]     NONE
 - 453: [  2560,  2560]     NONE
 - 454: [  2560,     1]     NONE
 - 455: [ 10240,  2560]     NONE
 - 456: [  2560, 10240]     NONE
 - 457: [  2560,     1]     NONE
 - 458: [  2560,  2560]     NONE
 - 459: [  2560,  2560]     NONE
 - 460: [  2560,     1]     NONE
 - 461: [  2560,     1]     NONE
 - 462: [  2560,     1]     NONE
 - 463: [  2560,     1]     NONE
 - 464: [ 10240,     1]     NONE
 - 465: [  2560,     1]     NONE
 - 466: [  2560,     1]     NONE
 - 467: [  2560,     1]     NONE
 - 468: [  2560,  2560]     NONE
 - 469: [  2560,     1]     NONE
 - 470: [  2560,  2560]     NONE
 - 471: [  2560,     1]     NONE
 - 472: [ 10240,  2560]     NONE
 - 473: [  2560, 10240]     NONE
 - 474: [  2560,     1]     NONE
 - 475: [  2560,  2560]     NONE
 - 476: [  2560,  2560]     NONE
 - 477: [  2560,     1]     NONE
 - 478: [  2560,     1]     NONE
 - 479: [  2560,     1]     NONE
 - 480: [  2560,     1]     NONE
 - 481: [ 10240,     1]     NONE
 - 482: [  2560,     1]     NONE
 - 483: [  2560,     1]     NONE
 - 484: [  2560,     1]     NONE
 - 485: [  2560,  2560]     NONE
 - 486: [  2560,     1]     NONE
 - 487: [  2560,  2560]     NONE
 - 488: [  2560,     1]     NONE
 - 489: [ 10240,  2560]     NONE
 - 490: [  2560, 10240]     NONE
 - 491: [  2560,     1]     NONE
 - 492: [  2560,  2560]     NONE
 - 493: [  2560,  2560]     NONE
 - 494: [  2560,     1]     NONE
 - 495: [  2560,     1]     NONE
 - 496: [  2560,     1]     NONE
 - 497: [  2560,     1]     NONE
 - 498: [ 10240,     1]     NONE
 - 499: [  2560,     1]     NONE
 - 500: [  2560,     1]     NONE
 - 501: [  2560,     1]     NONE
 - 502: [  2560,  2560]     NONE
 - 503: [  2560,     1]     NONE
 - 504: [  2560,  2560]     NONE
 - 505: [  2560,     1]     NONE
 - 506: [ 10240,  2560]     NONE
 - 507: [  2560, 10240]     NONE
 - 508: [  2560,     1]     NONE
 - 509: [  2560,  2560]     NONE
 - 510: [  2560,  2560]     NONE
 - 511: [  2560,     1]     NONE
 - 512: [  2560,     1]     NONE
 - 513: [  2560,     1]     NONE
 - 514: [  2560,     1]     NONE
 - 515: [ 10240,     1]     NONE
 - 516: [  2560,     1]     NONE
 - 517: [  2560,     1]     NONE
 - 518: [  2560,     1]     NONE
 - 519: [  2560,  2560]     NONE
 - 520: [  2560,     1]     NONE
 - 521: [  2560,  2560]     NONE
 - 522: [  2560,     1]     NONE
 - 523: [ 10240,  2560]     NONE
 - 524: [  2560, 10240]     NONE
 - 525: [  2560,     1]     NONE
 - 526: [  2560,  2560]     NONE
 - 527: [  2560,  2560]     NONE
 - 528: [  2560,     1]     NONE
 - 529: [  2560,     1]     NONE
 - 530: [  2560,     1]     NONE
 - 531: [  2560,     1]     NONE
 - 532: [ 10240,     1]     NONE
 - 533: [  2560,     1]     NONE
 - 534: [  2560,     1]     NONE
 - 535: [  2560,     1]     NONE
 - 536: [  2560,  2560]     NONE
 - 537: [  2560,     1]     NONE
 - 538: [  2560, 102400]     NONE
 - 539: [  2560,     1]     NONE
 - 540: [ 10240,  2560]     NONE
 - 541: [  2560, 10240]     NONE
 - 542: [  2560,     1]     NONE
 - 543: [  2560,  2560]     NONE
 - 544: [  2560,  2560]     NONE
 - 545: [  2560,     1]     NONE
 - 546: [  2560,     1]     NONE
 - 547: [  2560,     1]     NONE
 - 548: [  2560,     1]     NONE
 - 549: [ 10240,     1]     NONE
 - 550: [  2560,     1]     NONE
 - 551: [  2560,     1]     NONE
perf_total_per_op_us[             ADD] =   0.321 ms
perf_total_per_op_us[             MUL] =   0.065 ms
perf_total_per_op_us[            NORM] =   0.065 ms
perf_total_per_op_us[         MUL_MAT] =   0.257 ms
perf_total_per_op_us[           SCALE] =   0.032 ms
perf_total_per_op_us[             CPY] =   0.096 ms
perf_total_per_op_us[         RESHAPE] =   0.096 ms
perf_total_per_op_us[            VIEW] =   0.128 ms
perf_total_per_op_us[         PERMUTE] =   0.064 ms
perf_total_per_op_us[       TRANSPOSE] =   0.032 ms
perf_total_per_op_us[        GET_ROWS] =   0.001 ms
perf_total_per_op_us[   DIAG_MASK_INF] =   0.032 ms
perf_total_per_op_us[        SOFT_MAX] =   0.032 ms
perf_total_per_op_us[            ROPE] =   0.064 ms
perf_total_per_op_us[           UNARY] =   0.032 ms
========================================
 <end_of_turn>=== GRAPH ===
n_nodes = 1317
 -   0: [  2560,     1,     1]         GET_ROWS   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   1: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   2: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   3: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   4: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   5: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   6: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   7: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   8: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   9: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  10: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  11: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  12: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  13: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  14: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  15: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  16: [     6,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  17: [   128,     6,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  18: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  19: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  20: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  21: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  22: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  23: [     6,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  24: [     6,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  25: [     6,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  26: [     6,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  27: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  28: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  29: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  30: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  31: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  32: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  33: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  34: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  35: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  36: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  37: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  38: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  39: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  40: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  41: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  42: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  43: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  44: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  45: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  46: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  47: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  48: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  49: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  50: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  51: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  52: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  53: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  54: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  55: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  56: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  57: [     6,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  58: [   128,     6,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  59: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  60: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  61: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  62: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  63: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  64: [     6,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  65: [     6,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  66: [     6,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  67: [     6,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  68: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  69: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  70: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  71: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  72: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  73: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  74: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  75: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  76: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  77: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  78: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  79: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  80: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  81: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  82: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  83: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  84: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  85: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  86: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  87: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  88: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  89: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  90: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  91: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  92: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  93: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  94: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  95: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  96: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  97: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  98: [     6,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  99: [   128,     6,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 100: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 102: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 103: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 104: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 105: [     6,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 106: [     6,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 107: [     6,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 108: [     6,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 109: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 110: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 111: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 112: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 113: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 114: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 115: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 116: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 117: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 118: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 119: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 120: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 121: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 122: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 123: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 124: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 125: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 127: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 128: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 129: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 130: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 131: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 132: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 133: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 134: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 135: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 136: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 137: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 138: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 139: [     6,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 140: [   128,     6,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 141: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 143: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 144: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 145: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 146: [     6,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 147: [     6,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 148: [     6,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 149: [     6,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 150: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 151: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 152: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 153: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 154: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 155: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 156: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 157: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 158: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 159: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 160: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 161: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 162: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 163: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 164: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 165: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 166: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 168: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 169: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 170: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 171: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 172: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 173: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 174: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 175: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 176: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 177: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 178: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 179: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 180: [     6,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 181: [   128,     6,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 182: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 184: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 185: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 186: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 187: [     6,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 188: [     6,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 189: [     6,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 190: [     6,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 191: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 192: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 193: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 194: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 195: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 196: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 197: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 198: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 199: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 200: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 201: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 202: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 203: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 204: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 205: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 206: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 207: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 209: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 210: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 211: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 212: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 213: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 214: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 215: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 216: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 217: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 218: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 219: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 220: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 221: [     6,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 222: [   128,     6,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 223: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 225: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 226: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 227: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 228: [     6,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 229: [     6,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 230: [     6,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 231: [     6,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 232: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 233: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 234: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 235: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 236: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 237: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 238: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 239: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 240: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 241: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 242: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 243: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 244: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 245: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 246: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 247: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 248: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 250: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 251: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 252: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 253: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 254: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 255: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 256: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 257: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 258: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 259: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 260: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 261: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 262: [     6,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 263: [   128,     6,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 264: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 266: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 267: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 268: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 269: [     6,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 270: [     6,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 271: [     6,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 272: [     6,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 273: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 274: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 275: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 276: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 277: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 278: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 279: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 280: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 281: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 282: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 283: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 284: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 285: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 286: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 287: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 288: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 289: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 291: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 292: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 293: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 294: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 295: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 296: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 297: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 298: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 299: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 300: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 301: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 302: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 303: [     6,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 304: [   128,     6,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 305: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 307: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 308: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 309: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 310: [     6,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 311: [     6,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 312: [     6,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 313: [     6,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 314: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 315: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 316: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 317: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 318: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 319: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 320: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 321: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 322: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 323: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 324: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 325: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 326: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 327: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 328: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 329: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 330: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 331: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 332: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 333: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 334: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 335: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 336: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 337: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 338: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 339: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 340: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 341: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 342: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 343: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 344: [     6,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 345: [   128,     6,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 346: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 347: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 348: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 349: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 350: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 351: [     6,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 352: [     6,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 353: [     6,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 354: [     6,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 355: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 356: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 357: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 358: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 359: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 360: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 361: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 362: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 363: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 364: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 365: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 366: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 367: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 368: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 369: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 370: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 371: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 372: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 373: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 374: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 375: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 376: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 377: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 378: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 379: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 380: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 381: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 382: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 383: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 384: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 385: [     6,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 386: [   128,     6,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 387: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 388: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 389: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 390: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 391: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 392: [     6,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 393: [     6,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 394: [     6,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 395: [     6,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 396: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 397: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 398: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 399: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 400: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 401: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 402: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 403: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 404: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 405: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 406: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 407: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 408: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 409: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 410: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 411: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 412: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 413: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 414: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 415: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 416: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 417: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 418: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 419: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 420: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 421: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 422: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 423: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 424: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 425: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 426: [     6,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 427: [   128,     6,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 428: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 429: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 430: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 431: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 432: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 433: [     6,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 434: [     6,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 435: [     6,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 436: [     6,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 437: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 438: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 439: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 440: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 441: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 442: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 443: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 444: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 445: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 446: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 447: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 448: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 449: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 450: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 451: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 452: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 453: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 454: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 455: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 456: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 457: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 458: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 459: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 460: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 461: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 462: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 463: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 464: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 465: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 466: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 467: [     6,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 468: [   128,     6,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 469: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 470: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 471: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 472: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 473: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 474: [     6,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 475: [     6,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 476: [     6,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 477: [     6,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 478: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 479: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 480: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 481: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 482: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 483: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 484: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 485: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 486: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 487: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 488: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 489: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 490: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 491: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 492: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 493: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 494: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 495: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 496: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 497: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 498: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 499: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 500: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 501: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 502: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 503: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 504: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 505: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 506: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 507: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 508: [     6,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 509: [   128,     6,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 510: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 511: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 512: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 513: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 514: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 515: [     6,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 516: [     6,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 517: [     6,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 518: [     6,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 519: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 520: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 521: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 522: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 523: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 524: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 525: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 526: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 527: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 528: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 529: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 530: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 531: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 532: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 533: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 534: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 535: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 536: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 537: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 538: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 539: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 540: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 541: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 542: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 543: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 544: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 545: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 546: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 547: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 548: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 549: [     6,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 550: [   128,     6,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 551: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 552: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 553: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 554: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 555: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 556: [     6,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 557: [     6,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 558: [     6,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 559: [     6,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 560: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 561: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 562: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 563: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 564: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 565: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 566: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 567: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 568: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 569: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 570: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 571: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 572: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 573: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 574: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 575: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 576: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 577: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 578: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 579: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 580: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 581: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 582: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 583: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 584: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 585: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 586: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 587: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 588: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 589: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 590: [     6,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 591: [   128,     6,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 592: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 593: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 594: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 595: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 596: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 597: [     6,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 598: [     6,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 599: [     6,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 600: [     6,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 601: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 602: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 603: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 604: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 605: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 606: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 607: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 608: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 609: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 610: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 611: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 612: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 613: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 614: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 615: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 616: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 617: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 618: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 619: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 620: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 621: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 622: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 623: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 624: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 625: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 626: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 627: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 628: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 629: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 630: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 631: [     6,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 632: [   128,     6,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 633: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 634: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 635: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 636: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 637: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 638: [     6,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 639: [     6,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 640: [     6,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 641: [     6,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 642: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 643: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 644: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 645: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 646: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 647: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 648: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 649: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 650: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 651: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 652: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 653: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 654: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 655: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 656: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 657: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 658: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 659: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 660: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 661: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 662: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 663: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 664: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 665: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 666: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 667: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 668: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 669: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 670: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 671: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 672: [     6,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 673: [   128,     6,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 674: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 675: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 676: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 677: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 678: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 679: [     6,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 680: [     6,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 681: [     6,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 682: [     6,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 683: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 684: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 685: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 686: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 687: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 688: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 689: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 690: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 691: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 692: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 693: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 694: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 695: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 696: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 697: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 698: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 699: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 700: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 701: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 702: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 703: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 704: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 705: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 706: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 707: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 708: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 709: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 710: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 711: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 712: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 713: [     6,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 714: [   128,     6,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 715: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 716: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 717: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 718: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 719: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 720: [     6,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 721: [     6,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 722: [     6,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 723: [     6,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 724: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 725: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 726: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 727: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 728: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 729: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 730: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 731: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 732: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 733: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 734: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 735: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 736: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 737: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 738: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 739: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 740: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 741: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 742: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 743: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 744: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 745: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 746: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 747: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 748: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 749: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 750: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 751: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 752: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 753: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 754: [     6,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 755: [   128,     6,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 756: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 757: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 758: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 759: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 760: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 761: [     6,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 762: [     6,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 763: [     6,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 764: [     6,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 765: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 766: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 767: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 768: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 769: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 770: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 771: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 772: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 773: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 774: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 775: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 776: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 777: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 778: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 779: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 780: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 781: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 782: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 783: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 784: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 785: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 786: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 787: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 788: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 789: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 790: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 791: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 792: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 793: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 794: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 795: [     6,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 796: [   128,     6,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 797: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 798: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 799: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 800: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 801: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 802: [     6,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 803: [     6,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 804: [     6,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 805: [     6,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 806: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 807: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 808: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 809: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 810: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 811: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 812: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 813: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 814: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 815: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 816: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 817: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 818: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 819: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 820: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 821: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 822: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 823: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 824: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 825: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 826: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 827: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 828: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 829: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 830: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 831: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 832: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 833: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 834: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 835: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 836: [     6,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 837: [   128,     6,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 838: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 839: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 840: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 841: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 842: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 843: [     6,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 844: [     6,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 845: [     6,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 846: [     6,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 847: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 848: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 849: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 850: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 851: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 852: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 853: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 854: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 855: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 856: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 857: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 858: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 859: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 860: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 861: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 862: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 863: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 864: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 865: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 866: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 867: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 868: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 869: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 870: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 871: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 872: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 873: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 874: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 875: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 876: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 877: [     6,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 878: [   128,     6,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 879: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 880: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 881: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 882: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 883: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 884: [     6,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 885: [     6,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 886: [     6,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 887: [     6,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 888: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 889: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 890: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 891: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 892: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 893: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 894: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 895: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 896: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 897: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 898: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 899: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 900: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 901: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 902: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 903: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 904: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 905: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 906: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 907: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 908: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 909: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 910: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 911: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 912: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 913: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 914: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 915: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 916: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 917: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 918: [     6,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 919: [   128,     6,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 920: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 921: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 922: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 923: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 924: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 925: [     6,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 926: [     6,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 927: [     6,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 928: [     6,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 929: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 930: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 931: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 932: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 933: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 934: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 935: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 936: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 937: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 938: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 939: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 940: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 941: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 942: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 943: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 944: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 945: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 946: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 947: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 948: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 949: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 950: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 951: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 952: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 953: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 954: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 955: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 956: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 957: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 958: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 959: [     6,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 960: [   128,     6,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 961: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 962: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 963: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 964: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 965: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 966: [     6,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 967: [     6,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 968: [     6,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 969: [     6,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 970: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 971: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 972: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 973: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 974: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 975: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 976: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 977: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 978: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 979: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 980: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 981: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 982: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 983: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 984: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 985: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 986: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 987: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 988: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 989: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 990: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 991: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 992: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 993: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 994: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 995: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 996: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 997: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 998: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 999: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1000: [     6,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1001: [   128,     6,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1002: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1003: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1004: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1005: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1006: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1007: [     6,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1008: [     6,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1009: [     6,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1010: [     6,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1011: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1012: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1013: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1014: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1015: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1016: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1017: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1018: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1019: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1020: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1021: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1022: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1023: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1024: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1025: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1026: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1027: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1028: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1029: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1030: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1031: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1032: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1033: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1034: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1035: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1036: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1037: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1038: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1039: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1040: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1041: [     6,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1042: [   128,     6,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1043: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1044: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1045: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1046: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1047: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1048: [     6,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1049: [     6,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1050: [     6,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1051: [     6,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1052: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1053: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1054: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1055: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1056: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1057: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1058: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1059: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1060: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1061: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1062: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1063: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1064: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1065: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1066: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1067: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1068: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1069: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1070: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1071: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1072: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1073: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1074: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1075: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1076: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1077: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1078: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1079: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1080: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1081: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1082: [     6,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1083: [   128,     6,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1084: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1085: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1086: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1087: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1088: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1089: [     6,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1090: [     6,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1091: [     6,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1092: [     6,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1093: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1094: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1095: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1096: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1097: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1098: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1099: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1100: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1102: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1103: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1104: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1105: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1106: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1107: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1108: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1109: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1110: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1111: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1112: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1113: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1114: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1115: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1116: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1117: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1118: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1119: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1120: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1121: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1122: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1123: [     6,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1124: [   128,     6,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1125: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1127: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1128: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1129: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1130: [     6,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1131: [     6,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1132: [     6,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1133: [     6,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1134: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1135: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1136: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1137: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1138: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1139: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1140: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1141: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1143: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1144: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1145: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1146: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1147: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1148: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1149: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1150: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1151: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1152: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1153: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1154: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1155: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1156: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1157: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1158: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1159: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1160: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1161: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1162: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1163: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1164: [     6,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1165: [   128,     6,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1166: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1168: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1169: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1170: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1171: [     6,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1172: [     6,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1173: [     6,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1174: [     6,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1175: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1176: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1177: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1178: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1179: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1180: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1181: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1182: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1184: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1185: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1186: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1187: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1188: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1189: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1190: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1191: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1192: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1193: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1194: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1195: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1196: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1197: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1198: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1199: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1200: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1201: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1202: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1203: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1204: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1205: [     6,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1206: [   128,     6,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1207: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1209: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1210: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1211: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1212: [     6,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1213: [     6,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1214: [     6,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1215: [     6,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1216: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1217: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1218: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1219: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1220: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1221: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1222: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1223: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1225: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1226: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1227: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1228: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1229: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1230: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1231: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1232: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1233: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1234: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1235: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1236: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1237: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1238: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1239: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1240: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1241: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1242: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1243: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1244: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1245: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1246: [     6,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1247: [   128,     6,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1248: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1250: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1251: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1252: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1253: [     6,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1254: [     6,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1255: [     6,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1256: [     6,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1257: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1258: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1259: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1260: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1261: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1262: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1263: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1264: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1266: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1267: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1268: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1269: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1270: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1271: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1272: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1273: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1274: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1275: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1276: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1277: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1278: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1279: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1280: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1281: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1282: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1283: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1284: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1285: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1286: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1287: [     6,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1288: [   128,     6,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1289: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1291: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1292: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1293: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1294: [     6,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1295: [     6,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1296: [     6,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1297: [     6,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1298: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1299: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1300: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1301: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1302: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1303: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1304: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1305: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1307: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1308: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1309: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1310: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1311: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1312: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1313: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1314: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1315: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1316: [ 102400,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
n_leafs = 552
 -   0: [  2560,  2560]     NONE
 -   1: [  2560,     1]     NONE
 -   2: [  2560, 102400]     NONE
 -   3: [     1,     1]     NONE
 -   4: [  2560,     1]     NONE
 -   5: [  2560,     1]     NONE
 -   6: [ 41943040,     1]     NONE
 -   7: [  2560,  2560]     NONE
 -   8: [  2560,     1]     NONE
 -   9: [ 41943040,     1]     NONE
 -  10: [  2560,  2560]     NONE
 -  11: [  2560,     1]     NONE
 -  12: [ 10240,  2560]     NONE
 -  13: [  2560, 10240]     NONE
 -  14: [  2560,     1]     NONE
 -  15: [  2560,  2560]     NONE
 -  16: [  2560,  2560]     NONE
 -  17: [  2560,     1]     NONE
 -  18: [     1,     1]     NONE
 -  19: [  2560,     1]     NONE
 -  20: [  2560,     1]     NONE
 -  21: [  2560,     1]     NONE
 -  22: [ 10240,     1]     NONE
 -  23: [  2560,     1]     NONE
 -  24: [  2560,     1]     NONE
 -  25: [  2560,     1]     NONE
 -  26: [  2560,  2560]     NONE
 -  27: [  2560,     1]     NONE
 -  28: [  2560,  2560]     NONE
 -  29: [  2560,     1]     NONE
 -  30: [ 10240,  2560]     NONE
 -  31: [  2560, 10240]     NONE
 -  32: [  2560,     1]     NONE
 -  33: [  2560,  2560]     NONE
 -  34: [  2560,  2560]     NONE
 -  35: [  2560,     1]     NONE
 -  36: [  2560,     1]     NONE
 -  37: [  2560,     1]     NONE
 -  38: [  2560,     1]     NONE
 -  39: [ 10240,     1]     NONE
 -  40: [  2560,     1]     NONE
 -  41: [  2560,     1]     NONE
 -  42: [  2560,     1]     NONE
 -  43: [  2560,  2560]     NONE
 -  44: [  2560,     1]     NONE
 -  45: [  2560,  2560]     NONE
 -  46: [  2560,     1]     NONE
 -  47: [ 10240,  2560]     NONE
 -  48: [  2560, 10240]     NONE
 -  49: [  2560,     1]     NONE
 -  50: [  2560,  2560]     NONE
 -  51: [  2560,  2560]     NONE
 -  52: [  2560,     1]     NONE
 -  53: [  2560,     1]     NONE
 -  54: [  2560,     1]     NONE
 -  55: [  2560,     1]     NONE
 -  56: [ 10240,     1]     NONE
 -  57: [  2560,     1]     NONE
 -  58: [  2560,     1]     NONE
 -  59: [  2560,     1]     NONE
 -  60: [  2560,  2560]     NONE
 -  61: [  2560,     1]     NONE
 -  62: [  2560,  2560]     NONE
 -  63: [  2560,     1]     NONE
 -  64: [ 10240,  2560]     NONE
 -  65: [  2560, 10240]     NONE
 -  66: [  2560,     1]     NONE
 -  67: [  2560,  2560]     NONE
 -  68: [  2560,  2560]     NONE
 -  69: [  2560,     1]     NONE
 -  70: [  2560,     1]     NONE
 -  71: [  2560,     1]     NONE
 -  72: [  2560,     1]     NONE
 -  73: [ 10240,     1]     NONE
 -  74: [  2560,     1]     NONE
 -  75: [  2560,     1]     NONE
 -  76: [  2560,     1]     NONE
 -  77: [  2560,  2560]     NONE
 -  78: [  2560,     1]     NONE
 -  79: [  2560,  2560]     NONE
 -  80: [  2560,     1]     NONE
 -  81: [ 10240,  2560]     NONE
 -  82: [  2560, 10240]     NONE
 -  83: [  2560,     1]     NONE
 -  84: [  2560,  2560]     NONE
 -  85: [  2560,  2560]     NONE
 -  86: [  2560,     1]     NONE
 -  87: [  2560,     1]     NONE
 -  88: [  2560,     1]     NONE
 -  89: [  2560,     1]     NONE
 -  90: [ 10240,     1]     NONE
 -  91: [  2560,     1]     NONE
 -  92: [  2560,     1]     NONE
 -  93: [  2560,     1]     NONE
 -  94: [  2560,  2560]     NONE
 -  95: [  2560,     1]     NONE
 -  96: [  2560,  2560]     NONE
 -  97: [  2560,     1]     NONE
 -  98: [ 10240,  2560]     NONE
 -  99: [  2560, 10240]     NONE
 - 100: [  2560,     1]     NONE
 - 101: [  2560,  2560]     NONE
 - 102: [  2560,  2560]     NONE
 - 103: [  2560,     1]     NONE
 - 104: [  2560,     1]     NONE
 - 105: [  2560,     1]     NONE
 - 106: [  2560,     1]     NONE
 - 107: [ 10240,     1]     NONE
 - 108: [  2560,     1]     NONE
 - 109: [  2560,     1]     NONE
 - 110: [  2560,     1]     NONE
 - 111: [  2560,  2560]     NONE
 - 112: [  2560,     1]     NONE
 - 113: [  2560,  2560]     NONE
 - 114: [  2560,     1]     NONE
 - 115: [ 10240,  2560]     NONE
 - 116: [  2560, 10240]     NONE
 - 117: [  2560,     1]     NONE
 - 118: [  2560,  2560]     NONE
 - 119: [  2560,  2560]     NONE
 - 120: [  2560,     1]     NONE
 - 121: [  2560,     1]     NONE
 - 122: [  2560,     1]     NONE
 - 123: [  2560,     1]     NONE
 - 124: [ 10240,     1]     NONE
 - 125: [  2560,     1]     NONE
 - 126: [  2560,     1]     NONE
 - 127: [  2560,     1]     NONE
 - 128: [  2560,  2560]     NONE
 - 129: [  2560,     1]     NONE
 - 130: [  2560,  2560]     NONE
 - 131: [  2560,     1]     NONE
 - 132: [ 10240,  2560]     NONE
 - 133: [  2560, 10240]     NONE
 - 134: [  2560,     1]     NONE
 - 135: [  2560,  2560]     NONE
 - 136: [  2560,  2560]     NONE
 - 137: [  2560,     1]     NONE
 - 138: [  2560,     1]     NONE
 - 139: [  2560,     1]     NONE
 - 140: [  2560,     1]     NONE
 - 141: [ 10240,     1]     NONE
 - 142: [  2560,     1]     NONE
 - 143: [  2560,     1]     NONE
 - 144: [  2560,     1]     NONE
 - 145: [  2560,  2560]     NONE
 - 146: [  2560,     1]     NONE
 - 147: [  2560,  2560]     NONE
 - 148: [  2560,     1]     NONE
 - 149: [ 10240,  2560]     NONE
 - 150: [  2560, 10240]     NONE
 - 151: [  2560,     1]     NONE
 - 152: [  2560,  2560]     NONE
 - 153: [  2560,  2560]     NONE
 - 154: [  2560,     1]     NONE
 - 155: [  2560,     1]     NONE
 - 156: [  2560,     1]     NONE
 - 157: [  2560,     1]     NONE
 - 158: [ 10240,     1]     NONE
 - 159: [  2560,     1]     NONE
 - 160: [  2560,     1]     NONE
 - 161: [  2560,     1]     NONE
 - 162: [  2560,  2560]     NONE
 - 163: [  2560,     1]     NONE
 - 164: [  2560,  2560]     NONE
 - 165: [  2560,     1]     NONE
 - 166: [ 10240,  2560]     NONE
 - 167: [  2560, 10240]     NONE
 - 168: [  2560,     1]     NONE
 - 169: [  2560,  2560]     NONE
 - 170: [  2560,  2560]     NONE
 - 171: [  2560,     1]     NONE
 - 172: [  2560,     1]     NONE
 - 173: [  2560,     1]     NONE
 - 174: [  2560,     1]     NONE
 - 175: [ 10240,     1]     NONE
 - 176: [  2560,     1]     NONE
 - 177: [  2560,     1]     NONE
 - 178: [  2560,     1]     NONE
 - 179: [  2560,  2560]     NONE
 - 180: [  2560,     1]     NONE
 - 181: [  2560,  2560]     NONE
 - 182: [  2560,     1]     NONE
 - 183: [ 10240,  2560]     NONE
 - 184: [  2560, 10240]     NONE
 - 185: [  2560,     1]     NONE
 - 186: [  2560,  2560]     NONE
 - 187: [  2560,  2560]     NONE
 - 188: [  2560,     1]     NONE
 - 189: [  2560,     1]     NONE
 - 190: [  2560,     1]     NONE
 - 191: [  2560,     1]     NONE
 - 192: [ 10240,     1]     NONE
 - 193: [  2560,     1]     NONE
 - 194: [  2560,     1]     NONE
 - 195: [  2560,     1]     NONE
 - 196: [  2560,  2560]     NONE
 - 197: [  2560,     1]     NONE
 - 198: [  2560,  2560]     NONE
 - 199: [  2560,     1]     NONE
 - 200: [ 10240,  2560]     NONE
 - 201: [  2560, 10240]     NONE
 - 202: [  2560,     1]     NONE
 - 203: [  2560,  2560]     NONE
 - 204: [  2560,  2560]     NONE
 - 205: [  2560,     1]     NONE
 - 206: [  2560,     1]     NONE
 - 207: [  2560,     1]     NONE
 - 208: [  2560,     1]     NONE
 - 209: [ 10240,     1]     NONE
 - 210: [  2560,     1]     NONE
 - 211: [  2560,     1]     NONE
 - 212: [  2560,     1]     NONE
 - 213: [  2560,  2560]     NONE
 - 214: [  2560,     1]     NONE
 - 215: [  2560,  2560]     NONE
 - 216: [  2560,     1]     NONE
 - 217: [ 10240,  2560]     NONE
 - 218: [  2560, 10240]     NONE
 - 219: [  2560,     1]     NONE
 - 220: [  2560,  2560]     NONE
 - 221: [  2560,  2560]     NONE
 - 222: [  2560,     1]     NONE
 - 223: [  2560,     1]     NONE
 - 224: [  2560,     1]     NONE
 - 225: [  2560,     1]     NONE
 - 226: [ 10240,     1]     NONE
 - 227: [  2560,     1]     NONE
 - 228: [  2560,     1]     NONE
 - 229: [  2560,     1]     NONE
 - 230: [  2560,  2560]     NONE
 - 231: [  2560,     1]     NONE
 - 232: [  2560,  2560]     NONE
 - 233: [  2560,     1]     NONE
 - 234: [ 10240,  2560]     NONE
 - 235: [  2560, 10240]     NONE
 - 236: [  2560,     1]     NONE
 - 237: [  2560,  2560]     NONE
 - 238: [  2560,  2560]     NONE
 - 239: [  2560,     1]     NONE
 - 240: [  2560,     1]     NONE
 - 241: [  2560,     1]     NONE
 - 242: [  2560,     1]     NONE
 - 243: [ 10240,     1]     NONE
 - 244: [  2560,     1]     NONE
 - 245: [  2560,     1]     NONE
 - 246: [  2560,     1]     NONE
 - 247: [  2560,  2560]     NONE
 - 248: [  2560,     1]     NONE
 - 249: [  2560,  2560]     NONE
 - 250: [  2560,     1]     NONE
 - 251: [ 10240,  2560]     NONE
 - 252: [  2560, 10240]     NONE
 - 253: [  2560,     1]     NONE
 - 254: [  2560,  2560]     NONE
 - 255: [  2560,  2560]     NONE
 - 256: [  2560,     1]     NONE
 - 257: [  2560,     1]     NONE
 - 258: [  2560,     1]     NONE
 - 259: [  2560,     1]     NONE
 - 260: [ 10240,     1]     NONE
 - 261: [  2560,     1]     NONE
 - 262: [  2560,     1]     NONE
 - 263: [  2560,     1]     NONE
 - 264: [  2560,  2560]     NONE
 - 265: [  2560,     1]     NONE
 - 266: [  2560,  2560]     NONE
 - 267: [  2560,     1]     NONE
 - 268: [ 10240,  2560]     NONE
 - 269: [  2560, 10240]     NONE
 - 270: [  2560,     1]     NONE
 - 271: [  2560,  2560]     NONE
 - 272: [  2560,  2560]     NONE
 - 273: [  2560,     1]     NONE
 - 274: [  2560,     1]     NONE
 - 275: [  2560,     1]     NONE
 - 276: [  2560,     1]     NONE
 - 277: [ 10240,     1]     NONE
 - 278: [  2560,     1]     NONE
 - 279: [  2560,     1]     NONE
 - 280: [  2560,     1]     NONE
 - 281: [  2560,  2560]     NONE
 - 282: [  2560,     1]     NONE
 - 283: [  2560,  2560]     NONE
 - 284: [  2560,     1]     NONE
 - 285: [ 10240,  2560]     NONE
 - 286: [  2560, 10240]     NONE
 - 287: [  2560,     1]     NONE
 - 288: [  2560,  2560]     NONE
 - 289: [  2560,  2560]     NONE
 - 290: [  2560,     1]     NONE
 - 291: [  2560,     1]     NONE
 - 292: [  2560,     1]     NONE
 - 293: [  2560,     1]     NONE
 - 294: [ 10240,     1]     NONE
 - 295: [  2560,     1]     NONE
 - 296: [  2560,     1]     NONE
 - 297: [  2560,     1]     NONE
 - 298: [  2560,  2560]     NONE
 - 299: [  2560,     1]     NONE
 - 300: [  2560,  2560]     NONE
 - 301: [  2560,     1]     NONE
 - 302: [ 10240,  2560]     NONE
 - 303: [  2560, 10240]     NONE
 - 304: [  2560,     1]     NONE
 - 305: [  2560,  2560]     NONE
 - 306: [  2560,  2560]     NONE
 - 307: [  2560,     1]     NONE
 - 308: [  2560,     1]     NONE
 - 309: [  2560,     1]     NONE
 - 310: [  2560,     1]     NONE
 - 311: [ 10240,     1]     NONE
 - 312: [  2560,     1]     NONE
 - 313: [  2560,     1]     NONE
 - 314: [  2560,     1]     NONE
 - 315: [  2560,  2560]     NONE
 - 316: [  2560,     1]     NONE
 - 317: [  2560,  2560]     NONE
 - 318: [  2560,     1]     NONE
 - 319: [ 10240,  2560]     NONE
 - 320: [  2560, 10240]     NONE
 - 321: [  2560,     1]     NONE
 - 322: [  2560,  2560]     NONE
 - 323: [  2560,  2560]     NONE
 - 324: [  2560,     1]     NONE
 - 325: [  2560,     1]     NONE
 - 326: [  2560,     1]     NONE
 - 327: [  2560,     1]     NONE
 - 328: [ 10240,     1]     NONE
 - 329: [  2560,     1]     NONE
 - 330: [  2560,     1]     NONE
 - 331: [  2560,     1]     NONE
 - 332: [  2560,  2560]     NONE
 - 333: [  2560,     1]     NONE
 - 334: [  2560,  2560]     NONE
 - 335: [  2560,     1]     NONE
 - 336: [ 10240,  2560]     NONE
 - 337: [  2560, 10240]     NONE
 - 338: [  2560,     1]     NONE
 - 339: [  2560,  2560]     NONE
 - 340: [  2560,  2560]     NONE
 - 341: [  2560,     1]     NONE
 - 342: [  2560,     1]     NONE
 - 343: [  2560,     1]     NONE
 - 344: [  2560,     1]     NONE
 - 345: [ 10240,     1]     NONE
 - 346: [  2560,     1]     NONE
 - 347: [  2560,     1]     NONE
 - 348: [  2560,     1]     NONE
 - 349: [  2560,  2560]     NONE
 - 350: [  2560,     1]     NONE
 - 351: [  2560,  2560]     NONE
 - 352: [  2560,     1]     NONE
 - 353: [ 10240,  2560]     NONE
 - 354: [  2560, 10240]     NONE
 - 355: [  2560,     1]     NONE
 - 356: [  2560,  2560]     NONE
 - 357: [  2560,  2560]     NONE
 - 358: [  2560,     1]     NONE
 - 359: [  2560,     1]     NONE
 - 360: [  2560,     1]     NONE
 - 361: [  2560,     1]     NONE
 - 362: [ 10240,     1]     NONE
 - 363: [  2560,     1]     NONE
 - 364: [  2560,     1]     NONE
 - 365: [  2560,     1]     NONE
 - 366: [  2560,  2560]     NONE
 - 367: [  2560,     1]     NONE
 - 368: [  2560,  2560]     NONE
 - 369: [  2560,     1]     NONE
 - 370: [ 10240,  2560]     NONE
 - 371: [  2560, 10240]     NONE
 - 372: [  2560,     1]     NONE
 - 373: [  2560,  2560]     NONE
 - 374: [  2560,  2560]     NONE
 - 375: [  2560,     1]     NONE
 - 376: [  2560,     1]     NONE
 - 377: [  2560,     1]     NONE
 - 378: [  2560,     1]     NONE
 - 379: [ 10240,     1]     NONE
 - 380: [  2560,     1]     NONE
 - 381: [  2560,     1]     NONE
 - 382: [  2560,     1]     NONE
 - 383: [  2560,  2560]     NONE
 - 384: [  2560,     1]     NONE
 - 385: [  2560,  2560]     NONE
 - 386: [  2560,     1]     NONE
 - 387: [ 10240,  2560]     NONE
 - 388: [  2560, 10240]     NONE
 - 389: [  2560,     1]     NONE
 - 390: [  2560,  2560]     NONE
 - 391: [  2560,  2560]     NONE
 - 392: [  2560,     1]     NONE
 - 393: [  2560,     1]     NONE
 - 394: [  2560,     1]     NONE
 - 395: [  2560,     1]     NONE
 - 396: [ 10240,     1]     NONE
 - 397: [  2560,     1]     NONE
 - 398: [  2560,     1]     NONE
 - 399: [  2560,     1]     NONE
 - 400: [  2560,  2560]     NONE
 - 401: [  2560,     1]     NONE
 - 402: [  2560,  2560]     NONE
 - 403: [  2560,     1]     NONE
 - 404: [ 10240,  2560]     NONE
 - 405: [  2560, 10240]     NONE
 - 406: [  2560,     1]     NONE
 - 407: [  2560,  2560]     NONE
 - 408: [  2560,  2560]     NONE
 - 409: [  2560,     1]     NONE
 - 410: [  2560,     1]     NONE
 - 411: [  2560,     1]     NONE
 - 412: [  2560,     1]     NONE
 - 413: [ 10240,     1]     NONE
 - 414: [  2560,     1]     NONE
 - 415: [  2560,     1]     NONE
 - 416: [  2560,     1]     NONE
 - 417: [  2560,  2560]     NONE
 - 418: [  2560,     1]     NONE
 - 419: [  2560,  2560]     NONE
 - 420: [  2560,     1]     NONE
 - 421: [ 10240,  2560]     NONE
 - 422: [  2560, 10240]     NONE
 - 423: [  2560,     1]     NONE
 - 424: [  2560,  2560]     NONE
 - 425: [  2560,  2560]     NONE
 - 426: [  2560,     1]     NONE
 - 427: [  2560,     1]     NONE
 - 428: [  2560,     1]     NONE
 - 429: [  2560,     1]     NONE
 - 430: [ 10240,     1]     NONE
 - 431: [  2560,     1]     NONE
 - 432: [  2560,     1]     NONE
 - 433: [  2560,     1]     NONE
 - 434: [  2560,  2560]     NONE
 - 435: [  2560,     1]     NONE
 - 436: [  2560,  2560]     NONE
 - 437: [  2560,     1]     NONE
 - 438: [ 10240,  2560]     NONE
 - 439: [  2560, 10240]     NONE
 - 440: [  2560,     1]     NONE
 - 441: [  2560,  2560]     NONE
 - 442: [  2560,  2560]     NONE
 - 443: [  2560,     1]     NONE
 - 444: [  2560,     1]     NONE
 - 445: [  2560,     1]     NONE
 - 446: [  2560,     1]     NONE
 - 447: [ 10240,     1]     NONE
 - 448: [  2560,     1]     NONE
 - 449: [  2560,     1]     NONE
 - 450: [  2560,     1]     NONE
 - 451: [  2560,  2560]     NONE
 - 452: [  2560,     1]     NONE
 - 453: [  2560,  2560]     NONE
 - 454: [  2560,     1]     NONE
 - 455: [ 10240,  2560]     NONE
 - 456: [  2560, 10240]     NONE
 - 457: [  2560,     1]     NONE
 - 458: [  2560,  2560]     NONE
 - 459: [  2560,  2560]     NONE
 - 460: [  2560,     1]     NONE
 - 461: [  2560,     1]     NONE
 - 462: [  2560,     1]     NONE
 - 463: [  2560,     1]     NONE
 - 464: [ 10240,     1]     NONE
 - 465: [  2560,     1]     NONE
 - 466: [  2560,     1]     NONE
 - 467: [  2560,     1]     NONE
 - 468: [  2560,  2560]     NONE
 - 469: [  2560,     1]     NONE
 - 470: [  2560,  2560]     NONE
 - 471: [  2560,     1]     NONE
 - 472: [ 10240,  2560]     NONE
 - 473: [  2560, 10240]     NONE
 - 474: [  2560,     1]     NONE
 - 475: [  2560,  2560]     NONE
 - 476: [  2560,  2560]     NONE
 - 477: [  2560,     1]     NONE
 - 478: [  2560,     1]     NONE
 - 479: [  2560,     1]     NONE
 - 480: [  2560,     1]     NONE
 - 481: [ 10240,     1]     NONE
 - 482: [  2560,     1]     NONE
 - 483: [  2560,     1]     NONE
 - 484: [  2560,     1]     NONE
 - 485: [  2560,  2560]     NONE
 - 486: [  2560,     1]     NONE
 - 487: [  2560,  2560]     NONE
 - 488: [  2560,     1]     NONE
 - 489: [ 10240,  2560]     NONE
 - 490: [  2560, 10240]     NONE
 - 491: [  2560,     1]     NONE
 - 492: [  2560,  2560]     NONE
 - 493: [  2560,  2560]     NONE
 - 494: [  2560,     1]     NONE
 - 495: [  2560,     1]     NONE
 - 496: [  2560,     1]     NONE
 - 497: [  2560,     1]     NONE
 - 498: [ 10240,     1]     NONE
 - 499: [  2560,     1]     NONE
 - 500: [  2560,     1]     NONE
 - 501: [  2560,     1]     NONE
 - 502: [  2560,  2560]     NONE
 - 503: [  2560,     1]     NONE
 - 504: [  2560,  2560]     NONE
 - 505: [  2560,     1]     NONE
 - 506: [ 10240,  2560]     NONE
 - 507: [  2560, 10240]     NONE
 - 508: [  2560,     1]     NONE
 - 509: [  2560,  2560]     NONE
 - 510: [  2560,  2560]     NONE
 - 511: [  2560,     1]     NONE
 - 512: [  2560,     1]     NONE
 - 513: [  2560,     1]     NONE
 - 514: [  2560,     1]     NONE
 - 515: [ 10240,     1]     NONE
 - 516: [  2560,     1]     NONE
 - 517: [  2560,     1]     NONE
 - 518: [  2560,     1]     NONE
 - 519: [  2560,  2560]     NONE
 - 520: [  2560,     1]     NONE
 - 521: [  2560,  2560]     NONE
 - 522: [  2560,     1]     NONE
 - 523: [ 10240,  2560]     NONE
 - 524: [  2560, 10240]     NONE
 - 525: [  2560,     1]     NONE
 - 526: [  2560,  2560]     NONE
 - 527: [  2560,  2560]     NONE
 - 528: [  2560,     1]     NONE
 - 529: [  2560,     1]     NONE
 - 530: [  2560,     1]     NONE
 - 531: [  2560,     1]     NONE
 - 532: [ 10240,     1]     NONE
 - 533: [  2560,     1]     NONE
 - 534: [  2560,     1]     NONE
 - 535: [  2560,     1]     NONE
 - 536: [  2560,  2560]     NONE
 - 537: [  2560,     1]     NONE
 - 538: [  2560, 102400]     NONE
 - 539: [  2560,     1]     NONE
 - 540: [ 10240,  2560]     NONE
 - 541: [  2560, 10240]     NONE
 - 542: [  2560,     1]     NONE
 - 543: [  2560,  2560]     NONE
 - 544: [  2560,  2560]     NONE
 - 545: [  2560,     1]     NONE
 - 546: [  2560,     1]     NONE
 - 547: [  2560,     1]     NONE
 - 548: [  2560,     1]     NONE
 - 549: [ 10240,     1]     NONE
 - 550: [  2560,     1]     NONE
 - 551: [  2560,     1]     NONE
perf_total_per_op_us[             ADD] =   0.321 ms
perf_total_per_op_us[             MUL] =   0.065 ms
perf_total_per_op_us[            NORM] =   0.065 ms
perf_total_per_op_us[         MUL_MAT] =   0.257 ms
perf_total_per_op_us[           SCALE] =   0.032 ms
perf_total_per_op_us[             CPY] =   0.096 ms
perf_total_per_op_us[         RESHAPE] =   0.096 ms
perf_total_per_op_us[            VIEW] =   0.128 ms
perf_total_per_op_us[         PERMUTE] =   0.064 ms
perf_total_per_op_us[       TRANSPOSE] =   0.032 ms
perf_total_per_op_us[        GET_ROWS] =   0.001 ms
perf_total_per_op_us[   DIAG_MASK_INF] =   0.032 ms
perf_total_per_op_us[        SOFT_MAX] =   0.032 ms
perf_total_per_op_us[            ROPE] =   0.064 ms
perf_total_per_op_us[           UNARY] =   0.032 ms
========================================
 user=== GRAPH ===
n_nodes = 1317
 -   0: [  2560,     1,     1]         GET_ROWS   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   1: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   2: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   3: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   4: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   5: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   6: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   7: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   8: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   9: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  10: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  11: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  12: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  13: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  14: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  15: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  16: [     7,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  17: [   128,     7,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  18: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  19: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  20: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  21: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  22: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  23: [     7,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  24: [     7,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  25: [     7,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  26: [     7,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  27: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  28: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  29: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  30: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  31: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  32: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  33: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  34: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  35: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  36: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  37: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  38: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  39: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  40: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  41: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  42: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  43: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  44: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  45: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  46: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  47: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  48: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  49: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  50: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  51: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  52: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  53: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  54: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  55: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  56: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  57: [     7,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  58: [   128,     7,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  59: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  60: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  61: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  62: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  63: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  64: [     7,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  65: [     7,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  66: [     7,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  67: [     7,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  68: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  69: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  70: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  71: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  72: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  73: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  74: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  75: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  76: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  77: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  78: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  79: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  80: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  81: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  82: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  83: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  84: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  85: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  86: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  87: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  88: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  89: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  90: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  91: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  92: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  93: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  94: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  95: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  96: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  97: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  98: [     7,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  99: [   128,     7,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 100: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 102: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 103: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 104: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 105: [     7,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 106: [     7,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 107: [     7,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 108: [     7,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 109: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 110: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 111: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 112: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 113: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 114: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 115: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 116: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 117: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 118: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 119: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 120: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 121: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 122: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 123: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 124: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 125: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 127: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 128: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 129: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 130: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 131: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 132: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 133: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 134: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 135: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 136: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 137: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 138: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 139: [     7,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 140: [   128,     7,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 141: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 143: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 144: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 145: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 146: [     7,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 147: [     7,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 148: [     7,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 149: [     7,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 150: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 151: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 152: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 153: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 154: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 155: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 156: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 157: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 158: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 159: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 160: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 161: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 162: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 163: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 164: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 165: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 166: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 168: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 169: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 170: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 171: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 172: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 173: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 174: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 175: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 176: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 177: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 178: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 179: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 180: [     7,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 181: [   128,     7,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 182: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 184: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 185: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 186: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 187: [     7,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 188: [     7,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 189: [     7,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 190: [     7,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 191: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 192: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 193: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 194: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 195: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 196: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 197: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 198: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 199: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 200: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 201: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 202: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 203: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 204: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 205: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 206: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 207: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 209: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 210: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 211: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 212: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 213: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 214: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 215: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 216: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 217: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 218: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 219: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 220: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 221: [     7,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 222: [   128,     7,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 223: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 225: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 226: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 227: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 228: [     7,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 229: [     7,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 230: [     7,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 231: [     7,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 232: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 233: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 234: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 235: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 236: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 237: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 238: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 239: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 240: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 241: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 242: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 243: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 244: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 245: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 246: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 247: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 248: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 250: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 251: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 252: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 253: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 254: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 255: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 256: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 257: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 258: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 259: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 260: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 261: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 262: [     7,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 263: [   128,     7,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 264: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 266: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 267: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 268: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 269: [     7,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 270: [     7,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 271: [     7,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 272: [     7,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 273: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 274: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 275: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 276: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 277: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 278: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 279: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 280: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 281: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 282: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 283: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 284: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 285: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 286: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 287: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 288: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 289: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 291: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 292: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 293: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 294: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 295: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 296: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 297: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 298: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 299: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 300: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 301: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 302: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 303: [     7,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 304: [   128,     7,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 305: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 307: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 308: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 309: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 310: [     7,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 311: [     7,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 312: [     7,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 313: [     7,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 314: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 315: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 316: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 317: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 318: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 319: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 320: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 321: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 322: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 323: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 324: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 325: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 326: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 327: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 328: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 329: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 330: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 331: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 332: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 333: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 334: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 335: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 336: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 337: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 338: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 339: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 340: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 341: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 342: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 343: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 344: [     7,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 345: [   128,     7,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 346: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 347: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 348: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 349: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 350: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 351: [     7,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 352: [     7,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 353: [     7,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 354: [     7,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 355: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 356: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 357: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 358: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 359: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 360: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 361: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 362: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 363: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 364: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 365: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 366: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 367: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 368: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 369: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 370: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 371: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 372: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 373: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 374: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 375: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 376: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 377: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 378: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 379: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 380: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 381: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 382: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 383: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 384: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 385: [     7,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 386: [   128,     7,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 387: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 388: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 389: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 390: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 391: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 392: [     7,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 393: [     7,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 394: [     7,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 395: [     7,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 396: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 397: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 398: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 399: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 400: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 401: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 402: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 403: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 404: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 405: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 406: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 407: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 408: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 409: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 410: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 411: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 412: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 413: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 414: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 415: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 416: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 417: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 418: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 419: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 420: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 421: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 422: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 423: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 424: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 425: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 426: [     7,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 427: [   128,     7,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 428: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 429: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 430: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 431: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 432: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 433: [     7,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 434: [     7,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 435: [     7,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 436: [     7,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 437: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 438: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 439: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 440: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 441: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 442: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 443: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 444: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 445: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 446: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 447: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 448: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 449: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 450: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 451: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 452: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 453: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 454: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 455: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 456: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 457: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 458: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 459: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 460: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 461: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 462: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 463: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 464: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 465: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 466: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 467: [     7,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 468: [   128,     7,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 469: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 470: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 471: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 472: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 473: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 474: [     7,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 475: [     7,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 476: [     7,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 477: [     7,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 478: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 479: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 480: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 481: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 482: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 483: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 484: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 485: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 486: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 487: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 488: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 489: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 490: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 491: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 492: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 493: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 494: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 495: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 496: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 497: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 498: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 499: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 500: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 501: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 502: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 503: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 504: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 505: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 506: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 507: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 508: [     7,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 509: [   128,     7,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 510: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 511: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 512: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 513: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 514: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 515: [     7,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 516: [     7,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 517: [     7,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 518: [     7,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 519: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 520: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 521: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 522: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 523: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 524: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 525: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 526: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 527: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 528: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 529: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 530: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 531: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 532: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 533: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 534: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 535: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 536: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 537: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 538: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 539: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 540: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 541: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 542: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 543: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 544: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 545: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 546: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 547: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 548: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 549: [     7,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 550: [   128,     7,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 551: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 552: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 553: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 554: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 555: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 556: [     7,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 557: [     7,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 558: [     7,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 559: [     7,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 560: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 561: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 562: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 563: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 564: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 565: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 566: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 567: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 568: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 569: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 570: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 571: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 572: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 573: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 574: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 575: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 576: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 577: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 578: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 579: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 580: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 581: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 582: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 583: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 584: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 585: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 586: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 587: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 588: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 589: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 590: [     7,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 591: [   128,     7,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 592: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 593: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 594: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 595: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 596: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 597: [     7,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 598: [     7,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 599: [     7,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 600: [     7,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 601: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 602: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 603: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 604: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 605: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 606: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 607: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 608: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 609: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 610: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 611: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 612: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 613: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 614: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 615: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 616: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 617: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 618: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 619: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 620: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 621: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 622: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 623: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 624: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 625: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 626: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 627: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 628: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 629: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 630: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 631: [     7,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 632: [   128,     7,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 633: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 634: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 635: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 636: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 637: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 638: [     7,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 639: [     7,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 640: [     7,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 641: [     7,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 642: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 643: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 644: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 645: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 646: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 647: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 648: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 649: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 650: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 651: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 652: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 653: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 654: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 655: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 656: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 657: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 658: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 659: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 660: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 661: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 662: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 663: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 664: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 665: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 666: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 667: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 668: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 669: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 670: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 671: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 672: [     7,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 673: [   128,     7,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 674: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 675: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 676: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 677: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 678: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 679: [     7,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 680: [     7,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 681: [     7,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 682: [     7,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 683: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 684: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 685: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 686: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 687: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 688: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 689: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 690: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 691: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 692: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 693: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 694: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 695: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 696: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 697: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 698: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 699: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 700: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 701: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 702: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 703: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 704: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 705: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 706: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 707: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 708: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 709: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 710: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 711: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 712: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 713: [     7,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 714: [   128,     7,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 715: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 716: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 717: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 718: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 719: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 720: [     7,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 721: [     7,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 722: [     7,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 723: [     7,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 724: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 725: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 726: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 727: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 728: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 729: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 730: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 731: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 732: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 733: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 734: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 735: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 736: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 737: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 738: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 739: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 740: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 741: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 742: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 743: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 744: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 745: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 746: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 747: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 748: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 749: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 750: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 751: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 752: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 753: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 754: [     7,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 755: [   128,     7,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 756: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 757: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 758: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 759: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 760: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 761: [     7,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 762: [     7,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 763: [     7,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 764: [     7,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 765: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 766: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 767: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 768: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 769: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 770: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 771: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 772: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 773: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 774: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 775: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 776: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 777: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 778: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 779: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 780: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 781: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 782: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 783: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 784: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 785: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 786: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 787: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 788: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 789: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 790: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 791: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 792: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 793: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 794: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 795: [     7,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 796: [   128,     7,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 797: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 798: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 799: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 800: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 801: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 802: [     7,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 803: [     7,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 804: [     7,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 805: [     7,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 806: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 807: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 808: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 809: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 810: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 811: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 812: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 813: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 814: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 815: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 816: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 817: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 818: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 819: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 820: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 821: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 822: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 823: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 824: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 825: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 826: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 827: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 828: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 829: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 830: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 831: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 832: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 833: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 834: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 835: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 836: [     7,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 837: [   128,     7,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 838: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 839: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 840: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 841: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 842: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 843: [     7,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 844: [     7,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 845: [     7,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 846: [     7,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 847: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 848: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 849: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 850: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 851: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 852: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 853: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 854: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 855: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 856: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 857: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 858: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 859: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 860: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 861: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 862: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 863: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 864: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 865: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 866: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 867: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 868: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 869: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 870: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 871: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 872: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 873: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 874: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 875: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 876: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 877: [     7,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 878: [   128,     7,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 879: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 880: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 881: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 882: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 883: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 884: [     7,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 885: [     7,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 886: [     7,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 887: [     7,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 888: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 889: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 890: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 891: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 892: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 893: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 894: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 895: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 896: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 897: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 898: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 899: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 900: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 901: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 902: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 903: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 904: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 905: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 906: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 907: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 908: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 909: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 910: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 911: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 912: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 913: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 914: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 915: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 916: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 917: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 918: [     7,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 919: [   128,     7,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 920: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 921: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 922: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 923: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 924: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 925: [     7,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 926: [     7,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 927: [     7,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 928: [     7,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 929: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 930: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 931: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 932: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 933: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 934: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 935: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 936: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 937: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 938: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 939: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 940: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 941: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 942: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 943: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 944: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 945: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 946: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 947: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 948: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 949: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 950: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 951: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 952: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 953: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 954: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 955: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 956: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 957: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 958: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 959: [     7,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 960: [   128,     7,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 961: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 962: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 963: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 964: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 965: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 966: [     7,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 967: [     7,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 968: [     7,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 969: [     7,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 970: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 971: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 972: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 973: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 974: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 975: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 976: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 977: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 978: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 979: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 980: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 981: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 982: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 983: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 984: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 985: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 986: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 987: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 988: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 989: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 990: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 991: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 992: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 993: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 994: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 995: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 996: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 997: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 998: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 999: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1000: [     7,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1001: [   128,     7,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1002: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1003: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1004: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1005: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1006: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1007: [     7,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1008: [     7,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1009: [     7,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1010: [     7,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1011: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1012: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1013: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1014: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1015: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1016: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1017: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1018: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1019: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1020: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1021: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1022: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1023: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1024: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1025: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1026: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1027: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1028: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1029: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1030: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1031: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1032: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1033: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1034: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1035: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1036: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1037: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1038: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1039: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1040: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1041: [     7,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1042: [   128,     7,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1043: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1044: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1045: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1046: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1047: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1048: [     7,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1049: [     7,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1050: [     7,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1051: [     7,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1052: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1053: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1054: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1055: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1056: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1057: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1058: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1059: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1060: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1061: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1062: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1063: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1064: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1065: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1066: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1067: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1068: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1069: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1070: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1071: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1072: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1073: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1074: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1075: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1076: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1077: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1078: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1079: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1080: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1081: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1082: [     7,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1083: [   128,     7,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1084: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1085: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1086: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1087: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1088: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1089: [     7,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1090: [     7,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1091: [     7,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1092: [     7,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1093: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1094: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1095: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1096: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1097: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1098: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1099: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1100: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1102: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1103: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1104: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1105: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1106: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1107: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1108: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1109: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1110: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1111: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1112: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1113: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1114: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1115: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1116: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1117: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1118: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1119: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1120: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1121: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1122: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1123: [     7,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1124: [   128,     7,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1125: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1127: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1128: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1129: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1130: [     7,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1131: [     7,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1132: [     7,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1133: [     7,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1134: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1135: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1136: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1137: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1138: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1139: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1140: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1141: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1143: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1144: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1145: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1146: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1147: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1148: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1149: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1150: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1151: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1152: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1153: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1154: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1155: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1156: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1157: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1158: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1159: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1160: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1161: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1162: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1163: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1164: [     7,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1165: [   128,     7,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1166: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1168: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1169: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1170: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1171: [     7,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1172: [     7,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1173: [     7,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1174: [     7,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1175: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1176: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1177: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1178: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1179: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1180: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1181: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1182: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1184: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1185: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1186: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1187: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1188: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1189: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1190: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1191: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1192: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1193: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1194: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1195: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1196: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1197: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1198: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1199: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1200: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1201: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1202: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1203: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1204: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1205: [     7,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1206: [   128,     7,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1207: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1209: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1210: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1211: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1212: [     7,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1213: [     7,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1214: [     7,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1215: [     7,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1216: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1217: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1218: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1219: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1220: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1221: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1222: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1223: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1225: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1226: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1227: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1228: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1229: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1230: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1231: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1232: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1233: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1234: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1235: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1236: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1237: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1238: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1239: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1240: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1241: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1242: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1243: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1244: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1245: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1246: [     7,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1247: [   128,     7,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1248: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1250: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1251: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1252: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1253: [     7,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1254: [     7,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1255: [     7,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1256: [     7,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1257: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1258: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1259: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1260: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1261: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1262: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1263: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1264: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1266: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1267: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1268: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1269: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1270: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1271: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1272: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1273: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1274: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1275: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1276: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1277: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1278: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1279: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1280: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1281: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1282: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1283: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1284: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1285: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1286: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1287: [     7,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1288: [   128,     7,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1289: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1291: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1292: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1293: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1294: [     7,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1295: [     7,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1296: [     7,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1297: [     7,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1298: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1299: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1300: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1301: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1302: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1303: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1304: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1305: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1307: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1308: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1309: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1310: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1311: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1312: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1313: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1314: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1315: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1316: [ 102400,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
n_leafs = 552
 -   0: [  2560,  2560]     NONE
 -   1: [  2560,     1]     NONE
 -   2: [  2560, 102400]     NONE
 -   3: [     1,     1]     NONE
 -   4: [  2560,     1]     NONE
 -   5: [  2560,     1]     NONE
 -   6: [ 41943040,     1]     NONE
 -   7: [  2560,  2560]     NONE
 -   8: [  2560,     1]     NONE
 -   9: [ 41943040,     1]     NONE
 -  10: [  2560,  2560]     NONE
 -  11: [  2560,     1]     NONE
 -  12: [ 10240,  2560]     NONE
 -  13: [  2560, 10240]     NONE
 -  14: [  2560,     1]     NONE
 -  15: [  2560,  2560]     NONE
 -  16: [  2560,  2560]     NONE
 -  17: [  2560,     1]     NONE
 -  18: [     1,     1]     NONE
 -  19: [  2560,     1]     NONE
 -  20: [  2560,     1]     NONE
 -  21: [  2560,     1]     NONE
 -  22: [ 10240,     1]     NONE
 -  23: [  2560,     1]     NONE
 -  24: [  2560,     1]     NONE
 -  25: [  2560,     1]     NONE
 -  26: [  2560,  2560]     NONE
 -  27: [  2560,     1]     NONE
 -  28: [  2560,  2560]     NONE
 -  29: [  2560,     1]     NONE
 -  30: [ 10240,  2560]     NONE
 -  31: [  2560, 10240]     NONE
 -  32: [  2560,     1]     NONE
 -  33: [  2560,  2560]     NONE
 -  34: [  2560,  2560]     NONE
 -  35: [  2560,     1]     NONE
 -  36: [  2560,     1]     NONE
 -  37: [  2560,     1]     NONE
 -  38: [  2560,     1]     NONE
 -  39: [ 10240,     1]     NONE
 -  40: [  2560,     1]     NONE
 -  41: [  2560,     1]     NONE
 -  42: [  2560,     1]     NONE
 -  43: [  2560,  2560]     NONE
 -  44: [  2560,     1]     NONE
 -  45: [  2560,  2560]     NONE
 -  46: [  2560,     1]     NONE
 -  47: [ 10240,  2560]     NONE
 -  48: [  2560, 10240]     NONE
 -  49: [  2560,     1]     NONE
 -  50: [  2560,  2560]     NONE
 -  51: [  2560,  2560]     NONE
 -  52: [  2560,     1]     NONE
 -  53: [  2560,     1]     NONE
 -  54: [  2560,     1]     NONE
 -  55: [  2560,     1]     NONE
 -  56: [ 10240,     1]     NONE
 -  57: [  2560,     1]     NONE
 -  58: [  2560,     1]     NONE
 -  59: [  2560,     1]     NONE
 -  60: [  2560,  2560]     NONE
 -  61: [  2560,     1]     NONE
 -  62: [  2560,  2560]     NONE
 -  63: [  2560,     1]     NONE
 -  64: [ 10240,  2560]     NONE
 -  65: [  2560, 10240]     NONE
 -  66: [  2560,     1]     NONE
 -  67: [  2560,  2560]     NONE
 -  68: [  2560,  2560]     NONE
 -  69: [  2560,     1]     NONE
 -  70: [  2560,     1]     NONE
 -  71: [  2560,     1]     NONE
 -  72: [  2560,     1]     NONE
 -  73: [ 10240,     1]     NONE
 -  74: [  2560,     1]     NONE
 -  75: [  2560,     1]     NONE
 -  76: [  2560,     1]     NONE
 -  77: [  2560,  2560]     NONE
 -  78: [  2560,     1]     NONE
 -  79: [  2560,  2560]     NONE
 -  80: [  2560,     1]     NONE
 -  81: [ 10240,  2560]     NONE
 -  82: [  2560, 10240]     NONE
 -  83: [  2560,     1]     NONE
 -  84: [  2560,  2560]     NONE
 -  85: [  2560,  2560]     NONE
 -  86: [  2560,     1]     NONE
 -  87: [  2560,     1]     NONE
 -  88: [  2560,     1]     NONE
 -  89: [  2560,     1]     NONE
 -  90: [ 10240,     1]     NONE
 -  91: [  2560,     1]     NONE
 -  92: [  2560,     1]     NONE
 -  93: [  2560,     1]     NONE
 -  94: [  2560,  2560]     NONE
 -  95: [  2560,     1]     NONE
 -  96: [  2560,  2560]     NONE
 -  97: [  2560,     1]     NONE
 -  98: [ 10240,  2560]     NONE
 -  99: [  2560, 10240]     NONE
 - 100: [  2560,     1]     NONE
 - 101: [  2560,  2560]     NONE
 - 102: [  2560,  2560]     NONE
 - 103: [  2560,     1]     NONE
 - 104: [  2560,     1]     NONE
 - 105: [  2560,     1]     NONE
 - 106: [  2560,     1]     NONE
 - 107: [ 10240,     1]     NONE
 - 108: [  2560,     1]     NONE
 - 109: [  2560,     1]     NONE
 - 110: [  2560,     1]     NONE
 - 111: [  2560,  2560]     NONE
 - 112: [  2560,     1]     NONE
 - 113: [  2560,  2560]     NONE
 - 114: [  2560,     1]     NONE
 - 115: [ 10240,  2560]     NONE
 - 116: [  2560, 10240]     NONE
 - 117: [  2560,     1]     NONE
 - 118: [  2560,  2560]     NONE
 - 119: [  2560,  2560]     NONE
 - 120: [  2560,     1]     NONE
 - 121: [  2560,     1]     NONE
 - 122: [  2560,     1]     NONE
 - 123: [  2560,     1]     NONE
 - 124: [ 10240,     1]     NONE
 - 125: [  2560,     1]     NONE
 - 126: [  2560,     1]     NONE
 - 127: [  2560,     1]     NONE
 - 128: [  2560,  2560]     NONE
 - 129: [  2560,     1]     NONE
 - 130: [  2560,  2560]     NONE
 - 131: [  2560,     1]     NONE
 - 132: [ 10240,  2560]     NONE
 - 133: [  2560, 10240]     NONE
 - 134: [  2560,     1]     NONE
 - 135: [  2560,  2560]     NONE
 - 136: [  2560,  2560]     NONE
 - 137: [  2560,     1]     NONE
 - 138: [  2560,     1]     NONE
 - 139: [  2560,     1]     NONE
 - 140: [  2560,     1]     NONE
 - 141: [ 10240,     1]     NONE
 - 142: [  2560,     1]     NONE
 - 143: [  2560,     1]     NONE
 - 144: [  2560,     1]     NONE
 - 145: [  2560,  2560]     NONE
 - 146: [  2560,     1]     NONE
 - 147: [  2560,  2560]     NONE
 - 148: [  2560,     1]     NONE
 - 149: [ 10240,  2560]     NONE
 - 150: [  2560, 10240]     NONE
 - 151: [  2560,     1]     NONE
 - 152: [  2560,  2560]     NONE
 - 153: [  2560,  2560]     NONE
 - 154: [  2560,     1]     NONE
 - 155: [  2560,     1]     NONE
 - 156: [  2560,     1]     NONE
 - 157: [  2560,     1]     NONE
 - 158: [ 10240,     1]     NONE
 - 159: [  2560,     1]     NONE
 - 160: [  2560,     1]     NONE
 - 161: [  2560,     1]     NONE
 - 162: [  2560,  2560]     NONE
 - 163: [  2560,     1]     NONE
 - 164: [  2560,  2560]     NONE
 - 165: [  2560,     1]     NONE
 - 166: [ 10240,  2560]     NONE
 - 167: [  2560, 10240]     NONE
 - 168: [  2560,     1]     NONE
 - 169: [  2560,  2560]     NONE
 - 170: [  2560,  2560]     NONE
 - 171: [  2560,     1]     NONE
 - 172: [  2560,     1]     NONE
 - 173: [  2560,     1]     NONE
 - 174: [  2560,     1]     NONE
 - 175: [ 10240,     1]     NONE
 - 176: [  2560,     1]     NONE
 - 177: [  2560,     1]     NONE
 - 178: [  2560,     1]     NONE
 - 179: [  2560,  2560]     NONE
 - 180: [  2560,     1]     NONE
 - 181: [  2560,  2560]     NONE
 - 182: [  2560,     1]     NONE
 - 183: [ 10240,  2560]     NONE
 - 184: [  2560, 10240]     NONE
 - 185: [  2560,     1]     NONE
 - 186: [  2560,  2560]     NONE
 - 187: [  2560,  2560]     NONE
 - 188: [  2560,     1]     NONE
 - 189: [  2560,     1]     NONE
 - 190: [  2560,     1]     NONE
 - 191: [  2560,     1]     NONE
 - 192: [ 10240,     1]     NONE
 - 193: [  2560,     1]     NONE
 - 194: [  2560,     1]     NONE
 - 195: [  2560,     1]     NONE
 - 196: [  2560,  2560]     NONE
 - 197: [  2560,     1]     NONE
 - 198: [  2560,  2560]     NONE
 - 199: [  2560,     1]     NONE
 - 200: [ 10240,  2560]     NONE
 - 201: [  2560, 10240]     NONE
 - 202: [  2560,     1]     NONE
 - 203: [  2560,  2560]     NONE
 - 204: [  2560,  2560]     NONE
 - 205: [  2560,     1]     NONE
 - 206: [  2560,     1]     NONE
 - 207: [  2560,     1]     NONE
 - 208: [  2560,     1]     NONE
 - 209: [ 10240,     1]     NONE
 - 210: [  2560,     1]     NONE
 - 211: [  2560,     1]     NONE
 - 212: [  2560,     1]     NONE
 - 213: [  2560,  2560]     NONE
 - 214: [  2560,     1]     NONE
 - 215: [  2560,  2560]     NONE
 - 216: [  2560,     1]     NONE
 - 217: [ 10240,  2560]     NONE
 - 218: [  2560, 10240]     NONE
 - 219: [  2560,     1]     NONE
 - 220: [  2560,  2560]     NONE
 - 221: [  2560,  2560]     NONE
 - 222: [  2560,     1]     NONE
 - 223: [  2560,     1]     NONE
 - 224: [  2560,     1]     NONE
 - 225: [  2560,     1]     NONE
 - 226: [ 10240,     1]     NONE
 - 227: [  2560,     1]     NONE
 - 228: [  2560,     1]     NONE
 - 229: [  2560,     1]     NONE
 - 230: [  2560,  2560]     NONE
 - 231: [  2560,     1]     NONE
 - 232: [  2560,  2560]     NONE
 - 233: [  2560,     1]     NONE
 - 234: [ 10240,  2560]     NONE
 - 235: [  2560, 10240]     NONE
 - 236: [  2560,     1]     NONE
 - 237: [  2560,  2560]     NONE
 - 238: [  2560,  2560]     NONE
 - 239: [  2560,     1]     NONE
 - 240: [  2560,     1]     NONE
 - 241: [  2560,     1]     NONE
 - 242: [  2560,     1]     NONE
 - 243: [ 10240,     1]     NONE
 - 244: [  2560,     1]     NONE
 - 245: [  2560,     1]     NONE
 - 246: [  2560,     1]     NONE
 - 247: [  2560,  2560]     NONE
 - 248: [  2560,     1]     NONE
 - 249: [  2560,  2560]     NONE
 - 250: [  2560,     1]     NONE
 - 251: [ 10240,  2560]     NONE
 - 252: [  2560, 10240]     NONE
 - 253: [  2560,     1]     NONE
 - 254: [  2560,  2560]     NONE
 - 255: [  2560,  2560]     NONE
 - 256: [  2560,     1]     NONE
 - 257: [  2560,     1]     NONE
 - 258: [  2560,     1]     NONE
 - 259: [  2560,     1]     NONE
 - 260: [ 10240,     1]     NONE
 - 261: [  2560,     1]     NONE
 - 262: [  2560,     1]     NONE
 - 263: [  2560,     1]     NONE
 - 264: [  2560,  2560]     NONE
 - 265: [  2560,     1]     NONE
 - 266: [  2560,  2560]     NONE
 - 267: [  2560,     1]     NONE
 - 268: [ 10240,  2560]     NONE
 - 269: [  2560, 10240]     NONE
 - 270: [  2560,     1]     NONE
 - 271: [  2560,  2560]     NONE
 - 272: [  2560,  2560]     NONE
 - 273: [  2560,     1]     NONE
 - 274: [  2560,     1]     NONE
 - 275: [  2560,     1]     NONE
 - 276: [  2560,     1]     NONE
 - 277: [ 10240,     1]     NONE
 - 278: [  2560,     1]     NONE
 - 279: [  2560,     1]     NONE
 - 280: [  2560,     1]     NONE
 - 281: [  2560,  2560]     NONE
 - 282: [  2560,     1]     NONE
 - 283: [  2560,  2560]     NONE
 - 284: [  2560,     1]     NONE
 - 285: [ 10240,  2560]     NONE
 - 286: [  2560, 10240]     NONE
 - 287: [  2560,     1]     NONE
 - 288: [  2560,  2560]     NONE
 - 289: [  2560,  2560]     NONE
 - 290: [  2560,     1]     NONE
 - 291: [  2560,     1]     NONE
 - 292: [  2560,     1]     NONE
 - 293: [  2560,     1]     NONE
 - 294: [ 10240,     1]     NONE
 - 295: [  2560,     1]     NONE
 - 296: [  2560,     1]     NONE
 - 297: [  2560,     1]     NONE
 - 298: [  2560,  2560]     NONE
 - 299: [  2560,     1]     NONE
 - 300: [  2560,  2560]     NONE
 - 301: [  2560,     1]     NONE
 - 302: [ 10240,  2560]     NONE
 - 303: [  2560, 10240]     NONE
 - 304: [  2560,     1]     NONE
 - 305: [  2560,  2560]     NONE
 - 306: [  2560,  2560]     NONE
 - 307: [  2560,     1]     NONE
 - 308: [  2560,     1]     NONE
 - 309: [  2560,     1]     NONE
 - 310: [  2560,     1]     NONE
 - 311: [ 10240,     1]     NONE
 - 312: [  2560,     1]     NONE
 - 313: [  2560,     1]     NONE
 - 314: [  2560,     1]     NONE
 - 315: [  2560,  2560]     NONE
 - 316: [  2560,     1]     NONE
 - 317: [  2560,  2560]     NONE
 - 318: [  2560,     1]     NONE
 - 319: [ 10240,  2560]     NONE
 - 320: [  2560, 10240]     NONE
 - 321: [  2560,     1]     NONE
 - 322: [  2560,  2560]     NONE
 - 323: [  2560,  2560]     NONE
 - 324: [  2560,     1]     NONE
 - 325: [  2560,     1]     NONE
 - 326: [  2560,     1]     NONE
 - 327: [  2560,     1]     NONE
 - 328: [ 10240,     1]     NONE
 - 329: [  2560,     1]     NONE
 - 330: [  2560,     1]     NONE
 - 331: [  2560,     1]     NONE
 - 332: [  2560,  2560]     NONE
 - 333: [  2560,     1]     NONE
 - 334: [  2560,  2560]     NONE
 - 335: [  2560,     1]     NONE
 - 336: [ 10240,  2560]     NONE
 - 337: [  2560, 10240]     NONE
 - 338: [  2560,     1]     NONE
 - 339: [  2560,  2560]     NONE
 - 340: [  2560,  2560]     NONE
 - 341: [  2560,     1]     NONE
 - 342: [  2560,     1]     NONE
 - 343: [  2560,     1]     NONE
 - 344: [  2560,     1]     NONE
 - 345: [ 10240,     1]     NONE
 - 346: [  2560,     1]     NONE
 - 347: [  2560,     1]     NONE
 - 348: [  2560,     1]     NONE
 - 349: [  2560,  2560]     NONE
 - 350: [  2560,     1]     NONE
 - 351: [  2560,  2560]     NONE
 - 352: [  2560,     1]     NONE
 - 353: [ 10240,  2560]     NONE
 - 354: [  2560, 10240]     NONE
 - 355: [  2560,     1]     NONE
 - 356: [  2560,  2560]     NONE
 - 357: [  2560,  2560]     NONE
 - 358: [  2560,     1]     NONE
 - 359: [  2560,     1]     NONE
 - 360: [  2560,     1]     NONE
 - 361: [  2560,     1]     NONE
 - 362: [ 10240,     1]     NONE
 - 363: [  2560,     1]     NONE
 - 364: [  2560,     1]     NONE
 - 365: [  2560,     1]     NONE
 - 366: [  2560,  2560]     NONE
 - 367: [  2560,     1]     NONE
 - 368: [  2560,  2560]     NONE
 - 369: [  2560,     1]     NONE
 - 370: [ 10240,  2560]     NONE
 - 371: [  2560, 10240]     NONE
 - 372: [  2560,     1]     NONE
 - 373: [  2560,  2560]     NONE
 - 374: [  2560,  2560]     NONE
 - 375: [  2560,     1]     NONE
 - 376: [  2560,     1]     NONE
 - 377: [  2560,     1]     NONE
 - 378: [  2560,     1]     NONE
 - 379: [ 10240,     1]     NONE
 - 380: [  2560,     1]     NONE
 - 381: [  2560,     1]     NONE
 - 382: [  2560,     1]     NONE
 - 383: [  2560,  2560]     NONE
 - 384: [  2560,     1]     NONE
 - 385: [  2560,  2560]     NONE
 - 386: [  2560,     1]     NONE
 - 387: [ 10240,  2560]     NONE
 - 388: [  2560, 10240]     NONE
 - 389: [  2560,     1]     NONE
 - 390: [  2560,  2560]     NONE
 - 391: [  2560,  2560]     NONE
 - 392: [  2560,     1]     NONE
 - 393: [  2560,     1]     NONE
 - 394: [  2560,     1]     NONE
 - 395: [  2560,     1]     NONE
 - 396: [ 10240,     1]     NONE
 - 397: [  2560,     1]     NONE
 - 398: [  2560,     1]     NONE
 - 399: [  2560,     1]     NONE
 - 400: [  2560,  2560]     NONE
 - 401: [  2560,     1]     NONE
 - 402: [  2560,  2560]     NONE
 - 403: [  2560,     1]     NONE
 - 404: [ 10240,  2560]     NONE
 - 405: [  2560, 10240]     NONE
 - 406: [  2560,     1]     NONE
 - 407: [  2560,  2560]     NONE
 - 408: [  2560,  2560]     NONE
 - 409: [  2560,     1]     NONE
 - 410: [  2560,     1]     NONE
 - 411: [  2560,     1]     NONE
 - 412: [  2560,     1]     NONE
 - 413: [ 10240,     1]     NONE
 - 414: [  2560,     1]     NONE
 - 415: [  2560,     1]     NONE
 - 416: [  2560,     1]     NONE
 - 417: [  2560,  2560]     NONE
 - 418: [  2560,     1]     NONE
 - 419: [  2560,  2560]     NONE
 - 420: [  2560,     1]     NONE
 - 421: [ 10240,  2560]     NONE
 - 422: [  2560, 10240]     NONE
 - 423: [  2560,     1]     NONE
 - 424: [  2560,  2560]     NONE
 - 425: [  2560,  2560]     NONE
 - 426: [  2560,     1]     NONE
 - 427: [  2560,     1]     NONE
 - 428: [  2560,     1]     NONE
 - 429: [  2560,     1]     NONE
 - 430: [ 10240,     1]     NONE
 - 431: [  2560,     1]     NONE
 - 432: [  2560,     1]     NONE
 - 433: [  2560,     1]     NONE
 - 434: [  2560,  2560]     NONE
 - 435: [  2560,     1]     NONE
 - 436: [  2560,  2560]     NONE
 - 437: [  2560,     1]     NONE
 - 438: [ 10240,  2560]     NONE
 - 439: [  2560, 10240]     NONE
 - 440: [  2560,     1]     NONE
 - 441: [  2560,  2560]     NONE
 - 442: [  2560,  2560]     NONE
 - 443: [  2560,     1]     NONE
 - 444: [  2560,     1]     NONE
 - 445: [  2560,     1]     NONE
 - 446: [  2560,     1]     NONE
 - 447: [ 10240,     1]     NONE
 - 448: [  2560,     1]     NONE
 - 449: [  2560,     1]     NONE
 - 450: [  2560,     1]     NONE
 - 451: [  2560,  2560]     NONE
 - 452: [  2560,     1]     NONE
 - 453: [  2560,  2560]     NONE
 - 454: [  2560,     1]     NONE
 - 455: [ 10240,  2560]     NONE
 - 456: [  2560, 10240]     NONE
 - 457: [  2560,     1]     NONE
 - 458: [  2560,  2560]     NONE
 - 459: [  2560,  2560]     NONE
 - 460: [  2560,     1]     NONE
 - 461: [  2560,     1]     NONE
 - 462: [  2560,     1]     NONE
 - 463: [  2560,     1]     NONE
 - 464: [ 10240,     1]     NONE
 - 465: [  2560,     1]     NONE
 - 466: [  2560,     1]     NONE
 - 467: [  2560,     1]     NONE
 - 468: [  2560,  2560]     NONE
 - 469: [  2560,     1]     NONE
 - 470: [  2560,  2560]     NONE
 - 471: [  2560,     1]     NONE
 - 472: [ 10240,  2560]     NONE
 - 473: [  2560, 10240]     NONE
 - 474: [  2560,     1]     NONE
 - 475: [  2560,  2560]     NONE
 - 476: [  2560,  2560]     NONE
 - 477: [  2560,     1]     NONE
 - 478: [  2560,     1]     NONE
 - 479: [  2560,     1]     NONE
 - 480: [  2560,     1]     NONE
 - 481: [ 10240,     1]     NONE
 - 482: [  2560,     1]     NONE
 - 483: [  2560,     1]     NONE
 - 484: [  2560,     1]     NONE
 - 485: [  2560,  2560]     NONE
 - 486: [  2560,     1]     NONE
 - 487: [  2560,  2560]     NONE
 - 488: [  2560,     1]     NONE
 - 489: [ 10240,  2560]     NONE
 - 490: [  2560, 10240]     NONE
 - 491: [  2560,     1]     NONE
 - 492: [  2560,  2560]     NONE
 - 493: [  2560,  2560]     NONE
 - 494: [  2560,     1]     NONE
 - 495: [  2560,     1]     NONE
 - 496: [  2560,     1]     NONE
 - 497: [  2560,     1]     NONE
 - 498: [ 10240,     1]     NONE
 - 499: [  2560,     1]     NONE
 - 500: [  2560,     1]     NONE
 - 501: [  2560,     1]     NONE
 - 502: [  2560,  2560]     NONE
 - 503: [  2560,     1]     NONE
 - 504: [  2560,  2560]     NONE
 - 505: [  2560,     1]     NONE
 - 506: [ 10240,  2560]     NONE
 - 507: [  2560, 10240]     NONE
 - 508: [  2560,     1]     NONE
 - 509: [  2560,  2560]     NONE
 - 510: [  2560,  2560]     NONE
 - 511: [  2560,     1]     NONE
 - 512: [  2560,     1]     NONE
 - 513: [  2560,     1]     NONE
 - 514: [  2560,     1]     NONE
 - 515: [ 10240,     1]     NONE
 - 516: [  2560,     1]     NONE
 - 517: [  2560,     1]     NONE
 - 518: [  2560,     1]     NONE
 - 519: [  2560,  2560]     NONE
 - 520: [  2560,     1]     NONE
 - 521: [  2560,  2560]     NONE
 - 522: [  2560,     1]     NONE
 - 523: [ 10240,  2560]     NONE
 - 524: [  2560, 10240]     NONE
 - 525: [  2560,     1]     NONE
 - 526: [  2560,  2560]     NONE
 - 527: [  2560,  2560]     NONE
 - 528: [  2560,     1]     NONE
 - 529: [  2560,     1]     NONE
 - 530: [  2560,     1]     NONE
 - 531: [  2560,     1]     NONE
 - 532: [ 10240,     1]     NONE
 - 533: [  2560,     1]     NONE
 - 534: [  2560,     1]     NONE
 - 535: [  2560,     1]     NONE
 - 536: [  2560,  2560]     NONE
 - 537: [  2560,     1]     NONE
 - 538: [  2560, 102400]     NONE
 - 539: [  2560,     1]     NONE
 - 540: [ 10240,  2560]     NONE
 - 541: [  2560, 10240]     NONE
 - 542: [  2560,     1]     NONE
 - 543: [  2560,  2560]     NONE
 - 544: [  2560,  2560]     NONE
 - 545: [  2560,     1]     NONE
 - 546: [  2560,     1]     NONE
 - 547: [  2560,     1]     NONE
 - 548: [  2560,     1]     NONE
 - 549: [ 10240,     1]     NONE
 - 550: [  2560,     1]     NONE
 - 551: [  2560,     1]     NONE
perf_total_per_op_us[             ADD] =   0.321 ms
perf_total_per_op_us[             MUL] =   0.065 ms
perf_total_per_op_us[            NORM] =   0.065 ms
perf_total_per_op_us[         MUL_MAT] =   0.257 ms
perf_total_per_op_us[           SCALE] =   0.032 ms
perf_total_per_op_us[             CPY] =   0.096 ms
perf_total_per_op_us[         RESHAPE] =   0.096 ms
perf_total_per_op_us[            VIEW] =   0.128 ms
perf_total_per_op_us[         PERMUTE] =   0.064 ms
perf_total_per_op_us[       TRANSPOSE] =   0.032 ms
perf_total_per_op_us[        GET_ROWS] =   0.001 ms
perf_total_per_op_us[   DIAG_MASK_INF] =   0.032 ms
perf_total_per_op_us[        SOFT_MAX] =   0.032 ms
perf_total_per_op_us[            ROPE] =   0.064 ms
perf_total_per_op_us[           UNARY] =   0.032 ms
========================================
user=== GRAPH ===
n_nodes = 1317
 -   0: [  2560,     1,     1]         GET_ROWS   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   1: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   2: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   3: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   4: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   5: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   6: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   7: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   8: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   9: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  10: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  11: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  12: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  13: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  14: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  15: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  16: [     8,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  17: [   128,     8,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  18: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  19: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  20: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  21: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  22: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  23: [     8,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  24: [     8,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  25: [     8,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  26: [     8,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  27: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  28: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  29: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  30: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  31: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  32: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  33: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  34: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  35: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  36: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  37: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  38: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  39: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  40: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  41: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  42: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  43: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  44: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  45: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  46: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  47: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  48: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  49: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  50: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  51: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  52: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  53: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  54: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  55: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  56: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  57: [     8,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  58: [   128,     8,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  59: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  60: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  61: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  62: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  63: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  64: [     8,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  65: [     8,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  66: [     8,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  67: [     8,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  68: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  69: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  70: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  71: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  72: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  73: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  74: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  75: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  76: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  77: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  78: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  79: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  80: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  81: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  82: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  83: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  84: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  85: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  86: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  87: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  88: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  89: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  90: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  91: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  92: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  93: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  94: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  95: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  96: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  97: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  98: [     8,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  99: [   128,     8,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 100: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 102: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 103: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 104: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 105: [     8,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 106: [     8,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 107: [     8,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 108: [     8,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 109: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 110: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 111: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 112: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 113: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 114: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 115: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 116: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 117: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 118: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 119: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 120: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 121: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 122: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 123: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 124: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 125: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 127: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 128: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 129: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 130: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 131: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 132: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 133: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 134: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 135: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 136: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 137: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 138: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 139: [     8,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 140: [   128,     8,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 141: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 143: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 144: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 145: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 146: [     8,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 147: [     8,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 148: [     8,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 149: [     8,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 150: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 151: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 152: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 153: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 154: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 155: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 156: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 157: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 158: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 159: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 160: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 161: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 162: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 163: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 164: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 165: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 166: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 168: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 169: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 170: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 171: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 172: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 173: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 174: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 175: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 176: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 177: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 178: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 179: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 180: [     8,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 181: [   128,     8,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 182: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 184: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 185: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 186: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 187: [     8,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 188: [     8,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 189: [     8,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 190: [     8,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 191: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 192: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 193: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 194: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 195: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 196: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 197: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 198: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 199: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 200: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 201: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 202: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 203: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 204: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 205: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 206: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 207: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 209: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 210: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 211: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 212: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 213: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 214: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 215: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 216: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 217: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 218: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 219: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 220: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 221: [     8,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 222: [   128,     8,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 223: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 225: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 226: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 227: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 228: [     8,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 229: [     8,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 230: [     8,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 231: [     8,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 232: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 233: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 234: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 235: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 236: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 237: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 238: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 239: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 240: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 241: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 242: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 243: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 244: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 245: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 246: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 247: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 248: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 250: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 251: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 252: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 253: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 254: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 255: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 256: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 257: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 258: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 259: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 260: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 261: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 262: [     8,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 263: [   128,     8,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 264: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 266: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 267: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 268: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 269: [     8,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 270: [     8,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 271: [     8,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 272: [     8,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 273: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 274: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 275: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 276: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 277: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 278: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 279: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 280: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 281: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 282: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 283: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 284: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 285: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 286: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 287: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 288: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 289: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 291: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 292: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 293: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 294: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 295: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 296: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 297: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 298: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 299: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 300: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 301: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 302: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 303: [     8,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 304: [   128,     8,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 305: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 307: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 308: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 309: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 310: [     8,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 311: [     8,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 312: [     8,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 313: [     8,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 314: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 315: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 316: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 317: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 318: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 319: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 320: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 321: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 322: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 323: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 324: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 325: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 326: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 327: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 328: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 329: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 330: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 331: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 332: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 333: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 334: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 335: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 336: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 337: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 338: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 339: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 340: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 341: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 342: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 343: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 344: [     8,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 345: [   128,     8,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 346: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 347: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 348: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 349: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 350: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 351: [     8,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 352: [     8,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 353: [     8,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 354: [     8,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 355: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 356: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 357: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 358: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 359: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 360: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 361: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 362: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 363: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 364: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 365: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 366: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 367: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 368: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 369: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 370: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 371: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 372: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 373: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 374: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 375: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 376: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 377: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 378: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 379: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 380: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 381: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 382: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 383: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 384: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 385: [     8,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 386: [   128,     8,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 387: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 388: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 389: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 390: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 391: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 392: [     8,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 393: [     8,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 394: [     8,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 395: [     8,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 396: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 397: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 398: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 399: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 400: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 401: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 402: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 403: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 404: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 405: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 406: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 407: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 408: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 409: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 410: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 411: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 412: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 413: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 414: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 415: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 416: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 417: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 418: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 419: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 420: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 421: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 422: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 423: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 424: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 425: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 426: [     8,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 427: [   128,     8,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 428: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 429: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 430: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 431: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 432: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 433: [     8,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 434: [     8,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 435: [     8,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 436: [     8,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 437: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 438: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 439: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 440: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 441: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 442: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 443: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 444: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 445: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 446: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 447: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 448: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 449: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 450: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 451: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 452: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 453: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 454: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 455: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 456: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 457: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 458: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 459: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 460: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 461: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 462: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 463: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 464: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 465: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 466: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 467: [     8,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 468: [   128,     8,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 469: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 470: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 471: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 472: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 473: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 474: [     8,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 475: [     8,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 476: [     8,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 477: [     8,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 478: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 479: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 480: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 481: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 482: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 483: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 484: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 485: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 486: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 487: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 488: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 489: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 490: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 491: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 492: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 493: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 494: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 495: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 496: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 497: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 498: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 499: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 500: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 501: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 502: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 503: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 504: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 505: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 506: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 507: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 508: [     8,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 509: [   128,     8,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 510: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 511: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 512: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 513: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 514: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 515: [     8,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 516: [     8,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 517: [     8,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 518: [     8,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 519: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 520: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 521: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 522: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 523: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 524: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 525: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 526: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 527: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 528: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 529: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 530: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 531: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 532: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 533: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 534: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 535: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 536: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 537: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 538: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 539: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 540: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 541: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 542: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 543: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 544: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 545: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 546: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 547: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 548: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 549: [     8,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 550: [   128,     8,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 551: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 552: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 553: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 554: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 555: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 556: [     8,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 557: [     8,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 558: [     8,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 559: [     8,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 560: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 561: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 562: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 563: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 564: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 565: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 566: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 567: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 568: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 569: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 570: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 571: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 572: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 573: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 574: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 575: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 576: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 577: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 578: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 579: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 580: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 581: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 582: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 583: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 584: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 585: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 586: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 587: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 588: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 589: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 590: [     8,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 591: [   128,     8,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 592: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 593: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 594: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 595: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 596: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 597: [     8,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 598: [     8,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 599: [     8,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 600: [     8,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 601: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 602: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 603: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 604: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 605: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 606: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 607: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 608: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 609: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 610: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 611: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 612: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 613: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 614: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 615: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 616: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 617: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 618: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 619: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 620: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 621: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 622: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 623: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 624: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 625: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 626: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 627: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 628: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 629: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 630: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 631: [     8,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 632: [   128,     8,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 633: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 634: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 635: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 636: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 637: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 638: [     8,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 639: [     8,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 640: [     8,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 641: [     8,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 642: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 643: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 644: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 645: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 646: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 647: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 648: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 649: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 650: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 651: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 652: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 653: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 654: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 655: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 656: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 657: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 658: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 659: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 660: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 661: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 662: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 663: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 664: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 665: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 666: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 667: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 668: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 669: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 670: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 671: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 672: [     8,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 673: [   128,     8,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 674: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 675: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 676: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 677: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 678: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 679: [     8,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 680: [     8,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 681: [     8,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 682: [     8,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 683: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 684: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 685: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 686: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 687: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 688: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 689: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 690: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 691: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 692: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 693: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 694: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 695: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 696: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 697: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 698: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 699: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 700: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 701: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 702: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 703: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 704: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 705: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 706: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 707: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 708: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 709: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 710: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 711: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 712: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 713: [     8,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 714: [   128,     8,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 715: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 716: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 717: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 718: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 719: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 720: [     8,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 721: [     8,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 722: [     8,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 723: [     8,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 724: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 725: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 726: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 727: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 728: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 729: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 730: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 731: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 732: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 733: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 734: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 735: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 736: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 737: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 738: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 739: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 740: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 741: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 742: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 743: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 744: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 745: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 746: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 747: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 748: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 749: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 750: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 751: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 752: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 753: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 754: [     8,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 755: [   128,     8,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 756: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 757: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 758: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 759: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 760: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 761: [     8,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 762: [     8,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 763: [     8,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 764: [     8,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 765: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 766: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 767: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 768: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 769: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 770: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 771: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 772: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 773: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 774: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 775: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 776: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 777: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 778: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 779: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 780: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 781: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 782: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 783: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 784: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 785: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 786: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 787: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 788: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 789: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 790: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 791: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 792: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 793: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 794: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 795: [     8,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 796: [   128,     8,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 797: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 798: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 799: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 800: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 801: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 802: [     8,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 803: [     8,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 804: [     8,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 805: [     8,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 806: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 807: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 808: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 809: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 810: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 811: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 812: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 813: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 814: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 815: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 816: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 817: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 818: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 819: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 820: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 821: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 822: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 823: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 824: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 825: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 826: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 827: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 828: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 829: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 830: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 831: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 832: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 833: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 834: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 835: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 836: [     8,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 837: [   128,     8,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 838: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 839: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 840: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 841: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 842: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 843: [     8,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 844: [     8,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 845: [     8,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 846: [     8,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 847: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 848: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 849: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 850: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 851: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 852: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 853: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 854: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 855: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 856: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 857: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 858: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 859: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 860: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 861: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 862: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 863: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 864: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 865: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 866: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 867: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 868: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 869: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 870: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 871: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 872: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 873: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 874: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 875: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 876: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 877: [     8,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 878: [   128,     8,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 879: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 880: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 881: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 882: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 883: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 884: [     8,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 885: [     8,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 886: [     8,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 887: [     8,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 888: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 889: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 890: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 891: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 892: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 893: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 894: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 895: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 896: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 897: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 898: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 899: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 900: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 901: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 902: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 903: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 904: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 905: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 906: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 907: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 908: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 909: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 910: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 911: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 912: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 913: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 914: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 915: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 916: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 917: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 918: [     8,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 919: [   128,     8,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 920: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 921: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 922: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 923: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 924: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 925: [     8,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 926: [     8,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 927: [     8,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 928: [     8,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 929: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 930: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 931: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 932: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 933: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 934: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 935: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 936: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 937: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 938: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 939: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 940: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 941: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 942: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 943: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 944: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 945: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 946: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 947: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 948: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 949: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 950: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 951: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 952: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 953: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 954: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 955: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 956: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 957: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 958: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 959: [     8,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 960: [   128,     8,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 961: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 962: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 963: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 964: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 965: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 966: [     8,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 967: [     8,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 968: [     8,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 969: [     8,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 970: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 971: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 972: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 973: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 974: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 975: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 976: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 977: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 978: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 979: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 980: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 981: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 982: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 983: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 984: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 985: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 986: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 987: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 988: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 989: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 990: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 991: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 992: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 993: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 994: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 995: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 996: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 997: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 998: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 999: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1000: [     8,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1001: [   128,     8,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1002: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1003: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1004: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1005: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1006: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1007: [     8,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1008: [     8,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1009: [     8,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1010: [     8,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1011: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1012: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1013: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1014: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1015: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1016: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1017: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1018: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1019: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1020: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1021: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1022: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1023: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1024: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1025: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1026: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1027: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1028: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1029: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1030: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1031: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1032: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1033: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1034: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1035: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1036: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1037: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1038: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1039: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1040: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1041: [     8,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1042: [   128,     8,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1043: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1044: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1045: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1046: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1047: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1048: [     8,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1049: [     8,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1050: [     8,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1051: [     8,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1052: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1053: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1054: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1055: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1056: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1057: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1058: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1059: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1060: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1061: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1062: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1063: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1064: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1065: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1066: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1067: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1068: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1069: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1070: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1071: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1072: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1073: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1074: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1075: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1076: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1077: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1078: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1079: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1080: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1081: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1082: [     8,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1083: [   128,     8,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1084: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1085: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1086: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1087: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1088: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1089: [     8,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1090: [     8,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1091: [     8,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1092: [     8,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1093: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1094: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1095: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1096: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1097: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1098: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1099: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1100: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1102: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1103: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1104: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1105: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1106: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1107: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1108: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1109: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1110: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1111: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1112: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1113: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1114: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1115: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1116: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1117: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1118: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1119: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1120: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1121: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1122: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1123: [     8,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1124: [   128,     8,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1125: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1127: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1128: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1129: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1130: [     8,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1131: [     8,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1132: [     8,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1133: [     8,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1134: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1135: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1136: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1137: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1138: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1139: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1140: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1141: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1143: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1144: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1145: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1146: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1147: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1148: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1149: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1150: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1151: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1152: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1153: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1154: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1155: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1156: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1157: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1158: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1159: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1160: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1161: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1162: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1163: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1164: [     8,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1165: [   128,     8,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1166: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1168: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1169: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1170: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1171: [     8,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1172: [     8,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1173: [     8,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1174: [     8,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1175: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1176: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1177: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1178: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1179: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1180: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1181: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1182: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1184: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1185: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1186: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1187: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1188: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1189: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1190: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1191: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1192: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1193: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1194: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1195: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1196: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1197: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1198: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1199: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1200: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1201: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1202: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1203: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1204: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1205: [     8,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1206: [   128,     8,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1207: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1209: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1210: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1211: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1212: [     8,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1213: [     8,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1214: [     8,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1215: [     8,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1216: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1217: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1218: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1219: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1220: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1221: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1222: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1223: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1225: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1226: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1227: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1228: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1229: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1230: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1231: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1232: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1233: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1234: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1235: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1236: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1237: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1238: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1239: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1240: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1241: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1242: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1243: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1244: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1245: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1246: [     8,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1247: [   128,     8,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1248: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1250: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1251: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1252: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1253: [     8,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1254: [     8,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1255: [     8,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1256: [     8,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1257: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1258: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1259: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1260: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1261: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1262: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1263: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1264: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1266: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1267: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1268: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1269: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1270: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1271: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1272: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1273: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1274: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1275: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1276: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1277: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1278: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1279: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1280: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1281: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1282: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1283: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1284: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1285: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1286: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1287: [     8,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1288: [   128,     8,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1289: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1291: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1292: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1293: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1294: [     8,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1295: [     8,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1296: [     8,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1297: [     8,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1298: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1299: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1300: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1301: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1302: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1303: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1304: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1305: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1307: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1308: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1309: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1310: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1311: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1312: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1313: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1314: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1315: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1316: [ 102400,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
n_leafs = 552
 -   0: [  2560,  2560]     NONE
 -   1: [  2560,     1]     NONE
 -   2: [  2560, 102400]     NONE
 -   3: [     1,     1]     NONE
 -   4: [  2560,     1]     NONE
 -   5: [  2560,     1]     NONE
 -   6: [ 41943040,     1]     NONE
 -   7: [  2560,  2560]     NONE
 -   8: [  2560,     1]     NONE
 -   9: [ 41943040,     1]     NONE
 -  10: [  2560,  2560]     NONE
 -  11: [  2560,     1]     NONE
 -  12: [ 10240,  2560]     NONE
 -  13: [  2560, 10240]     NONE
 -  14: [  2560,     1]     NONE
 -  15: [  2560,  2560]     NONE
 -  16: [  2560,  2560]     NONE
 -  17: [  2560,     1]     NONE
 -  18: [     1,     1]     NONE
 -  19: [  2560,     1]     NONE
 -  20: [  2560,     1]     NONE
 -  21: [  2560,     1]     NONE
 -  22: [ 10240,     1]     NONE
 -  23: [  2560,     1]     NONE
 -  24: [  2560,     1]     NONE
 -  25: [  2560,     1]     NONE
 -  26: [  2560,  2560]     NONE
 -  27: [  2560,     1]     NONE
 -  28: [  2560,  2560]     NONE
 -  29: [  2560,     1]     NONE
 -  30: [ 10240,  2560]     NONE
 -  31: [  2560, 10240]     NONE
 -  32: [  2560,     1]     NONE
 -  33: [  2560,  2560]     NONE
 -  34: [  2560,  2560]     NONE
 -  35: [  2560,     1]     NONE
 -  36: [  2560,     1]     NONE
 -  37: [  2560,     1]     NONE
 -  38: [  2560,     1]     NONE
 -  39: [ 10240,     1]     NONE
 -  40: [  2560,     1]     NONE
 -  41: [  2560,     1]     NONE
 -  42: [  2560,     1]     NONE
 -  43: [  2560,  2560]     NONE
 -  44: [  2560,     1]     NONE
 -  45: [  2560,  2560]     NONE
 -  46: [  2560,     1]     NONE
 -  47: [ 10240,  2560]     NONE
 -  48: [  2560, 10240]     NONE
 -  49: [  2560,     1]     NONE
 -  50: [  2560,  2560]     NONE
 -  51: [  2560,  2560]     NONE
 -  52: [  2560,     1]     NONE
 -  53: [  2560,     1]     NONE
 -  54: [  2560,     1]     NONE
 -  55: [  2560,     1]     NONE
 -  56: [ 10240,     1]     NONE
 -  57: [  2560,     1]     NONE
 -  58: [  2560,     1]     NONE
 -  59: [  2560,     1]     NONE
 -  60: [  2560,  2560]     NONE
 -  61: [  2560,     1]     NONE
 -  62: [  2560,  2560]     NONE
 -  63: [  2560,     1]     NONE
 -  64: [ 10240,  2560]     NONE
 -  65: [  2560, 10240]     NONE
 -  66: [  2560,     1]     NONE
 -  67: [  2560,  2560]     NONE
 -  68: [  2560,  2560]     NONE
 -  69: [  2560,     1]     NONE
 -  70: [  2560,     1]     NONE
 -  71: [  2560,     1]     NONE
 -  72: [  2560,     1]     NONE
 -  73: [ 10240,     1]     NONE
 -  74: [  2560,     1]     NONE
 -  75: [  2560,     1]     NONE
 -  76: [  2560,     1]     NONE
 -  77: [  2560,  2560]     NONE
 -  78: [  2560,     1]     NONE
 -  79: [  2560,  2560]     NONE
 -  80: [  2560,     1]     NONE
 -  81: [ 10240,  2560]     NONE
 -  82: [  2560, 10240]     NONE
 -  83: [  2560,     1]     NONE
 -  84: [  2560,  2560]     NONE
 -  85: [  2560,  2560]     NONE
 -  86: [  2560,     1]     NONE
 -  87: [  2560,     1]     NONE
 -  88: [  2560,     1]     NONE
 -  89: [  2560,     1]     NONE
 -  90: [ 10240,     1]     NONE
 -  91: [  2560,     1]     NONE
 -  92: [  2560,     1]     NONE
 -  93: [  2560,     1]     NONE
 -  94: [  2560,  2560]     NONE
 -  95: [  2560,     1]     NONE
 -  96: [  2560,  2560]     NONE
 -  97: [  2560,     1]     NONE
 -  98: [ 10240,  2560]     NONE
 -  99: [  2560, 10240]     NONE
 - 100: [  2560,     1]     NONE
 - 101: [  2560,  2560]     NONE
 - 102: [  2560,  2560]     NONE
 - 103: [  2560,     1]     NONE
 - 104: [  2560,     1]     NONE
 - 105: [  2560,     1]     NONE
 - 106: [  2560,     1]     NONE
 - 107: [ 10240,     1]     NONE
 - 108: [  2560,     1]     NONE
 - 109: [  2560,     1]     NONE
 - 110: [  2560,     1]     NONE
 - 111: [  2560,  2560]     NONE
 - 112: [  2560,     1]     NONE
 - 113: [  2560,  2560]     NONE
 - 114: [  2560,     1]     NONE
 - 115: [ 10240,  2560]     NONE
 - 116: [  2560, 10240]     NONE
 - 117: [  2560,     1]     NONE
 - 118: [  2560,  2560]     NONE
 - 119: [  2560,  2560]     NONE
 - 120: [  2560,     1]     NONE
 - 121: [  2560,     1]     NONE
 - 122: [  2560,     1]     NONE
 - 123: [  2560,     1]     NONE
 - 124: [ 10240,     1]     NONE
 - 125: [  2560,     1]     NONE
 - 126: [  2560,     1]     NONE
 - 127: [  2560,     1]     NONE
 - 128: [  2560,  2560]     NONE
 - 129: [  2560,     1]     NONE
 - 130: [  2560,  2560]     NONE
 - 131: [  2560,     1]     NONE
 - 132: [ 10240,  2560]     NONE
 - 133: [  2560, 10240]     NONE
 - 134: [  2560,     1]     NONE
 - 135: [  2560,  2560]     NONE
 - 136: [  2560,  2560]     NONE
 - 137: [  2560,     1]     NONE
 - 138: [  2560,     1]     NONE
 - 139: [  2560,     1]     NONE
 - 140: [  2560,     1]     NONE
 - 141: [ 10240,     1]     NONE
 - 142: [  2560,     1]     NONE
 - 143: [  2560,     1]     NONE
 - 144: [  2560,     1]     NONE
 - 145: [  2560,  2560]     NONE
 - 146: [  2560,     1]     NONE
 - 147: [  2560,  2560]     NONE
 - 148: [  2560,     1]     NONE
 - 149: [ 10240,  2560]     NONE
 - 150: [  2560, 10240]     NONE
 - 151: [  2560,     1]     NONE
 - 152: [  2560,  2560]     NONE
 - 153: [  2560,  2560]     NONE
 - 154: [  2560,     1]     NONE
 - 155: [  2560,     1]     NONE
 - 156: [  2560,     1]     NONE
 - 157: [  2560,     1]     NONE
 - 158: [ 10240,     1]     NONE
 - 159: [  2560,     1]     NONE
 - 160: [  2560,     1]     NONE
 - 161: [  2560,     1]     NONE
 - 162: [  2560,  2560]     NONE
 - 163: [  2560,     1]     NONE
 - 164: [  2560,  2560]     NONE
 - 165: [  2560,     1]     NONE
 - 166: [ 10240,  2560]     NONE
 - 167: [  2560, 10240]     NONE
 - 168: [  2560,     1]     NONE
 - 169: [  2560,  2560]     NONE
 - 170: [  2560,  2560]     NONE
 - 171: [  2560,     1]     NONE
 - 172: [  2560,     1]     NONE
 - 173: [  2560,     1]     NONE
 - 174: [  2560,     1]     NONE
 - 175: [ 10240,     1]     NONE
 - 176: [  2560,     1]     NONE
 - 177: [  2560,     1]     NONE
 - 178: [  2560,     1]     NONE
 - 179: [  2560,  2560]     NONE
 - 180: [  2560,     1]     NONE
 - 181: [  2560,  2560]     NONE
 - 182: [  2560,     1]     NONE
 - 183: [ 10240,  2560]     NONE
 - 184: [  2560, 10240]     NONE
 - 185: [  2560,     1]     NONE
 - 186: [  2560,  2560]     NONE
 - 187: [  2560,  2560]     NONE
 - 188: [  2560,     1]     NONE
 - 189: [  2560,     1]     NONE
 - 190: [  2560,     1]     NONE
 - 191: [  2560,     1]     NONE
 - 192: [ 10240,     1]     NONE
 - 193: [  2560,     1]     NONE
 - 194: [  2560,     1]     NONE
 - 195: [  2560,     1]     NONE
 - 196: [  2560,  2560]     NONE
 - 197: [  2560,     1]     NONE
 - 198: [  2560,  2560]     NONE
 - 199: [  2560,     1]     NONE
 - 200: [ 10240,  2560]     NONE
 - 201: [  2560, 10240]     NONE
 - 202: [  2560,     1]     NONE
 - 203: [  2560,  2560]     NONE
 - 204: [  2560,  2560]     NONE
 - 205: [  2560,     1]     NONE
 - 206: [  2560,     1]     NONE
 - 207: [  2560,     1]     NONE
 - 208: [  2560,     1]     NONE
 - 209: [ 10240,     1]     NONE
 - 210: [  2560,     1]     NONE
 - 211: [  2560,     1]     NONE
 - 212: [  2560,     1]     NONE
 - 213: [  2560,  2560]     NONE
 - 214: [  2560,     1]     NONE
 - 215: [  2560,  2560]     NONE
 - 216: [  2560,     1]     NONE
 - 217: [ 10240,  2560]     NONE
 - 218: [  2560, 10240]     NONE
 - 219: [  2560,     1]     NONE
 - 220: [  2560,  2560]     NONE
 - 221: [  2560,  2560]     NONE
 - 222: [  2560,     1]     NONE
 - 223: [  2560,     1]     NONE
 - 224: [  2560,     1]     NONE
 - 225: [  2560,     1]     NONE
 - 226: [ 10240,     1]     NONE
 - 227: [  2560,     1]     NONE
 - 228: [  2560,     1]     NONE
 - 229: [  2560,     1]     NONE
 - 230: [  2560,  2560]     NONE
 - 231: [  2560,     1]     NONE
 - 232: [  2560,  2560]     NONE
 - 233: [  2560,     1]     NONE
 - 234: [ 10240,  2560]     NONE
 - 235: [  2560, 10240]     NONE
 - 236: [  2560,     1]     NONE
 - 237: [  2560,  2560]     NONE
 - 238: [  2560,  2560]     NONE
 - 239: [  2560,     1]     NONE
 - 240: [  2560,     1]     NONE
 - 241: [  2560,     1]     NONE
 - 242: [  2560,     1]     NONE
 - 243: [ 10240,     1]     NONE
 - 244: [  2560,     1]     NONE
 - 245: [  2560,     1]     NONE
 - 246: [  2560,     1]     NONE
 - 247: [  2560,  2560]     NONE
 - 248: [  2560,     1]     NONE
 - 249: [  2560,  2560]     NONE
 - 250: [  2560,     1]     NONE
 - 251: [ 10240,  2560]     NONE
 - 252: [  2560, 10240]     NONE
 - 253: [  2560,     1]     NONE
 - 254: [  2560,  2560]     NONE
 - 255: [  2560,  2560]     NONE
 - 256: [  2560,     1]     NONE
 - 257: [  2560,     1]     NONE
 - 258: [  2560,     1]     NONE
 - 259: [  2560,     1]     NONE
 - 260: [ 10240,     1]     NONE
 - 261: [  2560,     1]     NONE
 - 262: [  2560,     1]     NONE
 - 263: [  2560,     1]     NONE
 - 264: [  2560,  2560]     NONE
 - 265: [  2560,     1]     NONE
 - 266: [  2560,  2560]     NONE
 - 267: [  2560,     1]     NONE
 - 268: [ 10240,  2560]     NONE
 - 269: [  2560, 10240]     NONE
 - 270: [  2560,     1]     NONE
 - 271: [  2560,  2560]     NONE
 - 272: [  2560,  2560]     NONE
 - 273: [  2560,     1]     NONE
 - 274: [  2560,     1]     NONE
 - 275: [  2560,     1]     NONE
 - 276: [  2560,     1]     NONE
 - 277: [ 10240,     1]     NONE
 - 278: [  2560,     1]     NONE
 - 279: [  2560,     1]     NONE
 - 280: [  2560,     1]     NONE
 - 281: [  2560,  2560]     NONE
 - 282: [  2560,     1]     NONE
 - 283: [  2560,  2560]     NONE
 - 284: [  2560,     1]     NONE
 - 285: [ 10240,  2560]     NONE
 - 286: [  2560, 10240]     NONE
 - 287: [  2560,     1]     NONE
 - 288: [  2560,  2560]     NONE
 - 289: [  2560,  2560]     NONE
 - 290: [  2560,     1]     NONE
 - 291: [  2560,     1]     NONE
 - 292: [  2560,     1]     NONE
 - 293: [  2560,     1]     NONE
 - 294: [ 10240,     1]     NONE
 - 295: [  2560,     1]     NONE
 - 296: [  2560,     1]     NONE
 - 297: [  2560,     1]     NONE
 - 298: [  2560,  2560]     NONE
 - 299: [  2560,     1]     NONE
 - 300: [  2560,  2560]     NONE
 - 301: [  2560,     1]     NONE
 - 302: [ 10240,  2560]     NONE
 - 303: [  2560, 10240]     NONE
 - 304: [  2560,     1]     NONE
 - 305: [  2560,  2560]     NONE
 - 306: [  2560,  2560]     NONE
 - 307: [  2560,     1]     NONE
 - 308: [  2560,     1]     NONE
 - 309: [  2560,     1]     NONE
 - 310: [  2560,     1]     NONE
 - 311: [ 10240,     1]     NONE
 - 312: [  2560,     1]     NONE
 - 313: [  2560,     1]     NONE
 - 314: [  2560,     1]     NONE
 - 315: [  2560,  2560]     NONE
 - 316: [  2560,     1]     NONE
 - 317: [  2560,  2560]     NONE
 - 318: [  2560,     1]     NONE
 - 319: [ 10240,  2560]     NONE
 - 320: [  2560, 10240]     NONE
 - 321: [  2560,     1]     NONE
 - 322: [  2560,  2560]     NONE
 - 323: [  2560,  2560]     NONE
 - 324: [  2560,     1]     NONE
 - 325: [  2560,     1]     NONE
 - 326: [  2560,     1]     NONE
 - 327: [  2560,     1]     NONE
 - 328: [ 10240,     1]     NONE
 - 329: [  2560,     1]     NONE
 - 330: [  2560,     1]     NONE
 - 331: [  2560,     1]     NONE
 - 332: [  2560,  2560]     NONE
 - 333: [  2560,     1]     NONE
 - 334: [  2560,  2560]     NONE
 - 335: [  2560,     1]     NONE
 - 336: [ 10240,  2560]     NONE
 - 337: [  2560, 10240]     NONE
 - 338: [  2560,     1]     NONE
 - 339: [  2560,  2560]     NONE
 - 340: [  2560,  2560]     NONE
 - 341: [  2560,     1]     NONE
 - 342: [  2560,     1]     NONE
 - 343: [  2560,     1]     NONE
 - 344: [  2560,     1]     NONE
 - 345: [ 10240,     1]     NONE
 - 346: [  2560,     1]     NONE
 - 347: [  2560,     1]     NONE
 - 348: [  2560,     1]     NONE
 - 349: [  2560,  2560]     NONE
 - 350: [  2560,     1]     NONE
 - 351: [  2560,  2560]     NONE
 - 352: [  2560,     1]     NONE
 - 353: [ 10240,  2560]     NONE
 - 354: [  2560, 10240]     NONE
 - 355: [  2560,     1]     NONE
 - 356: [  2560,  2560]     NONE
 - 357: [  2560,  2560]     NONE
 - 358: [  2560,     1]     NONE
 - 359: [  2560,     1]     NONE
 - 360: [  2560,     1]     NONE
 - 361: [  2560,     1]     NONE
 - 362: [ 10240,     1]     NONE
 - 363: [  2560,     1]     NONE
 - 364: [  2560,     1]     NONE
 - 365: [  2560,     1]     NONE
 - 366: [  2560,  2560]     NONE
 - 367: [  2560,     1]     NONE
 - 368: [  2560,  2560]     NONE
 - 369: [  2560,     1]     NONE
 - 370: [ 10240,  2560]     NONE
 - 371: [  2560, 10240]     NONE
 - 372: [  2560,     1]     NONE
 - 373: [  2560,  2560]     NONE
 - 374: [  2560,  2560]     NONE
 - 375: [  2560,     1]     NONE
 - 376: [  2560,     1]     NONE
 - 377: [  2560,     1]     NONE
 - 378: [  2560,     1]     NONE
 - 379: [ 10240,     1]     NONE
 - 380: [  2560,     1]     NONE
 - 381: [  2560,     1]     NONE
 - 382: [  2560,     1]     NONE
 - 383: [  2560,  2560]     NONE
 - 384: [  2560,     1]     NONE
 - 385: [  2560,  2560]     NONE
 - 386: [  2560,     1]     NONE
 - 387: [ 10240,  2560]     NONE
 - 388: [  2560, 10240]     NONE
 - 389: [  2560,     1]     NONE
 - 390: [  2560,  2560]     NONE
 - 391: [  2560,  2560]     NONE
 - 392: [  2560,     1]     NONE
 - 393: [  2560,     1]     NONE
 - 394: [  2560,     1]     NONE
 - 395: [  2560,     1]     NONE
 - 396: [ 10240,     1]     NONE
 - 397: [  2560,     1]     NONE
 - 398: [  2560,     1]     NONE
 - 399: [  2560,     1]     NONE
 - 400: [  2560,  2560]     NONE
 - 401: [  2560,     1]     NONE
 - 402: [  2560,  2560]     NONE
 - 403: [  2560,     1]     NONE
 - 404: [ 10240,  2560]     NONE
 - 405: [  2560, 10240]     NONE
 - 406: [  2560,     1]     NONE
 - 407: [  2560,  2560]     NONE
 - 408: [  2560,  2560]     NONE
 - 409: [  2560,     1]     NONE
 - 410: [  2560,     1]     NONE
 - 411: [  2560,     1]     NONE
 - 412: [  2560,     1]     NONE
 - 413: [ 10240,     1]     NONE
 - 414: [  2560,     1]     NONE
 - 415: [  2560,     1]     NONE
 - 416: [  2560,     1]     NONE
 - 417: [  2560,  2560]     NONE
 - 418: [  2560,     1]     NONE
 - 419: [  2560,  2560]     NONE
 - 420: [  2560,     1]     NONE
 - 421: [ 10240,  2560]     NONE
 - 422: [  2560, 10240]     NONE
 - 423: [  2560,     1]     NONE
 - 424: [  2560,  2560]     NONE
 - 425: [  2560,  2560]     NONE
 - 426: [  2560,     1]     NONE
 - 427: [  2560,     1]     NONE
 - 428: [  2560,     1]     NONE
 - 429: [  2560,     1]     NONE
 - 430: [ 10240,     1]     NONE
 - 431: [  2560,     1]     NONE
 - 432: [  2560,     1]     NONE
 - 433: [  2560,     1]     NONE
 - 434: [  2560,  2560]     NONE
 - 435: [  2560,     1]     NONE
 - 436: [  2560,  2560]     NONE
 - 437: [  2560,     1]     NONE
 - 438: [ 10240,  2560]     NONE
 - 439: [  2560, 10240]     NONE
 - 440: [  2560,     1]     NONE
 - 441: [  2560,  2560]     NONE
 - 442: [  2560,  2560]     NONE
 - 443: [  2560,     1]     NONE
 - 444: [  2560,     1]     NONE
 - 445: [  2560,     1]     NONE
 - 446: [  2560,     1]     NONE
 - 447: [ 10240,     1]     NONE
 - 448: [  2560,     1]     NONE
 - 449: [  2560,     1]     NONE
 - 450: [  2560,     1]     NONE
 - 451: [  2560,  2560]     NONE
 - 452: [  2560,     1]     NONE
 - 453: [  2560,  2560]     NONE
 - 454: [  2560,     1]     NONE
 - 455: [ 10240,  2560]     NONE
 - 456: [  2560, 10240]     NONE
 - 457: [  2560,     1]     NONE
 - 458: [  2560,  2560]     NONE
 - 459: [  2560,  2560]     NONE
 - 460: [  2560,     1]     NONE
 - 461: [  2560,     1]     NONE
 - 462: [  2560,     1]     NONE
 - 463: [  2560,     1]     NONE
 - 464: [ 10240,     1]     NONE
 - 465: [  2560,     1]     NONE
 - 466: [  2560,     1]     NONE
 - 467: [  2560,     1]     NONE
 - 468: [  2560,  2560]     NONE
 - 469: [  2560,     1]     NONE
 - 470: [  2560,  2560]     NONE
 - 471: [  2560,     1]     NONE
 - 472: [ 10240,  2560]     NONE
 - 473: [  2560, 10240]     NONE
 - 474: [  2560,     1]     NONE
 - 475: [  2560,  2560]     NONE
 - 476: [  2560,  2560]     NONE
 - 477: [  2560,     1]     NONE
 - 478: [  2560,     1]     NONE
 - 479: [  2560,     1]     NONE
 - 480: [  2560,     1]     NONE
 - 481: [ 10240,     1]     NONE
 - 482: [  2560,     1]     NONE
 - 483: [  2560,     1]     NONE
 - 484: [  2560,     1]     NONE
 - 485: [  2560,  2560]     NONE
 - 486: [  2560,     1]     NONE
 - 487: [  2560,  2560]     NONE
 - 488: [  2560,     1]     NONE
 - 489: [ 10240,  2560]     NONE
 - 490: [  2560, 10240]     NONE
 - 491: [  2560,     1]     NONE
 - 492: [  2560,  2560]     NONE
 - 493: [  2560,  2560]     NONE
 - 494: [  2560,     1]     NONE
 - 495: [  2560,     1]     NONE
 - 496: [  2560,     1]     NONE
 - 497: [  2560,     1]     NONE
 - 498: [ 10240,     1]     NONE
 - 499: [  2560,     1]     NONE
 - 500: [  2560,     1]     NONE
 - 501: [  2560,     1]     NONE
 - 502: [  2560,  2560]     NONE
 - 503: [  2560,     1]     NONE
 - 504: [  2560,  2560]     NONE
 - 505: [  2560,     1]     NONE
 - 506: [ 10240,  2560]     NONE
 - 507: [  2560, 10240]     NONE
 - 508: [  2560,     1]     NONE
 - 509: [  2560,  2560]     NONE
 - 510: [  2560,  2560]     NONE
 - 511: [  2560,     1]     NONE
 - 512: [  2560,     1]     NONE
 - 513: [  2560,     1]     NONE
 - 514: [  2560,     1]     NONE
 - 515: [ 10240,     1]     NONE
 - 516: [  2560,     1]     NONE
 - 517: [  2560,     1]     NONE
 - 518: [  2560,     1]     NONE
 - 519: [  2560,  2560]     NONE
 - 520: [  2560,     1]     NONE
 - 521: [  2560,  2560]     NONE
 - 522: [  2560,     1]     NONE
 - 523: [ 10240,  2560]     NONE
 - 524: [  2560, 10240]     NONE
 - 525: [  2560,     1]     NONE
 - 526: [  2560,  2560]     NONE
 - 527: [  2560,  2560]     NONE
 - 528: [  2560,     1]     NONE
 - 529: [  2560,     1]     NONE
 - 530: [  2560,     1]     NONE
 - 531: [  2560,     1]     NONE
 - 532: [ 10240,     1]     NONE
 - 533: [  2560,     1]     NONE
 - 534: [  2560,     1]     NONE
 - 535: [  2560,     1]     NONE
 - 536: [  2560,  2560]     NONE
 - 537: [  2560,     1]     NONE
 - 538: [  2560, 102400]     NONE
 - 539: [  2560,     1]     NONE
 - 540: [ 10240,  2560]     NONE
 - 541: [  2560, 10240]     NONE
 - 542: [  2560,     1]     NONE
 - 543: [  2560,  2560]     NONE
 - 544: [  2560,  2560]     NONE
 - 545: [  2560,     1]     NONE
 - 546: [  2560,     1]     NONE
 - 547: [  2560,     1]     NONE
 - 548: [  2560,     1]     NONE
 - 549: [ 10240,     1]     NONE
 - 550: [  2560,     1]     NONE
 - 551: [  2560,     1]     NONE
perf_total_per_op_us[             ADD] =   0.321 ms
perf_total_per_op_us[             MUL] =   0.065 ms
perf_total_per_op_us[            NORM] =   0.065 ms
perf_total_per_op_us[         MUL_MAT] =   0.257 ms
perf_total_per_op_us[           SCALE] =   0.032 ms
perf_total_per_op_us[             CPY] =   0.096 ms
perf_total_per_op_us[         RESHAPE] =   0.096 ms
perf_total_per_op_us[            VIEW] =   0.128 ms
perf_total_per_op_us[         PERMUTE] =   0.064 ms
perf_total_per_op_us[       TRANSPOSE] =   0.032 ms
perf_total_per_op_us[        GET_ROWS] =   0.001 ms
perf_total_per_op_us[   DIAG_MASK_INF] =   0.032 ms
perf_total_per_op_us[        SOFT_MAX] =   0.032 ms
perf_total_per_op_us[            ROPE] =   0.064 ms
perf_total_per_op_us[           UNARY] =   0.032 ms
========================================
user=== GRAPH ===
n_nodes = 1317
 -   0: [  2560,     1,     1]         GET_ROWS   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   1: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   2: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   3: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   4: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   5: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   6: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   7: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   8: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   9: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  10: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  11: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  12: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  13: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  14: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  15: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  16: [     9,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  17: [   128,     9,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  18: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  19: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  20: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  21: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  22: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  23: [     9,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  24: [     9,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  25: [     9,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  26: [     9,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  27: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  28: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  29: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  30: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  31: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  32: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  33: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  34: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  35: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  36: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  37: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  38: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  39: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  40: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  41: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  42: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  43: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  44: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  45: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  46: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  47: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  48: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  49: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  50: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  51: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  52: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  53: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  54: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  55: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  56: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  57: [     9,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  58: [   128,     9,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  59: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  60: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  61: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  62: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  63: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  64: [     9,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  65: [     9,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  66: [     9,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  67: [     9,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  68: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  69: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  70: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  71: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  72: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  73: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  74: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  75: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  76: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  77: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  78: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  79: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  80: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  81: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  82: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  83: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  84: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  85: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  86: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  87: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  88: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  89: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  90: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  91: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  92: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  93: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  94: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  95: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  96: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  97: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  98: [     9,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  99: [   128,     9,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 100: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 102: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 103: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 104: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 105: [     9,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 106: [     9,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 107: [     9,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 108: [     9,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 109: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 110: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 111: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 112: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 113: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 114: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 115: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 116: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 117: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 118: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 119: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 120: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 121: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 122: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 123: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 124: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 125: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 127: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 128: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 129: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 130: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 131: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 132: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 133: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 134: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 135: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 136: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 137: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 138: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 139: [     9,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 140: [   128,     9,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 141: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 143: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 144: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 145: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 146: [     9,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 147: [     9,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 148: [     9,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 149: [     9,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 150: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 151: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 152: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 153: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 154: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 155: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 156: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 157: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 158: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 159: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 160: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 161: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 162: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 163: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 164: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 165: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 166: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 168: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 169: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 170: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 171: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 172: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 173: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 174: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 175: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 176: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 177: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 178: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 179: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 180: [     9,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 181: [   128,     9,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 182: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 184: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 185: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 186: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 187: [     9,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 188: [     9,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 189: [     9,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 190: [     9,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 191: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 192: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 193: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 194: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 195: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 196: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 197: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 198: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 199: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 200: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 201: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 202: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 203: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 204: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 205: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 206: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 207: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 209: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 210: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 211: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 212: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 213: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 214: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 215: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 216: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 217: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 218: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 219: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 220: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 221: [     9,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 222: [   128,     9,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 223: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 225: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 226: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 227: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 228: [     9,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 229: [     9,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 230: [     9,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 231: [     9,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 232: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 233: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 234: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 235: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 236: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 237: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 238: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 239: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 240: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 241: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 242: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 243: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 244: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 245: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 246: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 247: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 248: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 250: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 251: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 252: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 253: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 254: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 255: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 256: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 257: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 258: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 259: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 260: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 261: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 262: [     9,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 263: [   128,     9,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 264: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 266: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 267: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 268: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 269: [     9,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 270: [     9,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 271: [     9,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 272: [     9,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 273: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 274: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 275: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 276: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 277: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 278: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 279: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 280: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 281: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 282: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 283: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 284: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 285: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 286: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 287: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 288: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 289: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 291: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 292: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 293: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 294: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 295: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 296: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 297: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 298: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 299: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 300: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 301: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 302: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 303: [     9,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 304: [   128,     9,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 305: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 307: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 308: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 309: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 310: [     9,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 311: [     9,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 312: [     9,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 313: [     9,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 314: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 315: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 316: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 317: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 318: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 319: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 320: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 321: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 322: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 323: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 324: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 325: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 326: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 327: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 328: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 329: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 330: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 331: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 332: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 333: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 334: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 335: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 336: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 337: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 338: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 339: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 340: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 341: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 342: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 343: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 344: [     9,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 345: [   128,     9,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 346: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 347: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 348: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 349: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 350: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 351: [     9,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 352: [     9,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 353: [     9,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 354: [     9,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 355: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 356: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 357: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 358: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 359: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 360: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 361: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 362: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 363: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 364: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 365: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 366: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 367: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 368: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 369: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 370: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 371: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 372: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 373: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 374: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 375: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 376: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 377: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 378: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 379: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 380: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 381: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 382: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 383: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 384: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 385: [     9,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 386: [   128,     9,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 387: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 388: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 389: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 390: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 391: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 392: [     9,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 393: [     9,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 394: [     9,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 395: [     9,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 396: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 397: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 398: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 399: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 400: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 401: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 402: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 403: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 404: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 405: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 406: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 407: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 408: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 409: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 410: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 411: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 412: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 413: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 414: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 415: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 416: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 417: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 418: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 419: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 420: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 421: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 422: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 423: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 424: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 425: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 426: [     9,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 427: [   128,     9,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 428: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 429: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 430: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 431: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 432: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 433: [     9,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 434: [     9,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 435: [     9,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 436: [     9,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 437: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 438: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 439: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 440: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 441: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 442: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 443: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 444: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 445: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 446: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 447: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 448: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 449: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 450: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 451: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 452: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 453: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 454: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 455: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 456: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 457: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 458: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 459: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 460: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 461: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 462: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 463: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 464: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 465: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 466: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 467: [     9,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 468: [   128,     9,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 469: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 470: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 471: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 472: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 473: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 474: [     9,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 475: [     9,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 476: [     9,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 477: [     9,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 478: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 479: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 480: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 481: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 482: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 483: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 484: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 485: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 486: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 487: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 488: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 489: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 490: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 491: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 492: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 493: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 494: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 495: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 496: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 497: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 498: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 499: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 500: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 501: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 502: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 503: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 504: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 505: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 506: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 507: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 508: [     9,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 509: [   128,     9,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 510: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 511: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 512: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 513: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 514: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 515: [     9,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 516: [     9,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 517: [     9,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 518: [     9,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 519: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 520: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 521: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 522: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 523: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 524: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 525: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 526: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 527: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 528: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 529: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 530: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 531: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 532: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 533: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 534: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 535: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 536: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 537: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 538: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 539: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 540: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 541: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 542: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 543: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 544: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 545: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 546: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 547: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 548: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 549: [     9,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 550: [   128,     9,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 551: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 552: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 553: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 554: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 555: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 556: [     9,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 557: [     9,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 558: [     9,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 559: [     9,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 560: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 561: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 562: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 563: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 564: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 565: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 566: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 567: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 568: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 569: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 570: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 571: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 572: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 573: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 574: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 575: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 576: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 577: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 578: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 579: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 580: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 581: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 582: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 583: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 584: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 585: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 586: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 587: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 588: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 589: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 590: [     9,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 591: [   128,     9,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 592: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 593: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 594: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 595: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 596: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 597: [     9,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 598: [     9,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 599: [     9,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 600: [     9,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 601: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 602: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 603: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 604: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 605: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 606: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 607: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 608: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 609: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 610: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 611: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 612: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 613: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 614: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 615: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 616: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 617: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 618: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 619: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 620: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 621: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 622: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 623: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 624: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 625: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 626: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 627: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 628: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 629: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 630: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 631: [     9,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 632: [   128,     9,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 633: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 634: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 635: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 636: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 637: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 638: [     9,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 639: [     9,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 640: [     9,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 641: [     9,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 642: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 643: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 644: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 645: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 646: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 647: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 648: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 649: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 650: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 651: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 652: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 653: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 654: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 655: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 656: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 657: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 658: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 659: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 660: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 661: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 662: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 663: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 664: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 665: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 666: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 667: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 668: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 669: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 670: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 671: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 672: [     9,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 673: [   128,     9,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 674: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 675: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 676: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 677: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 678: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 679: [     9,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 680: [     9,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 681: [     9,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 682: [     9,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 683: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 684: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 685: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 686: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 687: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 688: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 689: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 690: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 691: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 692: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 693: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 694: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 695: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 696: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 697: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 698: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 699: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 700: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 701: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 702: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 703: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 704: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 705: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 706: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 707: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 708: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 709: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 710: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 711: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 712: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 713: [     9,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 714: [   128,     9,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 715: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 716: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 717: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 718: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 719: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 720: [     9,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 721: [     9,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 722: [     9,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 723: [     9,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 724: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 725: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 726: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 727: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 728: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 729: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 730: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 731: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 732: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 733: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 734: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 735: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 736: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 737: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 738: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 739: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 740: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 741: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 742: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 743: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 744: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 745: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 746: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 747: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 748: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 749: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 750: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 751: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 752: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 753: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 754: [     9,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 755: [   128,     9,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 756: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 757: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 758: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 759: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 760: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 761: [     9,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 762: [     9,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 763: [     9,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 764: [     9,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 765: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 766: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 767: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 768: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 769: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 770: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 771: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 772: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 773: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 774: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 775: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 776: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 777: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 778: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 779: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 780: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 781: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 782: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 783: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 784: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 785: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 786: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 787: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 788: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 789: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 790: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 791: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 792: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 793: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 794: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 795: [     9,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 796: [   128,     9,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 797: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 798: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 799: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 800: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 801: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 802: [     9,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 803: [     9,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 804: [     9,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 805: [     9,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 806: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 807: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 808: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 809: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 810: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 811: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 812: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 813: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 814: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 815: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 816: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 817: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 818: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 819: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 820: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 821: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 822: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 823: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 824: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 825: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 826: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 827: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 828: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 829: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 830: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 831: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 832: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 833: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 834: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 835: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 836: [     9,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 837: [   128,     9,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 838: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 839: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 840: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 841: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 842: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 843: [     9,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 844: [     9,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 845: [     9,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 846: [     9,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 847: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 848: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 849: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 850: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 851: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 852: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 853: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 854: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 855: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 856: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 857: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 858: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 859: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 860: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 861: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 862: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 863: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 864: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 865: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 866: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 867: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 868: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 869: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 870: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 871: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 872: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 873: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 874: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 875: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 876: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 877: [     9,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 878: [   128,     9,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 879: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 880: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 881: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 882: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 883: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 884: [     9,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 885: [     9,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 886: [     9,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 887: [     9,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 888: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 889: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 890: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 891: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 892: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 893: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 894: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 895: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 896: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 897: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 898: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 899: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 900: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 901: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 902: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 903: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 904: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 905: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 906: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 907: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 908: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 909: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 910: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 911: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 912: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 913: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 914: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 915: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 916: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 917: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 918: [     9,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 919: [   128,     9,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 920: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 921: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 922: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 923: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 924: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 925: [     9,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 926: [     9,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 927: [     9,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 928: [     9,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 929: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 930: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 931: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 932: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 933: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 934: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 935: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 936: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 937: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 938: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 939: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 940: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 941: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 942: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 943: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 944: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 945: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 946: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 947: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 948: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 949: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 950: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 951: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 952: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 953: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 954: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 955: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 956: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 957: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 958: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 959: [     9,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 960: [   128,     9,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 961: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 962: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 963: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 964: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 965: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 966: [     9,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 967: [     9,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 968: [     9,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 969: [     9,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 970: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 971: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 972: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 973: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 974: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 975: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 976: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 977: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 978: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 979: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 980: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 981: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 982: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 983: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 984: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 985: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 986: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 987: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 988: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 989: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 990: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 991: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 992: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 993: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 994: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 995: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 996: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 997: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 998: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 999: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1000: [     9,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1001: [   128,     9,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1002: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1003: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1004: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1005: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1006: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1007: [     9,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1008: [     9,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1009: [     9,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1010: [     9,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1011: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1012: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1013: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1014: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1015: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1016: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1017: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1018: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1019: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1020: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1021: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1022: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1023: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1024: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1025: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1026: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1027: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1028: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1029: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1030: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1031: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1032: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1033: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1034: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1035: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1036: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1037: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1038: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1039: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1040: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1041: [     9,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1042: [   128,     9,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1043: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1044: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1045: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1046: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1047: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1048: [     9,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1049: [     9,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1050: [     9,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1051: [     9,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1052: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1053: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1054: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1055: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1056: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1057: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1058: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1059: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1060: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1061: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1062: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1063: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1064: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1065: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1066: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1067: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1068: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1069: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1070: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1071: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1072: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1073: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1074: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1075: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1076: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1077: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1078: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1079: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1080: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1081: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1082: [     9,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1083: [   128,     9,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1084: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1085: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1086: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1087: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1088: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1089: [     9,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1090: [     9,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1091: [     9,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1092: [     9,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1093: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1094: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1095: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1096: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1097: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1098: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1099: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1100: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1102: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1103: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1104: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1105: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1106: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1107: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1108: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1109: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1110: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1111: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1112: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1113: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1114: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1115: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1116: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1117: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1118: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1119: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1120: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1121: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1122: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1123: [     9,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1124: [   128,     9,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1125: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1127: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1128: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1129: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1130: [     9,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1131: [     9,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1132: [     9,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1133: [     9,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1134: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1135: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1136: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1137: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1138: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1139: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1140: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1141: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1143: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1144: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1145: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1146: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1147: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1148: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1149: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1150: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1151: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1152: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1153: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1154: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1155: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1156: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1157: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1158: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1159: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1160: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1161: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1162: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1163: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1164: [     9,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1165: [   128,     9,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1166: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1168: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1169: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1170: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1171: [     9,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1172: [     9,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1173: [     9,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1174: [     9,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1175: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1176: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1177: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1178: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1179: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1180: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1181: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1182: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1184: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1185: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1186: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1187: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1188: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1189: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1190: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1191: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1192: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1193: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1194: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1195: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1196: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1197: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1198: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1199: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1200: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1201: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1202: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1203: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1204: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1205: [     9,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1206: [   128,     9,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1207: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1209: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1210: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1211: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1212: [     9,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1213: [     9,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1214: [     9,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1215: [     9,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1216: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1217: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1218: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1219: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1220: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1221: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1222: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1223: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1225: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1226: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1227: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1228: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1229: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1230: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1231: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1232: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1233: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1234: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1235: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1236: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1237: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1238: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1239: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1240: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1241: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1242: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1243: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1244: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1245: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1246: [     9,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1247: [   128,     9,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1248: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1250: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1251: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1252: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1253: [     9,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1254: [     9,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1255: [     9,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1256: [     9,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1257: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1258: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1259: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1260: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1261: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1262: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1263: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1264: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1266: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1267: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1268: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1269: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1270: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1271: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1272: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1273: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1274: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1275: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1276: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1277: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1278: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1279: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1280: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1281: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1282: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1283: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1284: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1285: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1286: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1287: [     9,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1288: [   128,     9,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1289: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1291: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1292: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1293: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1294: [     9,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1295: [     9,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1296: [     9,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1297: [     9,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1298: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1299: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1300: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1301: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1302: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1303: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1304: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1305: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1307: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1308: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1309: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1310: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1311: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1312: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1313: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1314: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1315: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1316: [ 102400,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
n_leafs = 552
 -   0: [  2560,  2560]     NONE
 -   1: [  2560,     1]     NONE
 -   2: [  2560, 102400]     NONE
 -   3: [     1,     1]     NONE
 -   4: [  2560,     1]     NONE
 -   5: [  2560,     1]     NONE
 -   6: [ 41943040,     1]     NONE
 -   7: [  2560,  2560]     NONE
 -   8: [  2560,     1]     NONE
 -   9: [ 41943040,     1]     NONE
 -  10: [  2560,  2560]     NONE
 -  11: [  2560,     1]     NONE
 -  12: [ 10240,  2560]     NONE
 -  13: [  2560, 10240]     NONE
 -  14: [  2560,     1]     NONE
 -  15: [  2560,  2560]     NONE
 -  16: [  2560,  2560]     NONE
 -  17: [  2560,     1]     NONE
 -  18: [     1,     1]     NONE
 -  19: [  2560,     1]     NONE
 -  20: [  2560,     1]     NONE
 -  21: [  2560,     1]     NONE
 -  22: [ 10240,     1]     NONE
 -  23: [  2560,     1]     NONE
 -  24: [  2560,     1]     NONE
 -  25: [  2560,     1]     NONE
 -  26: [  2560,  2560]     NONE
 -  27: [  2560,     1]     NONE
 -  28: [  2560,  2560]     NONE
 -  29: [  2560,     1]     NONE
 -  30: [ 10240,  2560]     NONE
 -  31: [  2560, 10240]     NONE
 -  32: [  2560,     1]     NONE
 -  33: [  2560,  2560]     NONE
 -  34: [  2560,  2560]     NONE
 -  35: [  2560,     1]     NONE
 -  36: [  2560,     1]     NONE
 -  37: [  2560,     1]     NONE
 -  38: [  2560,     1]     NONE
 -  39: [ 10240,     1]     NONE
 -  40: [  2560,     1]     NONE
 -  41: [  2560,     1]     NONE
 -  42: [  2560,     1]     NONE
 -  43: [  2560,  2560]     NONE
 -  44: [  2560,     1]     NONE
 -  45: [  2560,  2560]     NONE
 -  46: [  2560,     1]     NONE
 -  47: [ 10240,  2560]     NONE
 -  48: [  2560, 10240]     NONE
 -  49: [  2560,     1]     NONE
 -  50: [  2560,  2560]     NONE
 -  51: [  2560,  2560]     NONE
 -  52: [  2560,     1]     NONE
 -  53: [  2560,     1]     NONE
 -  54: [  2560,     1]     NONE
 -  55: [  2560,     1]     NONE
 -  56: [ 10240,     1]     NONE
 -  57: [  2560,     1]     NONE
 -  58: [  2560,     1]     NONE
 -  59: [  2560,     1]     NONE
 -  60: [  2560,  2560]     NONE
 -  61: [  2560,     1]     NONE
 -  62: [  2560,  2560]     NONE
 -  63: [  2560,     1]     NONE
 -  64: [ 10240,  2560]     NONE
 -  65: [  2560, 10240]     NONE
 -  66: [  2560,     1]     NONE
 -  67: [  2560,  2560]     NONE
 -  68: [  2560,  2560]     NONE
 -  69: [  2560,     1]     NONE
 -  70: [  2560,     1]     NONE
 -  71: [  2560,     1]     NONE
 -  72: [  2560,     1]     NONE
 -  73: [ 10240,     1]     NONE
 -  74: [  2560,     1]     NONE
 -  75: [  2560,     1]     NONE
 -  76: [  2560,     1]     NONE
 -  77: [  2560,  2560]     NONE
 -  78: [  2560,     1]     NONE
 -  79: [  2560,  2560]     NONE
 -  80: [  2560,     1]     NONE
 -  81: [ 10240,  2560]     NONE
 -  82: [  2560, 10240]     NONE
 -  83: [  2560,     1]     NONE
 -  84: [  2560,  2560]     NONE
 -  85: [  2560,  2560]     NONE
 -  86: [  2560,     1]     NONE
 -  87: [  2560,     1]     NONE
 -  88: [  2560,     1]     NONE
 -  89: [  2560,     1]     NONE
 -  90: [ 10240,     1]     NONE
 -  91: [  2560,     1]     NONE
 -  92: [  2560,     1]     NONE
 -  93: [  2560,     1]     NONE
 -  94: [  2560,  2560]     NONE
 -  95: [  2560,     1]     NONE
 -  96: [  2560,  2560]     NONE
 -  97: [  2560,     1]     NONE
 -  98: [ 10240,  2560]     NONE
 -  99: [  2560, 10240]     NONE
 - 100: [  2560,     1]     NONE
 - 101: [  2560,  2560]     NONE
 - 102: [  2560,  2560]     NONE
 - 103: [  2560,     1]     NONE
 - 104: [  2560,     1]     NONE
 - 105: [  2560,     1]     NONE
 - 106: [  2560,     1]     NONE
 - 107: [ 10240,     1]     NONE
 - 108: [  2560,     1]     NONE
 - 109: [  2560,     1]     NONE
 - 110: [  2560,     1]     NONE
 - 111: [  2560,  2560]     NONE
 - 112: [  2560,     1]     NONE
 - 113: [  2560,  2560]     NONE
 - 114: [  2560,     1]     NONE
 - 115: [ 10240,  2560]     NONE
 - 116: [  2560, 10240]     NONE
 - 117: [  2560,     1]     NONE
 - 118: [  2560,  2560]     NONE
 - 119: [  2560,  2560]     NONE
 - 120: [  2560,     1]     NONE
 - 121: [  2560,     1]     NONE
 - 122: [  2560,     1]     NONE
 - 123: [  2560,     1]     NONE
 - 124: [ 10240,     1]     NONE
 - 125: [  2560,     1]     NONE
 - 126: [  2560,     1]     NONE
 - 127: [  2560,     1]     NONE
 - 128: [  2560,  2560]     NONE
 - 129: [  2560,     1]     NONE
 - 130: [  2560,  2560]     NONE
 - 131: [  2560,     1]     NONE
 - 132: [ 10240,  2560]     NONE
 - 133: [  2560, 10240]     NONE
 - 134: [  2560,     1]     NONE
 - 135: [  2560,  2560]     NONE
 - 136: [  2560,  2560]     NONE
 - 137: [  2560,     1]     NONE
 - 138: [  2560,     1]     NONE
 - 139: [  2560,     1]     NONE
 - 140: [  2560,     1]     NONE
 - 141: [ 10240,     1]     NONE
 - 142: [  2560,     1]     NONE
 - 143: [  2560,     1]     NONE
 - 144: [  2560,     1]     NONE
 - 145: [  2560,  2560]     NONE
 - 146: [  2560,     1]     NONE
 - 147: [  2560,  2560]     NONE
 - 148: [  2560,     1]     NONE
 - 149: [ 10240,  2560]     NONE
 - 150: [  2560, 10240]     NONE
 - 151: [  2560,     1]     NONE
 - 152: [  2560,  2560]     NONE
 - 153: [  2560,  2560]     NONE
 - 154: [  2560,     1]     NONE
 - 155: [  2560,     1]     NONE
 - 156: [  2560,     1]     NONE
 - 157: [  2560,     1]     NONE
 - 158: [ 10240,     1]     NONE
 - 159: [  2560,     1]     NONE
 - 160: [  2560,     1]     NONE
 - 161: [  2560,     1]     NONE
 - 162: [  2560,  2560]     NONE
 - 163: [  2560,     1]     NONE
 - 164: [  2560,  2560]     NONE
 - 165: [  2560,     1]     NONE
 - 166: [ 10240,  2560]     NONE
 - 167: [  2560, 10240]     NONE
 - 168: [  2560,     1]     NONE
 - 169: [  2560,  2560]     NONE
 - 170: [  2560,  2560]     NONE
 - 171: [  2560,     1]     NONE
 - 172: [  2560,     1]     NONE
 - 173: [  2560,     1]     NONE
 - 174: [  2560,     1]     NONE
 - 175: [ 10240,     1]     NONE
 - 176: [  2560,     1]     NONE
 - 177: [  2560,     1]     NONE
 - 178: [  2560,     1]     NONE
 - 179: [  2560,  2560]     NONE
 - 180: [  2560,     1]     NONE
 - 181: [  2560,  2560]     NONE
 - 182: [  2560,     1]     NONE
 - 183: [ 10240,  2560]     NONE
 - 184: [  2560, 10240]     NONE
 - 185: [  2560,     1]     NONE
 - 186: [  2560,  2560]     NONE
 - 187: [  2560,  2560]     NONE
 - 188: [  2560,     1]     NONE
 - 189: [  2560,     1]     NONE
 - 190: [  2560,     1]     NONE
 - 191: [  2560,     1]     NONE
 - 192: [ 10240,     1]     NONE
 - 193: [  2560,     1]     NONE
 - 194: [  2560,     1]     NONE
 - 195: [  2560,     1]     NONE
 - 196: [  2560,  2560]     NONE
 - 197: [  2560,     1]     NONE
 - 198: [  2560,  2560]     NONE
 - 199: [  2560,     1]     NONE
 - 200: [ 10240,  2560]     NONE
 - 201: [  2560, 10240]     NONE
 - 202: [  2560,     1]     NONE
 - 203: [  2560,  2560]     NONE
 - 204: [  2560,  2560]     NONE
 - 205: [  2560,     1]     NONE
 - 206: [  2560,     1]     NONE
 - 207: [  2560,     1]     NONE
 - 208: [  2560,     1]     NONE
 - 209: [ 10240,     1]     NONE
 - 210: [  2560,     1]     NONE
 - 211: [  2560,     1]     NONE
 - 212: [  2560,     1]     NONE
 - 213: [  2560,  2560]     NONE
 - 214: [  2560,     1]     NONE
 - 215: [  2560,  2560]     NONE
 - 216: [  2560,     1]     NONE
 - 217: [ 10240,  2560]     NONE
 - 218: [  2560, 10240]     NONE
 - 219: [  2560,     1]     NONE
 - 220: [  2560,  2560]     NONE
 - 221: [  2560,  2560]     NONE
 - 222: [  2560,     1]     NONE
 - 223: [  2560,     1]     NONE
 - 224: [  2560,     1]     NONE
 - 225: [  2560,     1]     NONE
 - 226: [ 10240,     1]     NONE
 - 227: [  2560,     1]     NONE
 - 228: [  2560,     1]     NONE
 - 229: [  2560,     1]     NONE
 - 230: [  2560,  2560]     NONE
 - 231: [  2560,     1]     NONE
 - 232: [  2560,  2560]     NONE
 - 233: [  2560,     1]     NONE
 - 234: [ 10240,  2560]     NONE
 - 235: [  2560, 10240]     NONE
 - 236: [  2560,     1]     NONE
 - 237: [  2560,  2560]     NONE
 - 238: [  2560,  2560]     NONE
 - 239: [  2560,     1]     NONE
 - 240: [  2560,     1]     NONE
 - 241: [  2560,     1]     NONE
 - 242: [  2560,     1]     NONE
 - 243: [ 10240,     1]     NONE
 - 244: [  2560,     1]     NONE
 - 245: [  2560,     1]     NONE
 - 246: [  2560,     1]     NONE
 - 247: [  2560,  2560]     NONE
 - 248: [  2560,     1]     NONE
 - 249: [  2560,  2560]     NONE
 - 250: [  2560,     1]     NONE
 - 251: [ 10240,  2560]     NONE
 - 252: [  2560, 10240]     NONE
 - 253: [  2560,     1]     NONE
 - 254: [  2560,  2560]     NONE
 - 255: [  2560,  2560]     NONE
 - 256: [  2560,     1]     NONE
 - 257: [  2560,     1]     NONE
 - 258: [  2560,     1]     NONE
 - 259: [  2560,     1]     NONE
 - 260: [ 10240,     1]     NONE
 - 261: [  2560,     1]     NONE
 - 262: [  2560,     1]     NONE
 - 263: [  2560,     1]     NONE
 - 264: [  2560,  2560]     NONE
 - 265: [  2560,     1]     NONE
 - 266: [  2560,  2560]     NONE
 - 267: [  2560,     1]     NONE
 - 268: [ 10240,  2560]     NONE
 - 269: [  2560, 10240]     NONE
 - 270: [  2560,     1]     NONE
 - 271: [  2560,  2560]     NONE
 - 272: [  2560,  2560]     NONE
 - 273: [  2560,     1]     NONE
 - 274: [  2560,     1]     NONE
 - 275: [  2560,     1]     NONE
 - 276: [  2560,     1]     NONE
 - 277: [ 10240,     1]     NONE
 - 278: [  2560,     1]     NONE
 - 279: [  2560,     1]     NONE
 - 280: [  2560,     1]     NONE
 - 281: [  2560,  2560]     NONE
 - 282: [  2560,     1]     NONE
 - 283: [  2560,  2560]     NONE
 - 284: [  2560,     1]     NONE
 - 285: [ 10240,  2560]     NONE
 - 286: [  2560, 10240]     NONE
 - 287: [  2560,     1]     NONE
 - 288: [  2560,  2560]     NONE
 - 289: [  2560,  2560]     NONE
 - 290: [  2560,     1]     NONE
 - 291: [  2560,     1]     NONE
 - 292: [  2560,     1]     NONE
 - 293: [  2560,     1]     NONE
 - 294: [ 10240,     1]     NONE
 - 295: [  2560,     1]     NONE
 - 296: [  2560,     1]     NONE
 - 297: [  2560,     1]     NONE
 - 298: [  2560,  2560]     NONE
 - 299: [  2560,     1]     NONE
 - 300: [  2560,  2560]     NONE
 - 301: [  2560,     1]     NONE
 - 302: [ 10240,  2560]     NONE
 - 303: [  2560, 10240]     NONE
 - 304: [  2560,     1]     NONE
 - 305: [  2560,  2560]     NONE
 - 306: [  2560,  2560]     NONE
 - 307: [  2560,     1]     NONE
 - 308: [  2560,     1]     NONE
 - 309: [  2560,     1]     NONE
 - 310: [  2560,     1]     NONE
 - 311: [ 10240,     1]     NONE
 - 312: [  2560,     1]     NONE
 - 313: [  2560,     1]     NONE
 - 314: [  2560,     1]     NONE
 - 315: [  2560,  2560]     NONE
 - 316: [  2560,     1]     NONE
 - 317: [  2560,  2560]     NONE
 - 318: [  2560,     1]     NONE
 - 319: [ 10240,  2560]     NONE
 - 320: [  2560, 10240]     NONE
 - 321: [  2560,     1]     NONE
 - 322: [  2560,  2560]     NONE
 - 323: [  2560,  2560]     NONE
 - 324: [  2560,     1]     NONE
 - 325: [  2560,     1]     NONE
 - 326: [  2560,     1]     NONE
 - 327: [  2560,     1]     NONE
 - 328: [ 10240,     1]     NONE
 - 329: [  2560,     1]     NONE
 - 330: [  2560,     1]     NONE
 - 331: [  2560,     1]     NONE
 - 332: [  2560,  2560]     NONE
 - 333: [  2560,     1]     NONE
 - 334: [  2560,  2560]     NONE
 - 335: [  2560,     1]     NONE
 - 336: [ 10240,  2560]     NONE
 - 337: [  2560, 10240]     NONE
 - 338: [  2560,     1]     NONE
 - 339: [  2560,  2560]     NONE
 - 340: [  2560,  2560]     NONE
 - 341: [  2560,     1]     NONE
 - 342: [  2560,     1]     NONE
 - 343: [  2560,     1]     NONE
 - 344: [  2560,     1]     NONE
 - 345: [ 10240,     1]     NONE
 - 346: [  2560,     1]     NONE
 - 347: [  2560,     1]     NONE
 - 348: [  2560,     1]     NONE
 - 349: [  2560,  2560]     NONE
 - 350: [  2560,     1]     NONE
 - 351: [  2560,  2560]     NONE
 - 352: [  2560,     1]     NONE
 - 353: [ 10240,  2560]     NONE
 - 354: [  2560, 10240]     NONE
 - 355: [  2560,     1]     NONE
 - 356: [  2560,  2560]     NONE
 - 357: [  2560,  2560]     NONE
 - 358: [  2560,     1]     NONE
 - 359: [  2560,     1]     NONE
 - 360: [  2560,     1]     NONE
 - 361: [  2560,     1]     NONE
 - 362: [ 10240,     1]     NONE
 - 363: [  2560,     1]     NONE
 - 364: [  2560,     1]     NONE
 - 365: [  2560,     1]     NONE
 - 366: [  2560,  2560]     NONE
 - 367: [  2560,     1]     NONE
 - 368: [  2560,  2560]     NONE
 - 369: [  2560,     1]     NONE
 - 370: [ 10240,  2560]     NONE
 - 371: [  2560, 10240]     NONE
 - 372: [  2560,     1]     NONE
 - 373: [  2560,  2560]     NONE
 - 374: [  2560,  2560]     NONE
 - 375: [  2560,     1]     NONE
 - 376: [  2560,     1]     NONE
 - 377: [  2560,     1]     NONE
 - 378: [  2560,     1]     NONE
 - 379: [ 10240,     1]     NONE
 - 380: [  2560,     1]     NONE
 - 381: [  2560,     1]     NONE
 - 382: [  2560,     1]     NONE
 - 383: [  2560,  2560]     NONE
 - 384: [  2560,     1]     NONE
 - 385: [  2560,  2560]     NONE
 - 386: [  2560,     1]     NONE
 - 387: [ 10240,  2560]     NONE
 - 388: [  2560, 10240]     NONE
 - 389: [  2560,     1]     NONE
 - 390: [  2560,  2560]     NONE
 - 391: [  2560,  2560]     NONE
 - 392: [  2560,     1]     NONE
 - 393: [  2560,     1]     NONE
 - 394: [  2560,     1]     NONE
 - 395: [  2560,     1]     NONE
 - 396: [ 10240,     1]     NONE
 - 397: [  2560,     1]     NONE
 - 398: [  2560,     1]     NONE
 - 399: [  2560,     1]     NONE
 - 400: [  2560,  2560]     NONE
 - 401: [  2560,     1]     NONE
 - 402: [  2560,  2560]     NONE
 - 403: [  2560,     1]     NONE
 - 404: [ 10240,  2560]     NONE
 - 405: [  2560, 10240]     NONE
 - 406: [  2560,     1]     NONE
 - 407: [  2560,  2560]     NONE
 - 408: [  2560,  2560]     NONE
 - 409: [  2560,     1]     NONE
 - 410: [  2560,     1]     NONE
 - 411: [  2560,     1]     NONE
 - 412: [  2560,     1]     NONE
 - 413: [ 10240,     1]     NONE
 - 414: [  2560,     1]     NONE
 - 415: [  2560,     1]     NONE
 - 416: [  2560,     1]     NONE
 - 417: [  2560,  2560]     NONE
 - 418: [  2560,     1]     NONE
 - 419: [  2560,  2560]     NONE
 - 420: [  2560,     1]     NONE
 - 421: [ 10240,  2560]     NONE
 - 422: [  2560, 10240]     NONE
 - 423: [  2560,     1]     NONE
 - 424: [  2560,  2560]     NONE
 - 425: [  2560,  2560]     NONE
 - 426: [  2560,     1]     NONE
 - 427: [  2560,     1]     NONE
 - 428: [  2560,     1]     NONE
 - 429: [  2560,     1]     NONE
 - 430: [ 10240,     1]     NONE
 - 431: [  2560,     1]     NONE
 - 432: [  2560,     1]     NONE
 - 433: [  2560,     1]     NONE
 - 434: [  2560,  2560]     NONE
 - 435: [  2560,     1]     NONE
 - 436: [  2560,  2560]     NONE
 - 437: [  2560,     1]     NONE
 - 438: [ 10240,  2560]     NONE
 - 439: [  2560, 10240]     NONE
 - 440: [  2560,     1]     NONE
 - 441: [  2560,  2560]     NONE
 - 442: [  2560,  2560]     NONE
 - 443: [  2560,     1]     NONE
 - 444: [  2560,     1]     NONE
 - 445: [  2560,     1]     NONE
 - 446: [  2560,     1]     NONE
 - 447: [ 10240,     1]     NONE
 - 448: [  2560,     1]     NONE
 - 449: [  2560,     1]     NONE
 - 450: [  2560,     1]     NONE
 - 451: [  2560,  2560]     NONE
 - 452: [  2560,     1]     NONE
 - 453: [  2560,  2560]     NONE
 - 454: [  2560,     1]     NONE
 - 455: [ 10240,  2560]     NONE
 - 456: [  2560, 10240]     NONE
 - 457: [  2560,     1]     NONE
 - 458: [  2560,  2560]     NONE
 - 459: [  2560,  2560]     NONE
 - 460: [  2560,     1]     NONE
 - 461: [  2560,     1]     NONE
 - 462: [  2560,     1]     NONE
 - 463: [  2560,     1]     NONE
 - 464: [ 10240,     1]     NONE
 - 465: [  2560,     1]     NONE
 - 466: [  2560,     1]     NONE
 - 467: [  2560,     1]     NONE
 - 468: [  2560,  2560]     NONE
 - 469: [  2560,     1]     NONE
 - 470: [  2560,  2560]     NONE
 - 471: [  2560,     1]     NONE
 - 472: [ 10240,  2560]     NONE
 - 473: [  2560, 10240]     NONE
 - 474: [  2560,     1]     NONE
 - 475: [  2560,  2560]     NONE
 - 476: [  2560,  2560]     NONE
 - 477: [  2560,     1]     NONE
 - 478: [  2560,     1]     NONE
 - 479: [  2560,     1]     NONE
 - 480: [  2560,     1]     NONE
 - 481: [ 10240,     1]     NONE
 - 482: [  2560,     1]     NONE
 - 483: [  2560,     1]     NONE
 - 484: [  2560,     1]     NONE
 - 485: [  2560,  2560]     NONE
 - 486: [  2560,     1]     NONE
 - 487: [  2560,  2560]     NONE
 - 488: [  2560,     1]     NONE
 - 489: [ 10240,  2560]     NONE
 - 490: [  2560, 10240]     NONE
 - 491: [  2560,     1]     NONE
 - 492: [  2560,  2560]     NONE
 - 493: [  2560,  2560]     NONE
 - 494: [  2560,     1]     NONE
 - 495: [  2560,     1]     NONE
 - 496: [  2560,     1]     NONE
 - 497: [  2560,     1]     NONE
 - 498: [ 10240,     1]     NONE
 - 499: [  2560,     1]     NONE
 - 500: [  2560,     1]     NONE
 - 501: [  2560,     1]     NONE
 - 502: [  2560,  2560]     NONE
 - 503: [  2560,     1]     NONE
 - 504: [  2560,  2560]     NONE
 - 505: [  2560,     1]     NONE
 - 506: [ 10240,  2560]     NONE
 - 507: [  2560, 10240]     NONE
 - 508: [  2560,     1]     NONE
 - 509: [  2560,  2560]     NONE
 - 510: [  2560,  2560]     NONE
 - 511: [  2560,     1]     NONE
 - 512: [  2560,     1]     NONE
 - 513: [  2560,     1]     NONE
 - 514: [  2560,     1]     NONE
 - 515: [ 10240,     1]     NONE
 - 516: [  2560,     1]     NONE
 - 517: [  2560,     1]     NONE
 - 518: [  2560,     1]     NONE
 - 519: [  2560,  2560]     NONE
 - 520: [  2560,     1]     NONE
 - 521: [  2560,  2560]     NONE
 - 522: [  2560,     1]     NONE
 - 523: [ 10240,  2560]     NONE
 - 524: [  2560, 10240]     NONE
 - 525: [  2560,     1]     NONE
 - 526: [  2560,  2560]     NONE
 - 527: [  2560,  2560]     NONE
 - 528: [  2560,     1]     NONE
 - 529: [  2560,     1]     NONE
 - 530: [  2560,     1]     NONE
 - 531: [  2560,     1]     NONE
 - 532: [ 10240,     1]     NONE
 - 533: [  2560,     1]     NONE
 - 534: [  2560,     1]     NONE
 - 535: [  2560,     1]     NONE
 - 536: [  2560,  2560]     NONE
 - 537: [  2560,     1]     NONE
 - 538: [  2560, 102400]     NONE
 - 539: [  2560,     1]     NONE
 - 540: [ 10240,  2560]     NONE
 - 541: [  2560, 10240]     NONE
 - 542: [  2560,     1]     NONE
 - 543: [  2560,  2560]     NONE
 - 544: [  2560,  2560]     NONE
 - 545: [  2560,     1]     NONE
 - 546: [  2560,     1]     NONE
 - 547: [  2560,     1]     NONE
 - 548: [  2560,     1]     NONE
 - 549: [ 10240,     1]     NONE
 - 550: [  2560,     1]     NONE
 - 551: [  2560,     1]     NONE
perf_total_per_op_us[             ADD] =   0.321 ms
perf_total_per_op_us[             MUL] =   0.065 ms
perf_total_per_op_us[            NORM] =   0.065 ms
perf_total_per_op_us[         MUL_MAT] =   0.257 ms
perf_total_per_op_us[           SCALE] =   0.032 ms
perf_total_per_op_us[             CPY] =   0.096 ms
perf_total_per_op_us[         RESHAPE] =   0.096 ms
perf_total_per_op_us[            VIEW] =   0.128 ms
perf_total_per_op_us[         PERMUTE] =   0.064 ms
perf_total_per_op_us[       TRANSPOSE] =   0.032 ms
perf_total_per_op_us[        GET_ROWS] =   0.001 ms
perf_total_per_op_us[   DIAG_MASK_INF] =   0.032 ms
perf_total_per_op_us[        SOFT_MAX] =   0.032 ms
perf_total_per_op_us[            ROPE] =   0.064 ms
perf_total_per_op_us[           UNARY] =   0.032 ms
========================================
user=== GRAPH ===
n_nodes = 1317
 -   0: [  2560,     1,     1]         GET_ROWS   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   1: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   2: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   3: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   4: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   5: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   6: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   7: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   8: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   9: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  10: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  11: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  12: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  13: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  14: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  15: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  16: [    10,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  17: [   128,    10,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  18: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  19: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  20: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  21: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  22: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  23: [    10,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  24: [    10,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  25: [    10,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  26: [    10,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  27: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  28: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  29: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  30: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  31: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  32: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  33: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  34: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  35: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  36: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  37: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  38: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  39: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  40: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  41: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  42: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  43: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  44: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  45: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  46: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  47: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  48: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  49: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  50: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  51: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  52: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  53: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  54: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  55: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  56: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  57: [    10,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  58: [   128,    10,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  59: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  60: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  61: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  62: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  63: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  64: [    10,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  65: [    10,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  66: [    10,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  67: [    10,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  68: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  69: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  70: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  71: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  72: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  73: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  74: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  75: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  76: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  77: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  78: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  79: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  80: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  81: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  82: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  83: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  84: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  85: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  86: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  87: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  88: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  89: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  90: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  91: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  92: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  93: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  94: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  95: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  96: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  97: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  98: [    10,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  99: [   128,    10,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 100: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 102: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 103: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 104: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 105: [    10,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 106: [    10,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 107: [    10,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 108: [    10,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 109: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 110: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 111: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 112: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 113: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 114: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 115: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 116: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 117: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 118: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 119: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 120: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 121: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 122: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 123: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 124: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 125: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 127: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 128: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 129: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 130: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 131: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 132: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 133: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 134: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 135: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 136: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 137: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 138: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 139: [    10,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 140: [   128,    10,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 141: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 143: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 144: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 145: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 146: [    10,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 147: [    10,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 148: [    10,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 149: [    10,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 150: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 151: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 152: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 153: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 154: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 155: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 156: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 157: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 158: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 159: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 160: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 161: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 162: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 163: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 164: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 165: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 166: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 168: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 169: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 170: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 171: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 172: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 173: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 174: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 175: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 176: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 177: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 178: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 179: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 180: [    10,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 181: [   128,    10,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 182: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 184: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 185: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 186: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 187: [    10,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 188: [    10,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 189: [    10,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 190: [    10,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 191: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 192: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 193: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 194: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 195: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 196: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 197: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 198: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 199: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 200: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 201: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 202: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 203: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 204: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 205: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 206: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 207: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 209: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 210: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 211: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 212: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 213: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 214: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 215: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 216: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 217: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 218: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 219: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 220: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 221: [    10,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 222: [   128,    10,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 223: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 225: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 226: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 227: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 228: [    10,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 229: [    10,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 230: [    10,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 231: [    10,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 232: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 233: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 234: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 235: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 236: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 237: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 238: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 239: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 240: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 241: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 242: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 243: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 244: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 245: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 246: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 247: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 248: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 250: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 251: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 252: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 253: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 254: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 255: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 256: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 257: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 258: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 259: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 260: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 261: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 262: [    10,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 263: [   128,    10,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 264: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 266: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 267: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 268: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 269: [    10,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 270: [    10,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 271: [    10,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 272: [    10,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 273: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 274: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 275: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 276: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 277: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 278: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 279: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 280: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 281: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 282: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 283: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 284: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 285: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 286: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 287: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 288: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 289: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 291: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 292: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 293: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 294: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 295: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 296: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 297: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 298: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 299: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 300: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 301: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 302: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 303: [    10,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 304: [   128,    10,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 305: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 307: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 308: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 309: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 310: [    10,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 311: [    10,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 312: [    10,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 313: [    10,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 314: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 315: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 316: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 317: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 318: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 319: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 320: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 321: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 322: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 323: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 324: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 325: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 326: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 327: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 328: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 329: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 330: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 331: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 332: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 333: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 334: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 335: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 336: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 337: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 338: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 339: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 340: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 341: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 342: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 343: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 344: [    10,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 345: [   128,    10,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 346: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 347: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 348: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 349: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 350: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 351: [    10,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 352: [    10,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 353: [    10,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 354: [    10,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 355: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 356: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 357: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 358: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 359: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 360: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 361: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 362: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 363: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 364: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 365: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 366: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 367: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 368: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 369: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 370: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 371: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 372: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 373: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 374: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 375: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 376: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 377: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 378: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 379: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 380: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 381: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 382: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 383: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 384: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 385: [    10,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 386: [   128,    10,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 387: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 388: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 389: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 390: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 391: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 392: [    10,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 393: [    10,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 394: [    10,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 395: [    10,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 396: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 397: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 398: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 399: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 400: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 401: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 402: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 403: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 404: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 405: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 406: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 407: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 408: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 409: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 410: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 411: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 412: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 413: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 414: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 415: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 416: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 417: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 418: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 419: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 420: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 421: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 422: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 423: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 424: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 425: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 426: [    10,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 427: [   128,    10,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 428: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 429: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 430: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 431: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 432: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 433: [    10,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 434: [    10,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 435: [    10,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 436: [    10,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 437: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 438: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 439: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 440: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 441: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 442: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 443: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 444: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 445: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 446: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 447: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 448: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 449: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 450: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 451: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 452: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 453: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 454: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 455: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 456: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 457: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 458: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 459: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 460: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 461: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 462: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 463: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 464: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 465: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 466: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 467: [    10,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 468: [   128,    10,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 469: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 470: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 471: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 472: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 473: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 474: [    10,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 475: [    10,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 476: [    10,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 477: [    10,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 478: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 479: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 480: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 481: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 482: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 483: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 484: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 485: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 486: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 487: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 488: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 489: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 490: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 491: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 492: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 493: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 494: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 495: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 496: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 497: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 498: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 499: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 500: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 501: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 502: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 503: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 504: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 505: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 506: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 507: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 508: [    10,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 509: [   128,    10,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 510: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 511: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 512: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 513: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 514: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 515: [    10,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 516: [    10,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 517: [    10,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 518: [    10,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 519: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 520: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 521: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 522: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 523: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 524: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 525: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 526: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 527: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 528: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 529: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 530: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 531: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 532: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 533: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 534: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 535: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 536: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 537: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 538: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 539: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 540: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 541: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 542: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 543: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 544: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 545: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 546: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 547: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 548: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 549: [    10,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 550: [   128,    10,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 551: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 552: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 553: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 554: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 555: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 556: [    10,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 557: [    10,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 558: [    10,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 559: [    10,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 560: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 561: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 562: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 563: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 564: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 565: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 566: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 567: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 568: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 569: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 570: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 571: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 572: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 573: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 574: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 575: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 576: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 577: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 578: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 579: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 580: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 581: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 582: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 583: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 584: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 585: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 586: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 587: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 588: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 589: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 590: [    10,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 591: [   128,    10,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 592: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 593: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 594: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 595: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 596: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 597: [    10,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 598: [    10,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 599: [    10,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 600: [    10,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 601: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 602: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 603: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 604: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 605: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 606: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 607: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 608: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 609: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 610: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 611: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 612: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 613: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 614: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 615: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 616: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 617: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 618: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 619: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 620: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 621: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 622: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 623: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 624: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 625: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 626: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 627: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 628: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 629: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 630: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 631: [    10,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 632: [   128,    10,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 633: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 634: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 635: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 636: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 637: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 638: [    10,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 639: [    10,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 640: [    10,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 641: [    10,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 642: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 643: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 644: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 645: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 646: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 647: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 648: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 649: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 650: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 651: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 652: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 653: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 654: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 655: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 656: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 657: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 658: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 659: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 660: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 661: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 662: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 663: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 664: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 665: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 666: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 667: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 668: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 669: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 670: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 671: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 672: [    10,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 673: [   128,    10,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 674: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 675: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 676: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 677: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 678: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 679: [    10,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 680: [    10,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 681: [    10,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 682: [    10,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 683: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 684: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 685: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 686: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 687: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 688: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 689: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 690: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 691: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 692: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 693: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 694: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 695: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 696: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 697: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 698: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 699: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 700: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 701: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 702: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 703: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 704: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 705: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 706: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 707: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 708: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 709: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 710: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 711: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 712: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 713: [    10,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 714: [   128,    10,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 715: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 716: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 717: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 718: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 719: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 720: [    10,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 721: [    10,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 722: [    10,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 723: [    10,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 724: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 725: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 726: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 727: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 728: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 729: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 730: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 731: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 732: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 733: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 734: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 735: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 736: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 737: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 738: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 739: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 740: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 741: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 742: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 743: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 744: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 745: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 746: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 747: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 748: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 749: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 750: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 751: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 752: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 753: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 754: [    10,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 755: [   128,    10,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 756: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 757: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 758: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 759: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 760: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 761: [    10,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 762: [    10,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 763: [    10,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 764: [    10,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 765: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 766: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 767: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 768: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 769: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 770: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 771: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 772: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 773: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 774: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 775: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 776: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 777: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 778: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 779: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 780: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 781: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 782: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 783: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 784: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 785: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 786: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 787: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 788: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 789: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 790: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 791: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 792: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 793: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 794: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 795: [    10,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 796: [   128,    10,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 797: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 798: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 799: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 800: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 801: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 802: [    10,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 803: [    10,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 804: [    10,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 805: [    10,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 806: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 807: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 808: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 809: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 810: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 811: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 812: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 813: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 814: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 815: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 816: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 817: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 818: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 819: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 820: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 821: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 822: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 823: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 824: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 825: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 826: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 827: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 828: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 829: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 830: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 831: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 832: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 833: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 834: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 835: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 836: [    10,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 837: [   128,    10,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 838: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 839: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 840: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 841: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 842: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 843: [    10,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 844: [    10,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 845: [    10,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 846: [    10,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 847: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 848: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 849: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 850: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 851: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 852: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 853: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 854: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 855: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 856: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 857: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 858: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 859: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 860: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 861: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 862: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 863: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 864: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 865: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 866: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 867: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 868: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 869: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 870: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 871: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 872: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 873: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 874: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 875: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 876: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 877: [    10,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 878: [   128,    10,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 879: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 880: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 881: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 882: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 883: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 884: [    10,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 885: [    10,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 886: [    10,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 887: [    10,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 888: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 889: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 890: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 891: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 892: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 893: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 894: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 895: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 896: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 897: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 898: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 899: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 900: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 901: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 902: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 903: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 904: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 905: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 906: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 907: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 908: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 909: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 910: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 911: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 912: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 913: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 914: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 915: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 916: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 917: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 918: [    10,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 919: [   128,    10,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 920: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 921: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 922: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 923: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 924: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 925: [    10,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 926: [    10,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 927: [    10,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 928: [    10,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 929: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 930: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 931: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 932: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 933: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 934: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 935: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 936: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 937: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 938: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 939: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 940: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 941: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 942: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 943: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 944: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 945: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 946: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 947: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 948: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 949: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 950: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 951: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 952: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 953: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 954: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 955: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 956: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 957: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 958: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 959: [    10,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 960: [   128,    10,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 961: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 962: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 963: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 964: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 965: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 966: [    10,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 967: [    10,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 968: [    10,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 969: [    10,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 970: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 971: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 972: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 973: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 974: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 975: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 976: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 977: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 978: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 979: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 980: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 981: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 982: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 983: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 984: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 985: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 986: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 987: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 988: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 989: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 990: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 991: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 992: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 993: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 994: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 995: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 996: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 997: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 998: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 999: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1000: [    10,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1001: [   128,    10,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1002: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1003: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1004: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1005: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1006: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1007: [    10,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1008: [    10,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1009: [    10,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1010: [    10,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1011: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1012: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1013: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1014: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1015: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1016: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1017: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1018: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1019: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1020: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1021: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1022: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1023: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1024: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1025: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1026: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1027: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1028: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1029: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1030: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1031: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1032: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1033: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1034: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1035: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1036: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1037: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1038: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1039: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1040: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1041: [    10,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1042: [   128,    10,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1043: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1044: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1045: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1046: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1047: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1048: [    10,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1049: [    10,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1050: [    10,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1051: [    10,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1052: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1053: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1054: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1055: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1056: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1057: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1058: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1059: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1060: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1061: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1062: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1063: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1064: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1065: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1066: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1067: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1068: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1069: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1070: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1071: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1072: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1073: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1074: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1075: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1076: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1077: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1078: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1079: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1080: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1081: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1082: [    10,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1083: [   128,    10,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1084: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1085: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1086: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1087: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1088: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1089: [    10,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1090: [    10,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1091: [    10,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1092: [    10,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1093: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1094: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1095: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1096: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1097: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1098: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1099: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1100: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1102: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1103: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1104: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1105: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1106: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1107: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1108: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1109: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1110: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1111: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1112: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1113: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1114: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1115: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1116: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1117: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1118: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1119: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1120: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1121: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1122: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1123: [    10,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1124: [   128,    10,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1125: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1127: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1128: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1129: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1130: [    10,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1131: [    10,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1132: [    10,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1133: [    10,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1134: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1135: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1136: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1137: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1138: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1139: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1140: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1141: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1143: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1144: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1145: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1146: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1147: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1148: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1149: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1150: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1151: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1152: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1153: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1154: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1155: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1156: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1157: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1158: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1159: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1160: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1161: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1162: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1163: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1164: [    10,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1165: [   128,    10,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1166: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1168: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1169: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1170: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1171: [    10,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1172: [    10,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1173: [    10,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1174: [    10,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1175: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1176: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1177: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1178: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1179: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1180: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1181: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1182: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1184: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1185: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1186: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1187: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1188: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1189: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1190: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1191: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1192: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1193: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1194: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1195: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1196: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1197: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1198: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1199: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1200: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1201: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1202: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1203: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1204: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1205: [    10,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1206: [   128,    10,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1207: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1209: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1210: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1211: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1212: [    10,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1213: [    10,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1214: [    10,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1215: [    10,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1216: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1217: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1218: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1219: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1220: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1221: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1222: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1223: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1225: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1226: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1227: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1228: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1229: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1230: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1231: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1232: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1233: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1234: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1235: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1236: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1237: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1238: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1239: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1240: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1241: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1242: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1243: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1244: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1245: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1246: [    10,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1247: [   128,    10,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1248: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1250: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1251: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1252: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1253: [    10,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1254: [    10,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1255: [    10,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1256: [    10,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1257: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1258: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1259: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1260: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1261: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1262: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1263: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1264: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1266: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1267: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1268: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1269: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1270: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1271: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1272: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1273: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1274: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1275: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1276: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1277: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1278: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1279: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1280: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1281: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1282: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1283: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1284: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1285: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1286: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1287: [    10,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1288: [   128,    10,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1289: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1291: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1292: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1293: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1294: [    10,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1295: [    10,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1296: [    10,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1297: [    10,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1298: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1299: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1300: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1301: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1302: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1303: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1304: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1305: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1307: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1308: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1309: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1310: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1311: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1312: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1313: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1314: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1315: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1316: [ 102400,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
n_leafs = 552
 -   0: [  2560,  2560]     NONE
 -   1: [  2560,     1]     NONE
 -   2: [  2560, 102400]     NONE
 -   3: [     1,     1]     NONE
 -   4: [  2560,     1]     NONE
 -   5: [  2560,     1]     NONE
 -   6: [ 41943040,     1]     NONE
 -   7: [  2560,  2560]     NONE
 -   8: [  2560,     1]     NONE
 -   9: [ 41943040,     1]     NONE
 -  10: [  2560,  2560]     NONE
 -  11: [  2560,     1]     NONE
 -  12: [ 10240,  2560]     NONE
 -  13: [  2560, 10240]     NONE
 -  14: [  2560,     1]     NONE
 -  15: [  2560,  2560]     NONE
 -  16: [  2560,  2560]     NONE
 -  17: [  2560,     1]     NONE
 -  18: [     1,     1]     NONE
 -  19: [  2560,     1]     NONE
 -  20: [  2560,     1]     NONE
 -  21: [  2560,     1]     NONE
 -  22: [ 10240,     1]     NONE
 -  23: [  2560,     1]     NONE
 -  24: [  2560,     1]     NONE
 -  25: [  2560,     1]     NONE
 -  26: [  2560,  2560]     NONE
 -  27: [  2560,     1]     NONE
 -  28: [  2560,  2560]     NONE
 -  29: [  2560,     1]     NONE
 -  30: [ 10240,  2560]     NONE
 -  31: [  2560, 10240]     NONE
 -  32: [  2560,     1]     NONE
 -  33: [  2560,  2560]     NONE
 -  34: [  2560,  2560]     NONE
 -  35: [  2560,     1]     NONE
 -  36: [  2560,     1]     NONE
 -  37: [  2560,     1]     NONE
 -  38: [  2560,     1]     NONE
 -  39: [ 10240,     1]     NONE
 -  40: [  2560,     1]     NONE
 -  41: [  2560,     1]     NONE
 -  42: [  2560,     1]     NONE
 -  43: [  2560,  2560]     NONE
 -  44: [  2560,     1]     NONE
 -  45: [  2560,  2560]     NONE
 -  46: [  2560,     1]     NONE
 -  47: [ 10240,  2560]     NONE
 -  48: [  2560, 10240]     NONE
 -  49: [  2560,     1]     NONE
 -  50: [  2560,  2560]     NONE
 -  51: [  2560,  2560]     NONE
 -  52: [  2560,     1]     NONE
 -  53: [  2560,     1]     NONE
 -  54: [  2560,     1]     NONE
 -  55: [  2560,     1]     NONE
 -  56: [ 10240,     1]     NONE
 -  57: [  2560,     1]     NONE
 -  58: [  2560,     1]     NONE
 -  59: [  2560,     1]     NONE
 -  60: [  2560,  2560]     NONE
 -  61: [  2560,     1]     NONE
 -  62: [  2560,  2560]     NONE
 -  63: [  2560,     1]     NONE
 -  64: [ 10240,  2560]     NONE
 -  65: [  2560, 10240]     NONE
 -  66: [  2560,     1]     NONE
 -  67: [  2560,  2560]     NONE
 -  68: [  2560,  2560]     NONE
 -  69: [  2560,     1]     NONE
 -  70: [  2560,     1]     NONE
 -  71: [  2560,     1]     NONE
 -  72: [  2560,     1]     NONE
 -  73: [ 10240,     1]     NONE
 -  74: [  2560,     1]     NONE
 -  75: [  2560,     1]     NONE
 -  76: [  2560,     1]     NONE
 -  77: [  2560,  2560]     NONE
 -  78: [  2560,     1]     NONE
 -  79: [  2560,  2560]     NONE
 -  80: [  2560,     1]     NONE
 -  81: [ 10240,  2560]     NONE
 -  82: [  2560, 10240]     NONE
 -  83: [  2560,     1]     NONE
 -  84: [  2560,  2560]     NONE
 -  85: [  2560,  2560]     NONE
 -  86: [  2560,     1]     NONE
 -  87: [  2560,     1]     NONE
 -  88: [  2560,     1]     NONE
 -  89: [  2560,     1]     NONE
 -  90: [ 10240,     1]     NONE
 -  91: [  2560,     1]     NONE
 -  92: [  2560,     1]     NONE
 -  93: [  2560,     1]     NONE
 -  94: [  2560,  2560]     NONE
 -  95: [  2560,     1]     NONE
 -  96: [  2560,  2560]     NONE
 -  97: [  2560,     1]     NONE
 -  98: [ 10240,  2560]     NONE
 -  99: [  2560, 10240]     NONE
 - 100: [  2560,     1]     NONE
 - 101: [  2560,  2560]     NONE
 - 102: [  2560,  2560]     NONE
 - 103: [  2560,     1]     NONE
 - 104: [  2560,     1]     NONE
 - 105: [  2560,     1]     NONE
 - 106: [  2560,     1]     NONE
 - 107: [ 10240,     1]     NONE
 - 108: [  2560,     1]     NONE
 - 109: [  2560,     1]     NONE
 - 110: [  2560,     1]     NONE
 - 111: [  2560,  2560]     NONE
 - 112: [  2560,     1]     NONE
 - 113: [  2560,  2560]     NONE
 - 114: [  2560,     1]     NONE
 - 115: [ 10240,  2560]     NONE
 - 116: [  2560, 10240]     NONE
 - 117: [  2560,     1]     NONE
 - 118: [  2560,  2560]     NONE
 - 119: [  2560,  2560]     NONE
 - 120: [  2560,     1]     NONE
 - 121: [  2560,     1]     NONE
 - 122: [  2560,     1]     NONE
 - 123: [  2560,     1]     NONE
 - 124: [ 10240,     1]     NONE
 - 125: [  2560,     1]     NONE
 - 126: [  2560,     1]     NONE
 - 127: [  2560,     1]     NONE
 - 128: [  2560,  2560]     NONE
 - 129: [  2560,     1]     NONE
 - 130: [  2560,  2560]     NONE
 - 131: [  2560,     1]     NONE
 - 132: [ 10240,  2560]     NONE
 - 133: [  2560, 10240]     NONE
 - 134: [  2560,     1]     NONE
 - 135: [  2560,  2560]     NONE
 - 136: [  2560,  2560]     NONE
 - 137: [  2560,     1]     NONE
 - 138: [  2560,     1]     NONE
 - 139: [  2560,     1]     NONE
 - 140: [  2560,     1]     NONE
 - 141: [ 10240,     1]     NONE
 - 142: [  2560,     1]     NONE
 - 143: [  2560,     1]     NONE
 - 144: [  2560,     1]     NONE
 - 145: [  2560,  2560]     NONE
 - 146: [  2560,     1]     NONE
 - 147: [  2560,  2560]     NONE
 - 148: [  2560,     1]     NONE
 - 149: [ 10240,  2560]     NONE
 - 150: [  2560, 10240]     NONE
 - 151: [  2560,     1]     NONE
 - 152: [  2560,  2560]     NONE
 - 153: [  2560,  2560]     NONE
 - 154: [  2560,     1]     NONE
 - 155: [  2560,     1]     NONE
 - 156: [  2560,     1]     NONE
 - 157: [  2560,     1]     NONE
 - 158: [ 10240,     1]     NONE
 - 159: [  2560,     1]     NONE
 - 160: [  2560,     1]     NONE
 - 161: [  2560,     1]     NONE
 - 162: [  2560,  2560]     NONE
 - 163: [  2560,     1]     NONE
 - 164: [  2560,  2560]     NONE
 - 165: [  2560,     1]     NONE
 - 166: [ 10240,  2560]     NONE
 - 167: [  2560, 10240]     NONE
 - 168: [  2560,     1]     NONE
 - 169: [  2560,  2560]     NONE
 - 170: [  2560,  2560]     NONE
 - 171: [  2560,     1]     NONE
 - 172: [  2560,     1]     NONE
 - 173: [  2560,     1]     NONE
 - 174: [  2560,     1]     NONE
 - 175: [ 10240,     1]     NONE
 - 176: [  2560,     1]     NONE
 - 177: [  2560,     1]     NONE
 - 178: [  2560,     1]     NONE
 - 179: [  2560,  2560]     NONE
 - 180: [  2560,     1]     NONE
 - 181: [  2560,  2560]     NONE
 - 182: [  2560,     1]     NONE
 - 183: [ 10240,  2560]     NONE
 - 184: [  2560, 10240]     NONE
 - 185: [  2560,     1]     NONE
 - 186: [  2560,  2560]     NONE
 - 187: [  2560,  2560]     NONE
 - 188: [  2560,     1]     NONE
 - 189: [  2560,     1]     NONE
 - 190: [  2560,     1]     NONE
 - 191: [  2560,     1]     NONE
 - 192: [ 10240,     1]     NONE
 - 193: [  2560,     1]     NONE
 - 194: [  2560,     1]     NONE
 - 195: [  2560,     1]     NONE
 - 196: [  2560,  2560]     NONE
 - 197: [  2560,     1]     NONE
 - 198: [  2560,  2560]     NONE
 - 199: [  2560,     1]     NONE
 - 200: [ 10240,  2560]     NONE
 - 201: [  2560, 10240]     NONE
 - 202: [  2560,     1]     NONE
 - 203: [  2560,  2560]     NONE
 - 204: [  2560,  2560]     NONE
 - 205: [  2560,     1]     NONE
 - 206: [  2560,     1]     NONE
 - 207: [  2560,     1]     NONE
 - 208: [  2560,     1]     NONE
 - 209: [ 10240,     1]     NONE
 - 210: [  2560,     1]     NONE
 - 211: [  2560,     1]     NONE
 - 212: [  2560,     1]     NONE
 - 213: [  2560,  2560]     NONE
 - 214: [  2560,     1]     NONE
 - 215: [  2560,  2560]     NONE
 - 216: [  2560,     1]     NONE
 - 217: [ 10240,  2560]     NONE
 - 218: [  2560, 10240]     NONE
 - 219: [  2560,     1]     NONE
 - 220: [  2560,  2560]     NONE
 - 221: [  2560,  2560]     NONE
 - 222: [  2560,     1]     NONE
 - 223: [  2560,     1]     NONE
 - 224: [  2560,     1]     NONE
 - 225: [  2560,     1]     NONE
 - 226: [ 10240,     1]     NONE
 - 227: [  2560,     1]     NONE
 - 228: [  2560,     1]     NONE
 - 229: [  2560,     1]     NONE
 - 230: [  2560,  2560]     NONE
 - 231: [  2560,     1]     NONE
 - 232: [  2560,  2560]     NONE
 - 233: [  2560,     1]     NONE
 - 234: [ 10240,  2560]     NONE
 - 235: [  2560, 10240]     NONE
 - 236: [  2560,     1]     NONE
 - 237: [  2560,  2560]     NONE
 - 238: [  2560,  2560]     NONE
 - 239: [  2560,     1]     NONE
 - 240: [  2560,     1]     NONE
 - 241: [  2560,     1]     NONE
 - 242: [  2560,     1]     NONE
 - 243: [ 10240,     1]     NONE
 - 244: [  2560,     1]     NONE
 - 245: [  2560,     1]     NONE
 - 246: [  2560,     1]     NONE
 - 247: [  2560,  2560]     NONE
 - 248: [  2560,     1]     NONE
 - 249: [  2560,  2560]     NONE
 - 250: [  2560,     1]     NONE
 - 251: [ 10240,  2560]     NONE
 - 252: [  2560, 10240]     NONE
 - 253: [  2560,     1]     NONE
 - 254: [  2560,  2560]     NONE
 - 255: [  2560,  2560]     NONE
 - 256: [  2560,     1]     NONE
 - 257: [  2560,     1]     NONE
 - 258: [  2560,     1]     NONE
 - 259: [  2560,     1]     NONE
 - 260: [ 10240,     1]     NONE
 - 261: [  2560,     1]     NONE
 - 262: [  2560,     1]     NONE
 - 263: [  2560,     1]     NONE
 - 264: [  2560,  2560]     NONE
 - 265: [  2560,     1]     NONE
 - 266: [  2560,  2560]     NONE
 - 267: [  2560,     1]     NONE
 - 268: [ 10240,  2560]     NONE
 - 269: [  2560, 10240]     NONE
 - 270: [  2560,     1]     NONE
 - 271: [  2560,  2560]     NONE
 - 272: [  2560,  2560]     NONE
 - 273: [  2560,     1]     NONE
 - 274: [  2560,     1]     NONE
 - 275: [  2560,     1]     NONE
 - 276: [  2560,     1]     NONE
 - 277: [ 10240,     1]     NONE
 - 278: [  2560,     1]     NONE
 - 279: [  2560,     1]     NONE
 - 280: [  2560,     1]     NONE
 - 281: [  2560,  2560]     NONE
 - 282: [  2560,     1]     NONE
 - 283: [  2560,  2560]     NONE
 - 284: [  2560,     1]     NONE
 - 285: [ 10240,  2560]     NONE
 - 286: [  2560, 10240]     NONE
 - 287: [  2560,     1]     NONE
 - 288: [  2560,  2560]     NONE
 - 289: [  2560,  2560]     NONE
 - 290: [  2560,     1]     NONE
 - 291: [  2560,     1]     NONE
 - 292: [  2560,     1]     NONE
 - 293: [  2560,     1]     NONE
 - 294: [ 10240,     1]     NONE
 - 295: [  2560,     1]     NONE
 - 296: [  2560,     1]     NONE
 - 297: [  2560,     1]     NONE
 - 298: [  2560,  2560]     NONE
 - 299: [  2560,     1]     NONE
 - 300: [  2560,  2560]     NONE
 - 301: [  2560,     1]     NONE
 - 302: [ 10240,  2560]     NONE
 - 303: [  2560, 10240]     NONE
 - 304: [  2560,     1]     NONE
 - 305: [  2560,  2560]     NONE
 - 306: [  2560,  2560]     NONE
 - 307: [  2560,     1]     NONE
 - 308: [  2560,     1]     NONE
 - 309: [  2560,     1]     NONE
 - 310: [  2560,     1]     NONE
 - 311: [ 10240,     1]     NONE
 - 312: [  2560,     1]     NONE
 - 313: [  2560,     1]     NONE
 - 314: [  2560,     1]     NONE
 - 315: [  2560,  2560]     NONE
 - 316: [  2560,     1]     NONE
 - 317: [  2560,  2560]     NONE
 - 318: [  2560,     1]     NONE
 - 319: [ 10240,  2560]     NONE
 - 320: [  2560, 10240]     NONE
 - 321: [  2560,     1]     NONE
 - 322: [  2560,  2560]     NONE
 - 323: [  2560,  2560]     NONE
 - 324: [  2560,     1]     NONE
 - 325: [  2560,     1]     NONE
 - 326: [  2560,     1]     NONE
 - 327: [  2560,     1]     NONE
 - 328: [ 10240,     1]     NONE
 - 329: [  2560,     1]     NONE
 - 330: [  2560,     1]     NONE
 - 331: [  2560,     1]     NONE
 - 332: [  2560,  2560]     NONE
 - 333: [  2560,     1]     NONE
 - 334: [  2560,  2560]     NONE
 - 335: [  2560,     1]     NONE
 - 336: [ 10240,  2560]     NONE
 - 337: [  2560, 10240]     NONE
 - 338: [  2560,     1]     NONE
 - 339: [  2560,  2560]     NONE
 - 340: [  2560,  2560]     NONE
 - 341: [  2560,     1]     NONE
 - 342: [  2560,     1]     NONE
 - 343: [  2560,     1]     NONE
 - 344: [  2560,     1]     NONE
 - 345: [ 10240,     1]     NONE
 - 346: [  2560,     1]     NONE
 - 347: [  2560,     1]     NONE
 - 348: [  2560,     1]     NONE
 - 349: [  2560,  2560]     NONE
 - 350: [  2560,     1]     NONE
 - 351: [  2560,  2560]     NONE
 - 352: [  2560,     1]     NONE
 - 353: [ 10240,  2560]     NONE
 - 354: [  2560, 10240]     NONE
 - 355: [  2560,     1]     NONE
 - 356: [  2560,  2560]     NONE
 - 357: [  2560,  2560]     NONE
 - 358: [  2560,     1]     NONE
 - 359: [  2560,     1]     NONE
 - 360: [  2560,     1]     NONE
 - 361: [  2560,     1]     NONE
 - 362: [ 10240,     1]     NONE
 - 363: [  2560,     1]     NONE
 - 364: [  2560,     1]     NONE
 - 365: [  2560,     1]     NONE
 - 366: [  2560,  2560]     NONE
 - 367: [  2560,     1]     NONE
 - 368: [  2560,  2560]     NONE
 - 369: [  2560,     1]     NONE
 - 370: [ 10240,  2560]     NONE
 - 371: [  2560, 10240]     NONE
 - 372: [  2560,     1]     NONE
 - 373: [  2560,  2560]     NONE
 - 374: [  2560,  2560]     NONE
 - 375: [  2560,     1]     NONE
 - 376: [  2560,     1]     NONE
 - 377: [  2560,     1]     NONE
 - 378: [  2560,     1]     NONE
 - 379: [ 10240,     1]     NONE
 - 380: [  2560,     1]     NONE
 - 381: [  2560,     1]     NONE
 - 382: [  2560,     1]     NONE
 - 383: [  2560,  2560]     NONE
 - 384: [  2560,     1]     NONE
 - 385: [  2560,  2560]     NONE
 - 386: [  2560,     1]     NONE
 - 387: [ 10240,  2560]     NONE
 - 388: [  2560, 10240]     NONE
 - 389: [  2560,     1]     NONE
 - 390: [  2560,  2560]     NONE
 - 391: [  2560,  2560]     NONE
 - 392: [  2560,     1]     NONE
 - 393: [  2560,     1]     NONE
 - 394: [  2560,     1]     NONE
 - 395: [  2560,     1]     NONE
 - 396: [ 10240,     1]     NONE
 - 397: [  2560,     1]     NONE
 - 398: [  2560,     1]     NONE
 - 399: [  2560,     1]     NONE
 - 400: [  2560,  2560]     NONE
 - 401: [  2560,     1]     NONE
 - 402: [  2560,  2560]     NONE
 - 403: [  2560,     1]     NONE
 - 404: [ 10240,  2560]     NONE
 - 405: [  2560, 10240]     NONE
 - 406: [  2560,     1]     NONE
 - 407: [  2560,  2560]     NONE
 - 408: [  2560,  2560]     NONE
 - 409: [  2560,     1]     NONE
 - 410: [  2560,     1]     NONE
 - 411: [  2560,     1]     NONE
 - 412: [  2560,     1]     NONE
 - 413: [ 10240,     1]     NONE
 - 414: [  2560,     1]     NONE
 - 415: [  2560,     1]     NONE
 - 416: [  2560,     1]     NONE
 - 417: [  2560,  2560]     NONE
 - 418: [  2560,     1]     NONE
 - 419: [  2560,  2560]     NONE
 - 420: [  2560,     1]     NONE
 - 421: [ 10240,  2560]     NONE
 - 422: [  2560, 10240]     NONE
 - 423: [  2560,     1]     NONE
 - 424: [  2560,  2560]     NONE
 - 425: [  2560,  2560]     NONE
 - 426: [  2560,     1]     NONE
 - 427: [  2560,     1]     NONE
 - 428: [  2560,     1]     NONE
 - 429: [  2560,     1]     NONE
 - 430: [ 10240,     1]     NONE
 - 431: [  2560,     1]     NONE
 - 432: [  2560,     1]     NONE
 - 433: [  2560,     1]     NONE
 - 434: [  2560,  2560]     NONE
 - 435: [  2560,     1]     NONE
 - 436: [  2560,  2560]     NONE
 - 437: [  2560,     1]     NONE
 - 438: [ 10240,  2560]     NONE
 - 439: [  2560, 10240]     NONE
 - 440: [  2560,     1]     NONE
 - 441: [  2560,  2560]     NONE
 - 442: [  2560,  2560]     NONE
 - 443: [  2560,     1]     NONE
 - 444: [  2560,     1]     NONE
 - 445: [  2560,     1]     NONE
 - 446: [  2560,     1]     NONE
 - 447: [ 10240,     1]     NONE
 - 448: [  2560,     1]     NONE
 - 449: [  2560,     1]     NONE
 - 450: [  2560,     1]     NONE
 - 451: [  2560,  2560]     NONE
 - 452: [  2560,     1]     NONE
 - 453: [  2560,  2560]     NONE
 - 454: [  2560,     1]     NONE
 - 455: [ 10240,  2560]     NONE
 - 456: [  2560, 10240]     NONE
 - 457: [  2560,     1]     NONE
 - 458: [  2560,  2560]     NONE
 - 459: [  2560,  2560]     NONE
 - 460: [  2560,     1]     NONE
 - 461: [  2560,     1]     NONE
 - 462: [  2560,     1]     NONE
 - 463: [  2560,     1]     NONE
 - 464: [ 10240,     1]     NONE
 - 465: [  2560,     1]     NONE
 - 466: [  2560,     1]     NONE
 - 467: [  2560,     1]     NONE
 - 468: [  2560,  2560]     NONE
 - 469: [  2560,     1]     NONE
 - 470: [  2560,  2560]     NONE
 - 471: [  2560,     1]     NONE
 - 472: [ 10240,  2560]     NONE
 - 473: [  2560, 10240]     NONE
 - 474: [  2560,     1]     NONE
 - 475: [  2560,  2560]     NONE
 - 476: [  2560,  2560]     NONE
 - 477: [  2560,     1]     NONE
 - 478: [  2560,     1]     NONE
 - 479: [  2560,     1]     NONE
 - 480: [  2560,     1]     NONE
 - 481: [ 10240,     1]     NONE
 - 482: [  2560,     1]     NONE
 - 483: [  2560,     1]     NONE
 - 484: [  2560,     1]     NONE
 - 485: [  2560,  2560]     NONE
 - 486: [  2560,     1]     NONE
 - 487: [  2560,  2560]     NONE
 - 488: [  2560,     1]     NONE
 - 489: [ 10240,  2560]     NONE
 - 490: [  2560, 10240]     NONE
 - 491: [  2560,     1]     NONE
 - 492: [  2560,  2560]     NONE
 - 493: [  2560,  2560]     NONE
 - 494: [  2560,     1]     NONE
 - 495: [  2560,     1]     NONE
 - 496: [  2560,     1]     NONE
 - 497: [  2560,     1]     NONE
 - 498: [ 10240,     1]     NONE
 - 499: [  2560,     1]     NONE
 - 500: [  2560,     1]     NONE
 - 501: [  2560,     1]     NONE
 - 502: [  2560,  2560]     NONE
 - 503: [  2560,     1]     NONE
 - 504: [  2560,  2560]     NONE
 - 505: [  2560,     1]     NONE
 - 506: [ 10240,  2560]     NONE
 - 507: [  2560, 10240]     NONE
 - 508: [  2560,     1]     NONE
 - 509: [  2560,  2560]     NONE
 - 510: [  2560,  2560]     NONE
 - 511: [  2560,     1]     NONE
 - 512: [  2560,     1]     NONE
 - 513: [  2560,     1]     NONE
 - 514: [  2560,     1]     NONE
 - 515: [ 10240,     1]     NONE
 - 516: [  2560,     1]     NONE
 - 517: [  2560,     1]     NONE
 - 518: [  2560,     1]     NONE
 - 519: [  2560,  2560]     NONE
 - 520: [  2560,     1]     NONE
 - 521: [  2560,  2560]     NONE
 - 522: [  2560,     1]     NONE
 - 523: [ 10240,  2560]     NONE
 - 524: [  2560, 10240]     NONE
 - 525: [  2560,     1]     NONE
 - 526: [  2560,  2560]     NONE
 - 527: [  2560,  2560]     NONE
 - 528: [  2560,     1]     NONE
 - 529: [  2560,     1]     NONE
 - 530: [  2560,     1]     NONE
 - 531: [  2560,     1]     NONE
 - 532: [ 10240,     1]     NONE
 - 533: [  2560,     1]     NONE
 - 534: [  2560,     1]     NONE
 - 535: [  2560,     1]     NONE
 - 536: [  2560,  2560]     NONE
 - 537: [  2560,     1]     NONE
 - 538: [  2560, 102400]     NONE
 - 539: [  2560,     1]     NONE
 - 540: [ 10240,  2560]     NONE
 - 541: [  2560, 10240]     NONE
 - 542: [  2560,     1]     NONE
 - 543: [  2560,  2560]     NONE
 - 544: [  2560,  2560]     NONE
 - 545: [  2560,     1]     NONE
 - 546: [  2560,     1]     NONE
 - 547: [  2560,     1]     NONE
 - 548: [  2560,     1]     NONE
 - 549: [ 10240,     1]     NONE
 - 550: [  2560,     1]     NONE
 - 551: [  2560,     1]     NONE
perf_total_per_op_us[             ADD] =   0.321 ms
perf_total_per_op_us[             MUL] =   0.065 ms
perf_total_per_op_us[            NORM] =   0.065 ms
perf_total_per_op_us[         MUL_MAT] =   0.257 ms
perf_total_per_op_us[           SCALE] =   0.032 ms
perf_total_per_op_us[             CPY] =   0.096 ms
perf_total_per_op_us[         RESHAPE] =   0.096 ms
perf_total_per_op_us[            VIEW] =   0.128 ms
perf_total_per_op_us[         PERMUTE] =   0.064 ms
perf_total_per_op_us[       TRANSPOSE] =   0.032 ms
perf_total_per_op_us[        GET_ROWS] =   0.001 ms
perf_total_per_op_us[   DIAG_MASK_INF] =   0.032 ms
perf_total_per_op_us[        SOFT_MAX] =   0.032 ms
perf_total_per_op_us[            ROPE] =   0.064 ms
perf_total_per_op_us[           UNARY] =   0.032 ms
========================================
user=== GRAPH ===
n_nodes = 1317
 -   0: [  2560,     1,     1]         GET_ROWS   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   1: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   2: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   3: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   4: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   5: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   6: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   7: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   8: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   9: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  10: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  11: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  12: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  13: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  14: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  15: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  16: [    11,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  17: [   128,    11,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  18: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  19: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  20: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  21: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  22: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  23: [    11,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  24: [    11,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  25: [    11,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  26: [    11,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  27: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  28: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  29: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  30: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  31: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  32: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  33: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  34: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  35: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  36: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  37: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  38: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  39: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  40: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  41: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  42: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  43: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  44: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  45: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  46: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  47: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  48: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  49: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  50: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  51: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  52: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  53: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  54: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  55: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  56: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  57: [    11,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  58: [   128,    11,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  59: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  60: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  61: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  62: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  63: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  64: [    11,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  65: [    11,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  66: [    11,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  67: [    11,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  68: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  69: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  70: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  71: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  72: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  73: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  74: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  75: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  76: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  77: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  78: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  79: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  80: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  81: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  82: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  83: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  84: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  85: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  86: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  87: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  88: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  89: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  90: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  91: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  92: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  93: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  94: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  95: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  96: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  97: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  98: [    11,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  99: [   128,    11,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 100: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 102: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 103: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 104: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 105: [    11,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 106: [    11,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 107: [    11,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 108: [    11,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 109: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 110: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 111: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 112: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 113: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 114: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 115: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 116: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 117: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 118: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 119: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 120: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 121: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 122: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 123: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 124: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 125: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 127: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 128: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 129: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 130: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 131: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 132: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 133: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 134: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 135: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 136: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 137: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 138: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 139: [    11,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 140: [   128,    11,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 141: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 143: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 144: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 145: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 146: [    11,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 147: [    11,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 148: [    11,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 149: [    11,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 150: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 151: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 152: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 153: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 154: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 155: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 156: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 157: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 158: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 159: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 160: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 161: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 162: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 163: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 164: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 165: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 166: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 168: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 169: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 170: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 171: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 172: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 173: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 174: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 175: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 176: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 177: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 178: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 179: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 180: [    11,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 181: [   128,    11,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 182: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 184: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 185: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 186: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 187: [    11,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 188: [    11,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 189: [    11,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 190: [    11,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 191: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 192: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 193: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 194: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 195: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 196: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 197: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 198: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 199: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 200: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 201: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 202: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 203: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 204: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 205: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 206: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 207: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 209: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 210: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 211: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 212: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 213: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 214: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 215: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 216: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 217: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 218: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 219: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 220: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 221: [    11,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 222: [   128,    11,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 223: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 225: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 226: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 227: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 228: [    11,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 229: [    11,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 230: [    11,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 231: [    11,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 232: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 233: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 234: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 235: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 236: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 237: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 238: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 239: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 240: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 241: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 242: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 243: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 244: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 245: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 246: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 247: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 248: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 250: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 251: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 252: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 253: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 254: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 255: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 256: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 257: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 258: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 259: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 260: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 261: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 262: [    11,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 263: [   128,    11,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 264: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 266: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 267: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 268: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 269: [    11,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 270: [    11,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 271: [    11,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 272: [    11,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 273: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 274: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 275: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 276: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 277: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 278: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 279: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 280: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 281: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 282: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 283: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 284: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 285: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 286: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 287: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 288: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 289: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 291: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 292: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 293: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 294: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 295: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 296: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 297: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 298: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 299: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 300: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 301: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 302: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 303: [    11,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 304: [   128,    11,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 305: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 307: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 308: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 309: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 310: [    11,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 311: [    11,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 312: [    11,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 313: [    11,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 314: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 315: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 316: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 317: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 318: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 319: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 320: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 321: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 322: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 323: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 324: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 325: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 326: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 327: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 328: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 329: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 330: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 331: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 332: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 333: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 334: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 335: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 336: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 337: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 338: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 339: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 340: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 341: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 342: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 343: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 344: [    11,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 345: [   128,    11,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 346: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 347: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 348: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 349: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 350: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 351: [    11,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 352: [    11,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 353: [    11,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 354: [    11,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 355: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 356: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 357: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 358: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 359: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 360: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 361: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 362: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 363: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 364: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 365: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 366: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 367: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 368: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 369: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 370: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 371: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 372: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 373: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 374: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 375: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 376: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 377: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 378: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 379: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 380: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 381: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 382: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 383: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 384: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 385: [    11,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 386: [   128,    11,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 387: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 388: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 389: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 390: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 391: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 392: [    11,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 393: [    11,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 394: [    11,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 395: [    11,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 396: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 397: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 398: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 399: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 400: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 401: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 402: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 403: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 404: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 405: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 406: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 407: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 408: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 409: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 410: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 411: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 412: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 413: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 414: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 415: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 416: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 417: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 418: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 419: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 420: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 421: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 422: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 423: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 424: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 425: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 426: [    11,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 427: [   128,    11,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 428: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 429: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 430: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 431: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 432: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 433: [    11,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 434: [    11,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 435: [    11,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 436: [    11,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 437: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 438: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 439: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 440: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 441: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 442: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 443: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 444: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 445: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 446: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 447: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 448: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 449: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 450: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 451: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 452: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 453: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 454: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 455: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 456: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 457: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 458: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 459: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 460: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 461: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 462: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 463: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 464: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 465: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 466: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 467: [    11,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 468: [   128,    11,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 469: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 470: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 471: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 472: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 473: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 474: [    11,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 475: [    11,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 476: [    11,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 477: [    11,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 478: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 479: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 480: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 481: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 482: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 483: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 484: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 485: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 486: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 487: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 488: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 489: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 490: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 491: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 492: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 493: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 494: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 495: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 496: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 497: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 498: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 499: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 500: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 501: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 502: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 503: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 504: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 505: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 506: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 507: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 508: [    11,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 509: [   128,    11,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 510: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 511: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 512: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 513: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 514: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 515: [    11,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 516: [    11,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 517: [    11,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 518: [    11,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 519: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 520: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 521: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 522: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 523: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 524: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 525: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 526: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 527: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 528: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 529: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 530: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 531: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 532: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 533: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 534: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 535: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 536: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 537: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 538: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 539: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 540: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 541: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 542: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 543: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 544: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 545: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 546: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 547: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 548: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 549: [    11,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 550: [   128,    11,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 551: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 552: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 553: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 554: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 555: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 556: [    11,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 557: [    11,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 558: [    11,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 559: [    11,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 560: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 561: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 562: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 563: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 564: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 565: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 566: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 567: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 568: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 569: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 570: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 571: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 572: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 573: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 574: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 575: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 576: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 577: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 578: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 579: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 580: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 581: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 582: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 583: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 584: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 585: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 586: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 587: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 588: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 589: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 590: [    11,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 591: [   128,    11,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 592: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 593: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 594: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 595: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 596: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 597: [    11,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 598: [    11,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 599: [    11,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 600: [    11,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 601: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 602: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 603: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 604: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 605: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 606: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 607: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 608: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 609: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 610: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 611: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 612: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 613: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 614: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 615: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 616: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 617: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 618: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 619: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 620: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 621: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 622: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 623: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 624: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 625: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 626: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 627: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 628: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 629: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 630: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 631: [    11,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 632: [   128,    11,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 633: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 634: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 635: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 636: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 637: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 638: [    11,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 639: [    11,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 640: [    11,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 641: [    11,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 642: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 643: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 644: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 645: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 646: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 647: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 648: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 649: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 650: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 651: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 652: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 653: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 654: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 655: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 656: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 657: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 658: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 659: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 660: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 661: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 662: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 663: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 664: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 665: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 666: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 667: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 668: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 669: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 670: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 671: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 672: [    11,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 673: [   128,    11,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 674: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 675: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 676: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 677: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 678: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 679: [    11,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 680: [    11,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 681: [    11,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 682: [    11,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 683: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 684: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 685: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 686: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 687: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 688: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 689: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 690: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 691: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 692: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 693: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 694: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 695: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 696: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 697: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 698: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 699: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 700: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 701: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 702: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 703: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 704: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 705: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 706: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 707: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 708: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 709: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 710: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 711: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 712: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 713: [    11,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 714: [   128,    11,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 715: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 716: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 717: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 718: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 719: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 720: [    11,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 721: [    11,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 722: [    11,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 723: [    11,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 724: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 725: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 726: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 727: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 728: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 729: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 730: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 731: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 732: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 733: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 734: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 735: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 736: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 737: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 738: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 739: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 740: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 741: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 742: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 743: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 744: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 745: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 746: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 747: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 748: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 749: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 750: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 751: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 752: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 753: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 754: [    11,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 755: [   128,    11,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 756: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 757: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 758: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 759: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 760: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 761: [    11,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 762: [    11,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 763: [    11,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 764: [    11,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 765: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 766: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 767: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 768: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 769: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 770: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 771: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 772: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 773: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 774: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 775: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 776: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 777: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 778: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 779: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 780: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 781: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 782: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 783: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 784: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 785: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 786: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 787: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 788: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 789: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 790: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 791: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 792: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 793: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 794: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 795: [    11,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 796: [   128,    11,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 797: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 798: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 799: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 800: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 801: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 802: [    11,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 803: [    11,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 804: [    11,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 805: [    11,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 806: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 807: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 808: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 809: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 810: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 811: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 812: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 813: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 814: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 815: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 816: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 817: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 818: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 819: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 820: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 821: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 822: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 823: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 824: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 825: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 826: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 827: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 828: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 829: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 830: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 831: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 832: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 833: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 834: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 835: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 836: [    11,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 837: [   128,    11,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 838: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 839: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 840: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 841: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 842: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 843: [    11,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 844: [    11,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 845: [    11,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 846: [    11,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 847: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 848: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 849: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 850: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 851: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 852: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 853: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 854: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 855: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 856: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 857: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 858: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 859: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 860: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 861: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 862: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 863: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 864: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 865: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 866: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 867: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 868: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 869: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 870: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 871: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 872: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 873: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 874: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 875: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 876: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 877: [    11,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 878: [   128,    11,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 879: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 880: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 881: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 882: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 883: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 884: [    11,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 885: [    11,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 886: [    11,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 887: [    11,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 888: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 889: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 890: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 891: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 892: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 893: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 894: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 895: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 896: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 897: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 898: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 899: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 900: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 901: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 902: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 903: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 904: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 905: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 906: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 907: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 908: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 909: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 910: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 911: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 912: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 913: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 914: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 915: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 916: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 917: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 918: [    11,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 919: [   128,    11,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 920: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 921: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 922: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 923: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 924: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 925: [    11,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 926: [    11,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 927: [    11,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 928: [    11,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 929: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 930: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 931: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 932: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 933: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 934: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 935: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 936: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 937: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 938: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 939: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 940: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 941: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 942: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 943: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 944: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 945: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 946: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 947: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 948: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 949: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 950: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 951: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 952: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 953: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 954: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 955: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 956: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 957: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 958: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 959: [    11,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 960: [   128,    11,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 961: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 962: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 963: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 964: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 965: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 966: [    11,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 967: [    11,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 968: [    11,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 969: [    11,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 970: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 971: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 972: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 973: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 974: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 975: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 976: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 977: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 978: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 979: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 980: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 981: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 982: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 983: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 984: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 985: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 986: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 987: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 988: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 989: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 990: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 991: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 992: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 993: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 994: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 995: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 996: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 997: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 998: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 999: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1000: [    11,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1001: [   128,    11,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1002: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1003: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1004: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1005: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1006: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1007: [    11,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1008: [    11,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1009: [    11,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1010: [    11,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1011: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1012: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1013: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1014: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1015: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1016: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1017: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1018: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1019: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1020: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1021: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1022: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1023: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1024: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1025: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1026: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1027: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1028: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1029: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1030: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1031: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1032: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1033: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1034: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1035: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1036: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1037: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1038: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1039: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1040: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1041: [    11,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1042: [   128,    11,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1043: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1044: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1045: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1046: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1047: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1048: [    11,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1049: [    11,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1050: [    11,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1051: [    11,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1052: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1053: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1054: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1055: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1056: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1057: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1058: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1059: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1060: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1061: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1062: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1063: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1064: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1065: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1066: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1067: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1068: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1069: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1070: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1071: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1072: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1073: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1074: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1075: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1076: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1077: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1078: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1079: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1080: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1081: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1082: [    11,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1083: [   128,    11,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1084: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1085: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1086: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1087: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1088: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1089: [    11,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1090: [    11,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1091: [    11,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1092: [    11,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1093: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1094: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1095: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1096: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1097: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1098: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1099: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1100: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1102: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1103: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1104: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1105: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1106: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1107: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1108: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1109: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1110: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1111: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1112: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1113: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1114: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1115: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1116: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1117: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1118: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1119: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1120: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1121: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1122: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1123: [    11,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1124: [   128,    11,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1125: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1127: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1128: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1129: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1130: [    11,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1131: [    11,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1132: [    11,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1133: [    11,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1134: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1135: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1136: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1137: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1138: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1139: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1140: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1141: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1143: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1144: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1145: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1146: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1147: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1148: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1149: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1150: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1151: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1152: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1153: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1154: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1155: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1156: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1157: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1158: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1159: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1160: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1161: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1162: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1163: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1164: [    11,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1165: [   128,    11,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1166: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1168: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1169: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1170: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1171: [    11,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1172: [    11,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1173: [    11,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1174: [    11,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1175: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1176: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1177: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1178: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1179: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1180: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1181: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1182: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1184: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1185: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1186: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1187: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1188: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1189: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1190: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1191: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1192: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1193: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1194: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1195: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1196: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1197: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1198: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1199: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1200: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1201: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1202: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1203: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1204: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1205: [    11,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1206: [   128,    11,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1207: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1209: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1210: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1211: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1212: [    11,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1213: [    11,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1214: [    11,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1215: [    11,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1216: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1217: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1218: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1219: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1220: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1221: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1222: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1223: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1225: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1226: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1227: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1228: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1229: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1230: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1231: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1232: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1233: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1234: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1235: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1236: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1237: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1238: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1239: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1240: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1241: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1242: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1243: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1244: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1245: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1246: [    11,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1247: [   128,    11,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1248: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1250: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1251: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1252: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1253: [    11,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1254: [    11,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1255: [    11,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1256: [    11,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1257: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1258: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1259: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1260: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1261: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1262: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1263: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1264: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1266: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1267: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1268: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1269: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1270: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1271: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1272: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1273: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1274: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1275: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1276: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1277: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1278: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1279: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1280: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1281: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1282: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1283: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1284: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1285: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1286: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1287: [    11,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1288: [   128,    11,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1289: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1291: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1292: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1293: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1294: [    11,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1295: [    11,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1296: [    11,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1297: [    11,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1298: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1299: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1300: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1301: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1302: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1303: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1304: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1305: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1307: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1308: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1309: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1310: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1311: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1312: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1313: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1314: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1315: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1316: [ 102400,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
n_leafs = 552
 -   0: [  2560,  2560]     NONE
 -   1: [  2560,     1]     NONE
 -   2: [  2560, 102400]     NONE
 -   3: [     1,     1]     NONE
 -   4: [  2560,     1]     NONE
 -   5: [  2560,     1]     NONE
 -   6: [ 41943040,     1]     NONE
 -   7: [  2560,  2560]     NONE
 -   8: [  2560,     1]     NONE
 -   9: [ 41943040,     1]     NONE
 -  10: [  2560,  2560]     NONE
 -  11: [  2560,     1]     NONE
 -  12: [ 10240,  2560]     NONE
 -  13: [  2560, 10240]     NONE
 -  14: [  2560,     1]     NONE
 -  15: [  2560,  2560]     NONE
 -  16: [  2560,  2560]     NONE
 -  17: [  2560,     1]     NONE
 -  18: [     1,     1]     NONE
 -  19: [  2560,     1]     NONE
 -  20: [  2560,     1]     NONE
 -  21: [  2560,     1]     NONE
 -  22: [ 10240,     1]     NONE
 -  23: [  2560,     1]     NONE
 -  24: [  2560,     1]     NONE
 -  25: [  2560,     1]     NONE
 -  26: [  2560,  2560]     NONE
 -  27: [  2560,     1]     NONE
 -  28: [  2560,  2560]     NONE
 -  29: [  2560,     1]     NONE
 -  30: [ 10240,  2560]     NONE
 -  31: [  2560, 10240]     NONE
 -  32: [  2560,     1]     NONE
 -  33: [  2560,  2560]     NONE
 -  34: [  2560,  2560]     NONE
 -  35: [  2560,     1]     NONE
 -  36: [  2560,     1]     NONE
 -  37: [  2560,     1]     NONE
 -  38: [  2560,     1]     NONE
 -  39: [ 10240,     1]     NONE
 -  40: [  2560,     1]     NONE
 -  41: [  2560,     1]     NONE
 -  42: [  2560,     1]     NONE
 -  43: [  2560,  2560]     NONE
 -  44: [  2560,     1]     NONE
 -  45: [  2560,  2560]     NONE
 -  46: [  2560,     1]     NONE
 -  47: [ 10240,  2560]     NONE
 -  48: [  2560, 10240]     NONE
 -  49: [  2560,     1]     NONE
 -  50: [  2560,  2560]     NONE
 -  51: [  2560,  2560]     NONE
 -  52: [  2560,     1]     NONE
 -  53: [  2560,     1]     NONE
 -  54: [  2560,     1]     NONE
 -  55: [  2560,     1]     NONE
 -  56: [ 10240,     1]     NONE
 -  57: [  2560,     1]     NONE
 -  58: [  2560,     1]     NONE
 -  59: [  2560,     1]     NONE
 -  60: [  2560,  2560]     NONE
 -  61: [  2560,     1]     NONE
 -  62: [  2560,  2560]     NONE
 -  63: [  2560,     1]     NONE
 -  64: [ 10240,  2560]     NONE
 -  65: [  2560, 10240]     NONE
 -  66: [  2560,     1]     NONE
 -  67: [  2560,  2560]     NONE
 -  68: [  2560,  2560]     NONE
 -  69: [  2560,     1]     NONE
 -  70: [  2560,     1]     NONE
 -  71: [  2560,     1]     NONE
 -  72: [  2560,     1]     NONE
 -  73: [ 10240,     1]     NONE
 -  74: [  2560,     1]     NONE
 -  75: [  2560,     1]     NONE
 -  76: [  2560,     1]     NONE
 -  77: [  2560,  2560]     NONE
 -  78: [  2560,     1]     NONE
 -  79: [  2560,  2560]     NONE
 -  80: [  2560,     1]     NONE
 -  81: [ 10240,  2560]     NONE
 -  82: [  2560, 10240]     NONE
 -  83: [  2560,     1]     NONE
 -  84: [  2560,  2560]     NONE
 -  85: [  2560,  2560]     NONE
 -  86: [  2560,     1]     NONE
 -  87: [  2560,     1]     NONE
 -  88: [  2560,     1]     NONE
 -  89: [  2560,     1]     NONE
 -  90: [ 10240,     1]     NONE
 -  91: [  2560,     1]     NONE
 -  92: [  2560,     1]     NONE
 -  93: [  2560,     1]     NONE
 -  94: [  2560,  2560]     NONE
 -  95: [  2560,     1]     NONE
 -  96: [  2560,  2560]     NONE
 -  97: [  2560,     1]     NONE
 -  98: [ 10240,  2560]     NONE
 -  99: [  2560, 10240]     NONE
 - 100: [  2560,     1]     NONE
 - 101: [  2560,  2560]     NONE
 - 102: [  2560,  2560]     NONE
 - 103: [  2560,     1]     NONE
 - 104: [  2560,     1]     NONE
 - 105: [  2560,     1]     NONE
 - 106: [  2560,     1]     NONE
 - 107: [ 10240,     1]     NONE
 - 108: [  2560,     1]     NONE
 - 109: [  2560,     1]     NONE
 - 110: [  2560,     1]     NONE
 - 111: [  2560,  2560]     NONE
 - 112: [  2560,     1]     NONE
 - 113: [  2560,  2560]     NONE
 - 114: [  2560,     1]     NONE
 - 115: [ 10240,  2560]     NONE
 - 116: [  2560, 10240]     NONE
 - 117: [  2560,     1]     NONE
 - 118: [  2560,  2560]     NONE
 - 119: [  2560,  2560]     NONE
 - 120: [  2560,     1]     NONE
 - 121: [  2560,     1]     NONE
 - 122: [  2560,     1]     NONE
 - 123: [  2560,     1]     NONE
 - 124: [ 10240,     1]     NONE
 - 125: [  2560,     1]     NONE
 - 126: [  2560,     1]     NONE
 - 127: [  2560,     1]     NONE
 - 128: [  2560,  2560]     NONE
 - 129: [  2560,     1]     NONE
 - 130: [  2560,  2560]     NONE
 - 131: [  2560,     1]     NONE
 - 132: [ 10240,  2560]     NONE
 - 133: [  2560, 10240]     NONE
 - 134: [  2560,     1]     NONE
 - 135: [  2560,  2560]     NONE
 - 136: [  2560,  2560]     NONE
 - 137: [  2560,     1]     NONE
 - 138: [  2560,     1]     NONE
 - 139: [  2560,     1]     NONE
 - 140: [  2560,     1]     NONE
 - 141: [ 10240,     1]     NONE
 - 142: [  2560,     1]     NONE
 - 143: [  2560,     1]     NONE
 - 144: [  2560,     1]     NONE
 - 145: [  2560,  2560]     NONE
 - 146: [  2560,     1]     NONE
 - 147: [  2560,  2560]     NONE
 - 148: [  2560,     1]     NONE
 - 149: [ 10240,  2560]     NONE
 - 150: [  2560, 10240]     NONE
 - 151: [  2560,     1]     NONE
 - 152: [  2560,  2560]     NONE
 - 153: [  2560,  2560]     NONE
 - 154: [  2560,     1]     NONE
 - 155: [  2560,     1]     NONE
 - 156: [  2560,     1]     NONE
 - 157: [  2560,     1]     NONE
 - 158: [ 10240,     1]     NONE
 - 159: [  2560,     1]     NONE
 - 160: [  2560,     1]     NONE
 - 161: [  2560,     1]     NONE
 - 162: [  2560,  2560]     NONE
 - 163: [  2560,     1]     NONE
 - 164: [  2560,  2560]     NONE
 - 165: [  2560,     1]     NONE
 - 166: [ 10240,  2560]     NONE
 - 167: [  2560, 10240]     NONE
 - 168: [  2560,     1]     NONE
 - 169: [  2560,  2560]     NONE
 - 170: [  2560,  2560]     NONE
 - 171: [  2560,     1]     NONE
 - 172: [  2560,     1]     NONE
 - 173: [  2560,     1]     NONE
 - 174: [  2560,     1]     NONE
 - 175: [ 10240,     1]     NONE
 - 176: [  2560,     1]     NONE
 - 177: [  2560,     1]     NONE
 - 178: [  2560,     1]     NONE
 - 179: [  2560,  2560]     NONE
 - 180: [  2560,     1]     NONE
 - 181: [  2560,  2560]     NONE
 - 182: [  2560,     1]     NONE
 - 183: [ 10240,  2560]     NONE
 - 184: [  2560, 10240]     NONE
 - 185: [  2560,     1]     NONE
 - 186: [  2560,  2560]     NONE
 - 187: [  2560,  2560]     NONE
 - 188: [  2560,     1]     NONE
 - 189: [  2560,     1]     NONE
 - 190: [  2560,     1]     NONE
 - 191: [  2560,     1]     NONE
 - 192: [ 10240,     1]     NONE
 - 193: [  2560,     1]     NONE
 - 194: [  2560,     1]     NONE
 - 195: [  2560,     1]     NONE
 - 196: [  2560,  2560]     NONE
 - 197: [  2560,     1]     NONE
 - 198: [  2560,  2560]     NONE
 - 199: [  2560,     1]     NONE
 - 200: [ 10240,  2560]     NONE
 - 201: [  2560, 10240]     NONE
 - 202: [  2560,     1]     NONE
 - 203: [  2560,  2560]     NONE
 - 204: [  2560,  2560]     NONE
 - 205: [  2560,     1]     NONE
 - 206: [  2560,     1]     NONE
 - 207: [  2560,     1]     NONE
 - 208: [  2560,     1]     NONE
 - 209: [ 10240,     1]     NONE
 - 210: [  2560,     1]     NONE
 - 211: [  2560,     1]     NONE
 - 212: [  2560,     1]     NONE
 - 213: [  2560,  2560]     NONE
 - 214: [  2560,     1]     NONE
 - 215: [  2560,  2560]     NONE
 - 216: [  2560,     1]     NONE
 - 217: [ 10240,  2560]     NONE
 - 218: [  2560, 10240]     NONE
 - 219: [  2560,     1]     NONE
 - 220: [  2560,  2560]     NONE
 - 221: [  2560,  2560]     NONE
 - 222: [  2560,     1]     NONE
 - 223: [  2560,     1]     NONE
 - 224: [  2560,     1]     NONE
 - 225: [  2560,     1]     NONE
 - 226: [ 10240,     1]     NONE
 - 227: [  2560,     1]     NONE
 - 228: [  2560,     1]     NONE
 - 229: [  2560,     1]     NONE
 - 230: [  2560,  2560]     NONE
 - 231: [  2560,     1]     NONE
 - 232: [  2560,  2560]     NONE
 - 233: [  2560,     1]     NONE
 - 234: [ 10240,  2560]     NONE
 - 235: [  2560, 10240]     NONE
 - 236: [  2560,     1]     NONE
 - 237: [  2560,  2560]     NONE
 - 238: [  2560,  2560]     NONE
 - 239: [  2560,     1]     NONE
 - 240: [  2560,     1]     NONE
 - 241: [  2560,     1]     NONE
 - 242: [  2560,     1]     NONE
 - 243: [ 10240,     1]     NONE
 - 244: [  2560,     1]     NONE
 - 245: [  2560,     1]     NONE
 - 246: [  2560,     1]     NONE
 - 247: [  2560,  2560]     NONE
 - 248: [  2560,     1]     NONE
 - 249: [  2560,  2560]     NONE
 - 250: [  2560,     1]     NONE
 - 251: [ 10240,  2560]     NONE
 - 252: [  2560, 10240]     NONE
 - 253: [  2560,     1]     NONE
 - 254: [  2560,  2560]     NONE
 - 255: [  2560,  2560]     NONE
 - 256: [  2560,     1]     NONE
 - 257: [  2560,     1]     NONE
 - 258: [  2560,     1]     NONE
 - 259: [  2560,     1]     NONE
 - 260: [ 10240,     1]     NONE
 - 261: [  2560,     1]     NONE
 - 262: [  2560,     1]     NONE
 - 263: [  2560,     1]     NONE
 - 264: [  2560,  2560]     NONE
 - 265: [  2560,     1]     NONE
 - 266: [  2560,  2560]     NONE
 - 267: [  2560,     1]     NONE
 - 268: [ 10240,  2560]     NONE
 - 269: [  2560, 10240]     NONE
 - 270: [  2560,     1]     NONE
 - 271: [  2560,  2560]     NONE
 - 272: [  2560,  2560]     NONE
 - 273: [  2560,     1]     NONE
 - 274: [  2560,     1]     NONE
 - 275: [  2560,     1]     NONE
 - 276: [  2560,     1]     NONE
 - 277: [ 10240,     1]     NONE
 - 278: [  2560,     1]     NONE
 - 279: [  2560,     1]     NONE
 - 280: [  2560,     1]     NONE
 - 281: [  2560,  2560]     NONE
 - 282: [  2560,     1]     NONE
 - 283: [  2560,  2560]     NONE
 - 284: [  2560,     1]     NONE
 - 285: [ 10240,  2560]     NONE
 - 286: [  2560, 10240]     NONE
 - 287: [  2560,     1]     NONE
 - 288: [  2560,  2560]     NONE
 - 289: [  2560,  2560]     NONE
 - 290: [  2560,     1]     NONE
 - 291: [  2560,     1]     NONE
 - 292: [  2560,     1]     NONE
 - 293: [  2560,     1]     NONE
 - 294: [ 10240,     1]     NONE
 - 295: [  2560,     1]     NONE
 - 296: [  2560,     1]     NONE
 - 297: [  2560,     1]     NONE
 - 298: [  2560,  2560]     NONE
 - 299: [  2560,     1]     NONE
 - 300: [  2560,  2560]     NONE
 - 301: [  2560,     1]     NONE
 - 302: [ 10240,  2560]     NONE
 - 303: [  2560, 10240]     NONE
 - 304: [  2560,     1]     NONE
 - 305: [  2560,  2560]     NONE
 - 306: [  2560,  2560]     NONE
 - 307: [  2560,     1]     NONE
 - 308: [  2560,     1]     NONE
 - 309: [  2560,     1]     NONE
 - 310: [  2560,     1]     NONE
 - 311: [ 10240,     1]     NONE
 - 312: [  2560,     1]     NONE
 - 313: [  2560,     1]     NONE
 - 314: [  2560,     1]     NONE
 - 315: [  2560,  2560]     NONE
 - 316: [  2560,     1]     NONE
 - 317: [  2560,  2560]     NONE
 - 318: [  2560,     1]     NONE
 - 319: [ 10240,  2560]     NONE
 - 320: [  2560, 10240]     NONE
 - 321: [  2560,     1]     NONE
 - 322: [  2560,  2560]     NONE
 - 323: [  2560,  2560]     NONE
 - 324: [  2560,     1]     NONE
 - 325: [  2560,     1]     NONE
 - 326: [  2560,     1]     NONE
 - 327: [  2560,     1]     NONE
 - 328: [ 10240,     1]     NONE
 - 329: [  2560,     1]     NONE
 - 330: [  2560,     1]     NONE
 - 331: [  2560,     1]     NONE
 - 332: [  2560,  2560]     NONE
 - 333: [  2560,     1]     NONE
 - 334: [  2560,  2560]     NONE
 - 335: [  2560,     1]     NONE
 - 336: [ 10240,  2560]     NONE
 - 337: [  2560, 10240]     NONE
 - 338: [  2560,     1]     NONE
 - 339: [  2560,  2560]     NONE
 - 340: [  2560,  2560]     NONE
 - 341: [  2560,     1]     NONE
 - 342: [  2560,     1]     NONE
 - 343: [  2560,     1]     NONE
 - 344: [  2560,     1]     NONE
 - 345: [ 10240,     1]     NONE
 - 346: [  2560,     1]     NONE
 - 347: [  2560,     1]     NONE
 - 348: [  2560,     1]     NONE
 - 349: [  2560,  2560]     NONE
 - 350: [  2560,     1]     NONE
 - 351: [  2560,  2560]     NONE
 - 352: [  2560,     1]     NONE
 - 353: [ 10240,  2560]     NONE
 - 354: [  2560, 10240]     NONE
 - 355: [  2560,     1]     NONE
 - 356: [  2560,  2560]     NONE
 - 357: [  2560,  2560]     NONE
 - 358: [  2560,     1]     NONE
 - 359: [  2560,     1]     NONE
 - 360: [  2560,     1]     NONE
 - 361: [  2560,     1]     NONE
 - 362: [ 10240,     1]     NONE
 - 363: [  2560,     1]     NONE
 - 364: [  2560,     1]     NONE
 - 365: [  2560,     1]     NONE
 - 366: [  2560,  2560]     NONE
 - 367: [  2560,     1]     NONE
 - 368: [  2560,  2560]     NONE
 - 369: [  2560,     1]     NONE
 - 370: [ 10240,  2560]     NONE
 - 371: [  2560, 10240]     NONE
 - 372: [  2560,     1]     NONE
 - 373: [  2560,  2560]     NONE
 - 374: [  2560,  2560]     NONE
 - 375: [  2560,     1]     NONE
 - 376: [  2560,     1]     NONE
 - 377: [  2560,     1]     NONE
 - 378: [  2560,     1]     NONE
 - 379: [ 10240,     1]     NONE
 - 380: [  2560,     1]     NONE
 - 381: [  2560,     1]     NONE
 - 382: [  2560,     1]     NONE
 - 383: [  2560,  2560]     NONE
 - 384: [  2560,     1]     NONE
 - 385: [  2560,  2560]     NONE
 - 386: [  2560,     1]     NONE
 - 387: [ 10240,  2560]     NONE
 - 388: [  2560, 10240]     NONE
 - 389: [  2560,     1]     NONE
 - 390: [  2560,  2560]     NONE
 - 391: [  2560,  2560]     NONE
 - 392: [  2560,     1]     NONE
 - 393: [  2560,     1]     NONE
 - 394: [  2560,     1]     NONE
 - 395: [  2560,     1]     NONE
 - 396: [ 10240,     1]     NONE
 - 397: [  2560,     1]     NONE
 - 398: [  2560,     1]     NONE
 - 399: [  2560,     1]     NONE
 - 400: [  2560,  2560]     NONE
 - 401: [  2560,     1]     NONE
 - 402: [  2560,  2560]     NONE
 - 403: [  2560,     1]     NONE
 - 404: [ 10240,  2560]     NONE
 - 405: [  2560, 10240]     NONE
 - 406: [  2560,     1]     NONE
 - 407: [  2560,  2560]     NONE
 - 408: [  2560,  2560]     NONE
 - 409: [  2560,     1]     NONE
 - 410: [  2560,     1]     NONE
 - 411: [  2560,     1]     NONE
 - 412: [  2560,     1]     NONE
 - 413: [ 10240,     1]     NONE
 - 414: [  2560,     1]     NONE
 - 415: [  2560,     1]     NONE
 - 416: [  2560,     1]     NONE
 - 417: [  2560,  2560]     NONE
 - 418: [  2560,     1]     NONE
 - 419: [  2560,  2560]     NONE
 - 420: [  2560,     1]     NONE
 - 421: [ 10240,  2560]     NONE
 - 422: [  2560, 10240]     NONE
 - 423: [  2560,     1]     NONE
 - 424: [  2560,  2560]     NONE
 - 425: [  2560,  2560]     NONE
 - 426: [  2560,     1]     NONE
 - 427: [  2560,     1]     NONE
 - 428: [  2560,     1]     NONE
 - 429: [  2560,     1]     NONE
 - 430: [ 10240,     1]     NONE
 - 431: [  2560,     1]     NONE
 - 432: [  2560,     1]     NONE
 - 433: [  2560,     1]     NONE
 - 434: [  2560,  2560]     NONE
 - 435: [  2560,     1]     NONE
 - 436: [  2560,  2560]     NONE
 - 437: [  2560,     1]     NONE
 - 438: [ 10240,  2560]     NONE
 - 439: [  2560, 10240]     NONE
 - 440: [  2560,     1]     NONE
 - 441: [  2560,  2560]     NONE
 - 442: [  2560,  2560]     NONE
 - 443: [  2560,     1]     NONE
 - 444: [  2560,     1]     NONE
 - 445: [  2560,     1]     NONE
 - 446: [  2560,     1]     NONE
 - 447: [ 10240,     1]     NONE
 - 448: [  2560,     1]     NONE
 - 449: [  2560,     1]     NONE
 - 450: [  2560,     1]     NONE
 - 451: [  2560,  2560]     NONE
 - 452: [  2560,     1]     NONE
 - 453: [  2560,  2560]     NONE
 - 454: [  2560,     1]     NONE
 - 455: [ 10240,  2560]     NONE
 - 456: [  2560, 10240]     NONE
 - 457: [  2560,     1]     NONE
 - 458: [  2560,  2560]     NONE
 - 459: [  2560,  2560]     NONE
 - 460: [  2560,     1]     NONE
 - 461: [  2560,     1]     NONE
 - 462: [  2560,     1]     NONE
 - 463: [  2560,     1]     NONE
 - 464: [ 10240,     1]     NONE
 - 465: [  2560,     1]     NONE
 - 466: [  2560,     1]     NONE
 - 467: [  2560,     1]     NONE
 - 468: [  2560,  2560]     NONE
 - 469: [  2560,     1]     NONE
 - 470: [  2560,  2560]     NONE
 - 471: [  2560,     1]     NONE
 - 472: [ 10240,  2560]     NONE
 - 473: [  2560, 10240]     NONE
 - 474: [  2560,     1]     NONE
 - 475: [  2560,  2560]     NONE
 - 476: [  2560,  2560]     NONE
 - 477: [  2560,     1]     NONE
 - 478: [  2560,     1]     NONE
 - 479: [  2560,     1]     NONE
 - 480: [  2560,     1]     NONE
 - 481: [ 10240,     1]     NONE
 - 482: [  2560,     1]     NONE
 - 483: [  2560,     1]     NONE
 - 484: [  2560,     1]     NONE
 - 485: [  2560,  2560]     NONE
 - 486: [  2560,     1]     NONE
 - 487: [  2560,  2560]     NONE
 - 488: [  2560,     1]     NONE
 - 489: [ 10240,  2560]     NONE
 - 490: [  2560, 10240]     NONE
 - 491: [  2560,     1]     NONE
 - 492: [  2560,  2560]     NONE
 - 493: [  2560,  2560]     NONE
 - 494: [  2560,     1]     NONE
 - 495: [  2560,     1]     NONE
 - 496: [  2560,     1]     NONE
 - 497: [  2560,     1]     NONE
 - 498: [ 10240,     1]     NONE
 - 499: [  2560,     1]     NONE
 - 500: [  2560,     1]     NONE
 - 501: [  2560,     1]     NONE
 - 502: [  2560,  2560]     NONE
 - 503: [  2560,     1]     NONE
 - 504: [  2560,  2560]     NONE
 - 505: [  2560,     1]     NONE
 - 506: [ 10240,  2560]     NONE
 - 507: [  2560, 10240]     NONE
 - 508: [  2560,     1]     NONE
 - 509: [  2560,  2560]     NONE
 - 510: [  2560,  2560]     NONE
 - 511: [  2560,     1]     NONE
 - 512: [  2560,     1]     NONE
 - 513: [  2560,     1]     NONE
 - 514: [  2560,     1]     NONE
 - 515: [ 10240,     1]     NONE
 - 516: [  2560,     1]     NONE
 - 517: [  2560,     1]     NONE
 - 518: [  2560,     1]     NONE
 - 519: [  2560,  2560]     NONE
 - 520: [  2560,     1]     NONE
 - 521: [  2560,  2560]     NONE
 - 522: [  2560,     1]     NONE
 - 523: [ 10240,  2560]     NONE
 - 524: [  2560, 10240]     NONE
 - 525: [  2560,     1]     NONE
 - 526: [  2560,  2560]     NONE
 - 527: [  2560,  2560]     NONE
 - 528: [  2560,     1]     NONE
 - 529: [  2560,     1]     NONE
 - 530: [  2560,     1]     NONE
 - 531: [  2560,     1]     NONE
 - 532: [ 10240,     1]     NONE
 - 533: [  2560,     1]     NONE
 - 534: [  2560,     1]     NONE
 - 535: [  2560,     1]     NONE
 - 536: [  2560,  2560]     NONE
 - 537: [  2560,     1]     NONE
 - 538: [  2560, 102400]     NONE
 - 539: [  2560,     1]     NONE
 - 540: [ 10240,  2560]     NONE
 - 541: [  2560, 10240]     NONE
 - 542: [  2560,     1]     NONE
 - 543: [  2560,  2560]     NONE
 - 544: [  2560,  2560]     NONE
 - 545: [  2560,     1]     NONE
 - 546: [  2560,     1]     NONE
 - 547: [  2560,     1]     NONE
 - 548: [  2560,     1]     NONE
 - 549: [ 10240,     1]     NONE
 - 550: [  2560,     1]     NONE
 - 551: [  2560,     1]     NONE
perf_total_per_op_us[             ADD] =   0.321 ms
perf_total_per_op_us[             MUL] =   0.065 ms
perf_total_per_op_us[            NORM] =   0.065 ms
perf_total_per_op_us[         MUL_MAT] =   0.257 ms
perf_total_per_op_us[           SCALE] =   0.032 ms
perf_total_per_op_us[             CPY] =   0.096 ms
perf_total_per_op_us[         RESHAPE] =   0.096 ms
perf_total_per_op_us[            VIEW] =   0.128 ms
perf_total_per_op_us[         PERMUTE] =   0.064 ms
perf_total_per_op_us[       TRANSPOSE] =   0.032 ms
perf_total_per_op_us[        GET_ROWS] =   0.001 ms
perf_total_per_op_us[   DIAG_MASK_INF] =   0.032 ms
perf_total_per_op_us[        SOFT_MAX] =   0.032 ms
perf_total_per_op_us[            ROPE] =   0.064 ms
perf_total_per_op_us[           UNARY] =   0.032 ms
========================================
user=== GRAPH ===
n_nodes = 1317
 -   0: [  2560,     1,     1]         GET_ROWS   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   1: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   2: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   3: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   4: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   5: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   6: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   7: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   8: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   9: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  10: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  11: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  12: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  13: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  14: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  15: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  16: [    12,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  17: [   128,    12,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  18: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  19: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  20: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  21: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  22: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  23: [    12,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  24: [    12,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  25: [    12,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  26: [    12,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  27: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  28: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  29: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  30: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  31: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  32: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  33: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  34: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  35: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  36: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  37: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  38: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  39: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  40: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  41: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  42: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  43: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  44: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  45: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  46: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  47: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  48: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  49: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  50: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  51: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  52: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  53: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  54: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  55: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  56: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  57: [    12,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  58: [   128,    12,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  59: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  60: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  61: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  62: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  63: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  64: [    12,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  65: [    12,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  66: [    12,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  67: [    12,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  68: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  69: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  70: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  71: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  72: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  73: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  74: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  75: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  76: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  77: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  78: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  79: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  80: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  81: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  82: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  83: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  84: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  85: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  86: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  87: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  88: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  89: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  90: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  91: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  92: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  93: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  94: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  95: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  96: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  97: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  98: [    12,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  99: [   128,    12,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 100: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 102: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 103: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 104: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 105: [    12,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 106: [    12,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 107: [    12,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 108: [    12,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 109: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 110: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 111: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 112: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 113: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 114: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 115: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 116: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 117: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 118: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 119: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 120: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 121: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 122: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 123: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 124: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 125: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 127: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 128: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 129: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 130: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 131: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 132: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 133: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 134: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 135: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 136: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 137: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 138: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 139: [    12,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 140: [   128,    12,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 141: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 143: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 144: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 145: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 146: [    12,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 147: [    12,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 148: [    12,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 149: [    12,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 150: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 151: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 152: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 153: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 154: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 155: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 156: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 157: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 158: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 159: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 160: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 161: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 162: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 163: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 164: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 165: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 166: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 168: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 169: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 170: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 171: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 172: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 173: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 174: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 175: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 176: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 177: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 178: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 179: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 180: [    12,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 181: [   128,    12,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 182: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 184: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 185: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 186: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 187: [    12,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 188: [    12,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 189: [    12,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 190: [    12,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 191: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 192: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 193: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 194: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 195: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 196: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 197: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 198: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 199: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 200: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 201: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 202: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 203: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 204: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 205: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 206: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 207: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 209: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 210: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 211: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 212: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 213: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 214: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 215: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 216: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 217: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 218: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 219: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 220: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 221: [    12,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 222: [   128,    12,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 223: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 225: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 226: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 227: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 228: [    12,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 229: [    12,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 230: [    12,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 231: [    12,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 232: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 233: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 234: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 235: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 236: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 237: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 238: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 239: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 240: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 241: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 242: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 243: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 244: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 245: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 246: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 247: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 248: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 250: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 251: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 252: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 253: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 254: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 255: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 256: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 257: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 258: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 259: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 260: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 261: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 262: [    12,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 263: [   128,    12,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 264: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 266: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 267: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 268: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 269: [    12,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 270: [    12,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 271: [    12,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 272: [    12,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 273: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 274: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 275: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 276: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 277: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 278: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 279: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 280: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 281: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 282: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 283: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 284: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 285: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 286: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 287: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 288: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 289: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 291: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 292: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 293: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 294: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 295: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 296: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 297: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 298: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 299: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 300: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 301: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 302: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 303: [    12,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 304: [   128,    12,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 305: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 307: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 308: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 309: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 310: [    12,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 311: [    12,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 312: [    12,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 313: [    12,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 314: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 315: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 316: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 317: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 318: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 319: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 320: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 321: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 322: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 323: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 324: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 325: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 326: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 327: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 328: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 329: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 330: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 331: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 332: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 333: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 334: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 335: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 336: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 337: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 338: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 339: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 340: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 341: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 342: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 343: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 344: [    12,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 345: [   128,    12,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 346: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 347: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 348: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 349: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 350: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 351: [    12,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 352: [    12,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 353: [    12,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 354: [    12,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 355: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 356: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 357: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 358: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 359: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 360: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 361: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 362: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 363: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 364: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 365: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 366: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 367: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 368: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 369: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 370: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 371: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 372: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 373: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 374: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 375: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 376: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 377: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 378: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 379: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 380: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 381: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 382: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 383: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 384: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 385: [    12,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 386: [   128,    12,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 387: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 388: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 389: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 390: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 391: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 392: [    12,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 393: [    12,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 394: [    12,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 395: [    12,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 396: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 397: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 398: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 399: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 400: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 401: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 402: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 403: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 404: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 405: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 406: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 407: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 408: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 409: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 410: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 411: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 412: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 413: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 414: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 415: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 416: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 417: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 418: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 419: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 420: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 421: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 422: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 423: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 424: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 425: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 426: [    12,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 427: [   128,    12,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 428: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 429: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 430: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 431: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 432: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 433: [    12,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 434: [    12,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 435: [    12,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 436: [    12,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 437: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 438: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 439: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 440: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 441: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 442: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 443: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 444: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 445: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 446: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 447: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 448: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 449: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 450: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 451: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 452: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 453: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 454: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 455: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 456: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 457: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 458: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 459: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 460: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 461: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 462: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 463: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 464: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 465: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 466: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 467: [    12,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 468: [   128,    12,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 469: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 470: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 471: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 472: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 473: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 474: [    12,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 475: [    12,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 476: [    12,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 477: [    12,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 478: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 479: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 480: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 481: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 482: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 483: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 484: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 485: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 486: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 487: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 488: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 489: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 490: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 491: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 492: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 493: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 494: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 495: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 496: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 497: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 498: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 499: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 500: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 501: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 502: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 503: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 504: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 505: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 506: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 507: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 508: [    12,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 509: [   128,    12,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 510: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 511: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 512: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 513: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 514: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 515: [    12,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 516: [    12,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 517: [    12,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 518: [    12,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 519: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 520: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 521: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 522: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 523: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 524: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 525: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 526: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 527: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 528: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 529: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 530: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 531: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 532: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 533: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 534: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 535: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 536: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 537: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 538: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 539: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 540: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 541: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 542: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 543: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 544: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 545: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 546: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 547: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 548: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 549: [    12,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 550: [   128,    12,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 551: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 552: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 553: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 554: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 555: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 556: [    12,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 557: [    12,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 558: [    12,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 559: [    12,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 560: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 561: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 562: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 563: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 564: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 565: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 566: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 567: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 568: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 569: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 570: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 571: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 572: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 573: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 574: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 575: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 576: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 577: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 578: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 579: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 580: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 581: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 582: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 583: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 584: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 585: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 586: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 587: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 588: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 589: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 590: [    12,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 591: [   128,    12,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 592: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 593: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 594: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 595: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 596: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 597: [    12,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 598: [    12,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 599: [    12,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 600: [    12,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 601: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 602: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 603: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 604: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 605: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 606: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 607: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 608: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 609: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 610: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 611: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 612: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 613: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 614: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 615: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 616: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 617: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 618: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 619: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 620: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 621: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 622: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 623: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 624: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 625: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 626: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 627: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 628: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 629: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 630: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 631: [    12,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 632: [   128,    12,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 633: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 634: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 635: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 636: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 637: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 638: [    12,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 639: [    12,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 640: [    12,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 641: [    12,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 642: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 643: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 644: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 645: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 646: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 647: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 648: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 649: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 650: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 651: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 652: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 653: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 654: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 655: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 656: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 657: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 658: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 659: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 660: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 661: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 662: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 663: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 664: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 665: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 666: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 667: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 668: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 669: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 670: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 671: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 672: [    12,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 673: [   128,    12,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 674: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 675: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 676: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 677: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 678: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 679: [    12,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 680: [    12,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 681: [    12,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 682: [    12,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 683: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 684: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 685: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 686: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 687: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 688: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 689: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 690: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 691: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 692: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 693: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 694: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 695: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 696: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 697: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 698: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 699: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 700: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 701: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 702: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 703: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 704: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 705: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 706: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 707: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 708: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 709: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 710: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 711: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 712: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 713: [    12,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 714: [   128,    12,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 715: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 716: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 717: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 718: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 719: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 720: [    12,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 721: [    12,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 722: [    12,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 723: [    12,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 724: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 725: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 726: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 727: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 728: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 729: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 730: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 731: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 732: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 733: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 734: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 735: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 736: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 737: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 738: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 739: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 740: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 741: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 742: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 743: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 744: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 745: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 746: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 747: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 748: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 749: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 750: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 751: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 752: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 753: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 754: [    12,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 755: [   128,    12,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 756: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 757: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 758: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 759: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 760: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 761: [    12,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 762: [    12,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 763: [    12,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 764: [    12,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 765: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 766: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 767: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 768: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 769: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 770: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 771: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 772: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 773: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 774: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 775: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 776: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 777: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 778: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 779: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 780: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 781: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 782: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 783: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 784: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 785: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 786: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 787: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 788: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 789: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 790: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 791: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 792: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 793: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 794: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 795: [    12,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 796: [   128,    12,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 797: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 798: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 799: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 800: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 801: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 802: [    12,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 803: [    12,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 804: [    12,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 805: [    12,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 806: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 807: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 808: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 809: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 810: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 811: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 812: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 813: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 814: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 815: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 816: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 817: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 818: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 819: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 820: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 821: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 822: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 823: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 824: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 825: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 826: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 827: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 828: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 829: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 830: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 831: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 832: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 833: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 834: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 835: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 836: [    12,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 837: [   128,    12,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 838: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 839: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 840: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 841: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 842: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 843: [    12,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 844: [    12,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 845: [    12,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 846: [    12,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 847: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 848: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 849: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 850: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 851: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 852: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 853: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 854: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 855: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 856: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 857: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 858: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 859: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 860: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 861: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 862: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 863: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 864: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 865: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 866: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 867: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 868: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 869: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 870: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 871: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 872: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 873: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 874: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 875: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 876: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 877: [    12,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 878: [   128,    12,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 879: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 880: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 881: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 882: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 883: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 884: [    12,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 885: [    12,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 886: [    12,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 887: [    12,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 888: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 889: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 890: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 891: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 892: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 893: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 894: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 895: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 896: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 897: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 898: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 899: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 900: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 901: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 902: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 903: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 904: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 905: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 906: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 907: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 908: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 909: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 910: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 911: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 912: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 913: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 914: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 915: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 916: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 917: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 918: [    12,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 919: [   128,    12,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 920: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 921: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 922: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 923: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 924: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 925: [    12,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 926: [    12,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 927: [    12,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 928: [    12,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 929: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 930: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 931: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 932: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 933: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 934: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 935: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 936: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 937: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 938: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 939: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 940: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 941: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 942: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 943: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 944: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 945: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 946: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 947: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 948: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 949: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 950: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 951: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 952: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 953: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 954: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 955: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 956: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 957: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 958: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 959: [    12,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 960: [   128,    12,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 961: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 962: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 963: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 964: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 965: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 966: [    12,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 967: [    12,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 968: [    12,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 969: [    12,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 970: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 971: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 972: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 973: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 974: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 975: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 976: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 977: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 978: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 979: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 980: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 981: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 982: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 983: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 984: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 985: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 986: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 987: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 988: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 989: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 990: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 991: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 992: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 993: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 994: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 995: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 996: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 997: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 998: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 999: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1000: [    12,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1001: [   128,    12,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1002: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1003: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1004: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1005: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1006: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1007: [    12,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1008: [    12,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1009: [    12,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1010: [    12,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1011: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1012: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1013: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1014: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1015: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1016: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1017: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1018: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1019: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1020: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1021: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1022: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1023: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1024: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1025: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1026: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1027: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1028: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1029: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1030: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1031: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1032: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1033: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1034: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1035: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1036: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1037: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1038: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1039: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1040: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1041: [    12,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1042: [   128,    12,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1043: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1044: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1045: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1046: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1047: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1048: [    12,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1049: [    12,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1050: [    12,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1051: [    12,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1052: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1053: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1054: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1055: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1056: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1057: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1058: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1059: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1060: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1061: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1062: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1063: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1064: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1065: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1066: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1067: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1068: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1069: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1070: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1071: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1072: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1073: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1074: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1075: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1076: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1077: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1078: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1079: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1080: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1081: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1082: [    12,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1083: [   128,    12,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1084: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1085: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1086: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1087: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1088: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1089: [    12,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1090: [    12,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1091: [    12,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1092: [    12,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1093: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1094: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1095: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1096: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1097: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1098: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1099: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1100: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1102: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1103: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1104: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1105: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1106: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1107: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1108: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1109: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1110: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1111: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1112: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1113: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1114: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1115: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1116: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1117: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1118: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1119: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1120: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1121: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1122: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1123: [    12,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1124: [   128,    12,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1125: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1127: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1128: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1129: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1130: [    12,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1131: [    12,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1132: [    12,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1133: [    12,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1134: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1135: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1136: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1137: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1138: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1139: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1140: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1141: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1143: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1144: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1145: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1146: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1147: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1148: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1149: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1150: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1151: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1152: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1153: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1154: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1155: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1156: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1157: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1158: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1159: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1160: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1161: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1162: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1163: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1164: [    12,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1165: [   128,    12,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1166: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1168: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1169: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1170: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1171: [    12,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1172: [    12,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1173: [    12,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1174: [    12,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1175: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1176: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1177: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1178: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1179: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1180: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1181: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1182: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1184: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1185: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1186: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1187: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1188: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1189: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1190: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1191: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1192: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1193: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1194: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1195: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1196: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1197: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1198: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1199: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1200: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1201: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1202: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1203: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1204: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1205: [    12,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1206: [   128,    12,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1207: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1209: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1210: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1211: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1212: [    12,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1213: [    12,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1214: [    12,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1215: [    12,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1216: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1217: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1218: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1219: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1220: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1221: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1222: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1223: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1225: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1226: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1227: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1228: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1229: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1230: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1231: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1232: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1233: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1234: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1235: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1236: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1237: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1238: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1239: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1240: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1241: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1242: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1243: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1244: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1245: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1246: [    12,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1247: [   128,    12,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1248: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1250: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1251: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1252: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1253: [    12,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1254: [    12,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1255: [    12,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1256: [    12,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1257: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1258: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1259: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1260: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1261: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1262: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1263: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1264: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1266: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1267: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1268: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1269: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1270: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1271: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1272: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1273: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1274: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1275: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1276: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1277: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1278: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1279: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1280: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1281: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1282: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1283: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1284: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1285: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1286: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1287: [    12,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1288: [   128,    12,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1289: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1291: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1292: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1293: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1294: [    12,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1295: [    12,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1296: [    12,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1297: [    12,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1298: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1299: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1300: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1301: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1302: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1303: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1304: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1305: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1307: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1308: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1309: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1310: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1311: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1312: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1313: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1314: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1315: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1316: [ 102400,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
n_leafs = 552
 -   0: [  2560,  2560]     NONE
 -   1: [  2560,     1]     NONE
 -   2: [  2560, 102400]     NONE
 -   3: [     1,     1]     NONE
 -   4: [  2560,     1]     NONE
 -   5: [  2560,     1]     NONE
 -   6: [ 41943040,     1]     NONE
 -   7: [  2560,  2560]     NONE
 -   8: [  2560,     1]     NONE
 -   9: [ 41943040,     1]     NONE
 -  10: [  2560,  2560]     NONE
 -  11: [  2560,     1]     NONE
 -  12: [ 10240,  2560]     NONE
 -  13: [  2560, 10240]     NONE
 -  14: [  2560,     1]     NONE
 -  15: [  2560,  2560]     NONE
 -  16: [  2560,  2560]     NONE
 -  17: [  2560,     1]     NONE
 -  18: [     1,     1]     NONE
 -  19: [  2560,     1]     NONE
 -  20: [  2560,     1]     NONE
 -  21: [  2560,     1]     NONE
 -  22: [ 10240,     1]     NONE
 -  23: [  2560,     1]     NONE
 -  24: [  2560,     1]     NONE
 -  25: [  2560,     1]     NONE
 -  26: [  2560,  2560]     NONE
 -  27: [  2560,     1]     NONE
 -  28: [  2560,  2560]     NONE
 -  29: [  2560,     1]     NONE
 -  30: [ 10240,  2560]     NONE
 -  31: [  2560, 10240]     NONE
 -  32: [  2560,     1]     NONE
 -  33: [  2560,  2560]     NONE
 -  34: [  2560,  2560]     NONE
 -  35: [  2560,     1]     NONE
 -  36: [  2560,     1]     NONE
 -  37: [  2560,     1]     NONE
 -  38: [  2560,     1]     NONE
 -  39: [ 10240,     1]     NONE
 -  40: [  2560,     1]     NONE
 -  41: [  2560,     1]     NONE
 -  42: [  2560,     1]     NONE
 -  43: [  2560,  2560]     NONE
 -  44: [  2560,     1]     NONE
 -  45: [  2560,  2560]     NONE
 -  46: [  2560,     1]     NONE
 -  47: [ 10240,  2560]     NONE
 -  48: [  2560, 10240]     NONE
 -  49: [  2560,     1]     NONE
 -  50: [  2560,  2560]     NONE
 -  51: [  2560,  2560]     NONE
 -  52: [  2560,     1]     NONE
 -  53: [  2560,     1]     NONE
 -  54: [  2560,     1]     NONE
 -  55: [  2560,     1]     NONE
 -  56: [ 10240,     1]     NONE
 -  57: [  2560,     1]     NONE
 -  58: [  2560,     1]     NONE
 -  59: [  2560,     1]     NONE
 -  60: [  2560,  2560]     NONE
 -  61: [  2560,     1]     NONE
 -  62: [  2560,  2560]     NONE
 -  63: [  2560,     1]     NONE
 -  64: [ 10240,  2560]     NONE
 -  65: [  2560, 10240]     NONE
 -  66: [  2560,     1]     NONE
 -  67: [  2560,  2560]     NONE
 -  68: [  2560,  2560]     NONE
 -  69: [  2560,     1]     NONE
 -  70: [  2560,     1]     NONE
 -  71: [  2560,     1]     NONE
 -  72: [  2560,     1]     NONE
 -  73: [ 10240,     1]     NONE
 -  74: [  2560,     1]     NONE
 -  75: [  2560,     1]     NONE
 -  76: [  2560,     1]     NONE
 -  77: [  2560,  2560]     NONE
 -  78: [  2560,     1]     NONE
 -  79: [  2560,  2560]     NONE
 -  80: [  2560,     1]     NONE
 -  81: [ 10240,  2560]     NONE
 -  82: [  2560, 10240]     NONE
 -  83: [  2560,     1]     NONE
 -  84: [  2560,  2560]     NONE
 -  85: [  2560,  2560]     NONE
 -  86: [  2560,     1]     NONE
 -  87: [  2560,     1]     NONE
 -  88: [  2560,     1]     NONE
 -  89: [  2560,     1]     NONE
 -  90: [ 10240,     1]     NONE
 -  91: [  2560,     1]     NONE
 -  92: [  2560,     1]     NONE
 -  93: [  2560,     1]     NONE
 -  94: [  2560,  2560]     NONE
 -  95: [  2560,     1]     NONE
 -  96: [  2560,  2560]     NONE
 -  97: [  2560,     1]     NONE
 -  98: [ 10240,  2560]     NONE
 -  99: [  2560, 10240]     NONE
 - 100: [  2560,     1]     NONE
 - 101: [  2560,  2560]     NONE
 - 102: [  2560,  2560]     NONE
 - 103: [  2560,     1]     NONE
 - 104: [  2560,     1]     NONE
 - 105: [  2560,     1]     NONE
 - 106: [  2560,     1]     NONE
 - 107: [ 10240,     1]     NONE
 - 108: [  2560,     1]     NONE
 - 109: [  2560,     1]     NONE
 - 110: [  2560,     1]     NONE
 - 111: [  2560,  2560]     NONE
 - 112: [  2560,     1]     NONE
 - 113: [  2560,  2560]     NONE
 - 114: [  2560,     1]     NONE
 - 115: [ 10240,  2560]     NONE
 - 116: [  2560, 10240]     NONE
 - 117: [  2560,     1]     NONE
 - 118: [  2560,  2560]     NONE
 - 119: [  2560,  2560]     NONE
 - 120: [  2560,     1]     NONE
 - 121: [  2560,     1]     NONE
 - 122: [  2560,     1]     NONE
 - 123: [  2560,     1]     NONE
 - 124: [ 10240,     1]     NONE
 - 125: [  2560,     1]     NONE
 - 126: [  2560,     1]     NONE
 - 127: [  2560,     1]     NONE
 - 128: [  2560,  2560]     NONE
 - 129: [  2560,     1]     NONE
 - 130: [  2560,  2560]     NONE
 - 131: [  2560,     1]     NONE
 - 132: [ 10240,  2560]     NONE
 - 133: [  2560, 10240]     NONE
 - 134: [  2560,     1]     NONE
 - 135: [  2560,  2560]     NONE
 - 136: [  2560,  2560]     NONE
 - 137: [  2560,     1]     NONE
 - 138: [  2560,     1]     NONE
 - 139: [  2560,     1]     NONE
 - 140: [  2560,     1]     NONE
 - 141: [ 10240,     1]     NONE
 - 142: [  2560,     1]     NONE
 - 143: [  2560,     1]     NONE
 - 144: [  2560,     1]     NONE
 - 145: [  2560,  2560]     NONE
 - 146: [  2560,     1]     NONE
 - 147: [  2560,  2560]     NONE
 - 148: [  2560,     1]     NONE
 - 149: [ 10240,  2560]     NONE
 - 150: [  2560, 10240]     NONE
 - 151: [  2560,     1]     NONE
 - 152: [  2560,  2560]     NONE
 - 153: [  2560,  2560]     NONE
 - 154: [  2560,     1]     NONE
 - 155: [  2560,     1]     NONE
 - 156: [  2560,     1]     NONE
 - 157: [  2560,     1]     NONE
 - 158: [ 10240,     1]     NONE
 - 159: [  2560,     1]     NONE
 - 160: [  2560,     1]     NONE
 - 161: [  2560,     1]     NONE
 - 162: [  2560,  2560]     NONE
 - 163: [  2560,     1]     NONE
 - 164: [  2560,  2560]     NONE
 - 165: [  2560,     1]     NONE
 - 166: [ 10240,  2560]     NONE
 - 167: [  2560, 10240]     NONE
 - 168: [  2560,     1]     NONE
 - 169: [  2560,  2560]     NONE
 - 170: [  2560,  2560]     NONE
 - 171: [  2560,     1]     NONE
 - 172: [  2560,     1]     NONE
 - 173: [  2560,     1]     NONE
 - 174: [  2560,     1]     NONE
 - 175: [ 10240,     1]     NONE
 - 176: [  2560,     1]     NONE
 - 177: [  2560,     1]     NONE
 - 178: [  2560,     1]     NONE
 - 179: [  2560,  2560]     NONE
 - 180: [  2560,     1]     NONE
 - 181: [  2560,  2560]     NONE
 - 182: [  2560,     1]     NONE
 - 183: [ 10240,  2560]     NONE
 - 184: [  2560, 10240]     NONE
 - 185: [  2560,     1]     NONE
 - 186: [  2560,  2560]     NONE
 - 187: [  2560,  2560]     NONE
 - 188: [  2560,     1]     NONE
 - 189: [  2560,     1]     NONE
 - 190: [  2560,     1]     NONE
 - 191: [  2560,     1]     NONE
 - 192: [ 10240,     1]     NONE
 - 193: [  2560,     1]     NONE
 - 194: [  2560,     1]     NONE
 - 195: [  2560,     1]     NONE
 - 196: [  2560,  2560]     NONE
 - 197: [  2560,     1]     NONE
 - 198: [  2560,  2560]     NONE
 - 199: [  2560,     1]     NONE
 - 200: [ 10240,  2560]     NONE
 - 201: [  2560, 10240]     NONE
 - 202: [  2560,     1]     NONE
 - 203: [  2560,  2560]     NONE
 - 204: [  2560,  2560]     NONE
 - 205: [  2560,     1]     NONE
 - 206: [  2560,     1]     NONE
 - 207: [  2560,     1]     NONE
 - 208: [  2560,     1]     NONE
 - 209: [ 10240,     1]     NONE
 - 210: [  2560,     1]     NONE
 - 211: [  2560,     1]     NONE
 - 212: [  2560,     1]     NONE
 - 213: [  2560,  2560]     NONE
 - 214: [  2560,     1]     NONE
 - 215: [  2560,  2560]     NONE
 - 216: [  2560,     1]     NONE
 - 217: [ 10240,  2560]     NONE
 - 218: [  2560, 10240]     NONE
 - 219: [  2560,     1]     NONE
 - 220: [  2560,  2560]     NONE
 - 221: [  2560,  2560]     NONE
 - 222: [  2560,     1]     NONE
 - 223: [  2560,     1]     NONE
 - 224: [  2560,     1]     NONE
 - 225: [  2560,     1]     NONE
 - 226: [ 10240,     1]     NONE
 - 227: [  2560,     1]     NONE
 - 228: [  2560,     1]     NONE
 - 229: [  2560,     1]     NONE
 - 230: [  2560,  2560]     NONE
 - 231: [  2560,     1]     NONE
 - 232: [  2560,  2560]     NONE
 - 233: [  2560,     1]     NONE
 - 234: [ 10240,  2560]     NONE
 - 235: [  2560, 10240]     NONE
 - 236: [  2560,     1]     NONE
 - 237: [  2560,  2560]     NONE
 - 238: [  2560,  2560]     NONE
 - 239: [  2560,     1]     NONE
 - 240: [  2560,     1]     NONE
 - 241: [  2560,     1]     NONE
 - 242: [  2560,     1]     NONE
 - 243: [ 10240,     1]     NONE
 - 244: [  2560,     1]     NONE
 - 245: [  2560,     1]     NONE
 - 246: [  2560,     1]     NONE
 - 247: [  2560,  2560]     NONE
 - 248: [  2560,     1]     NONE
 - 249: [  2560,  2560]     NONE
 - 250: [  2560,     1]     NONE
 - 251: [ 10240,  2560]     NONE
 - 252: [  2560, 10240]     NONE
 - 253: [  2560,     1]     NONE
 - 254: [  2560,  2560]     NONE
 - 255: [  2560,  2560]     NONE
 - 256: [  2560,     1]     NONE
 - 257: [  2560,     1]     NONE
 - 258: [  2560,     1]     NONE
 - 259: [  2560,     1]     NONE
 - 260: [ 10240,     1]     NONE
 - 261: [  2560,     1]     NONE
 - 262: [  2560,     1]     NONE
 - 263: [  2560,     1]     NONE
 - 264: [  2560,  2560]     NONE
 - 265: [  2560,     1]     NONE
 - 266: [  2560,  2560]     NONE
 - 267: [  2560,     1]     NONE
 - 268: [ 10240,  2560]     NONE
 - 269: [  2560, 10240]     NONE
 - 270: [  2560,     1]     NONE
 - 271: [  2560,  2560]     NONE
 - 272: [  2560,  2560]     NONE
 - 273: [  2560,     1]     NONE
 - 274: [  2560,     1]     NONE
 - 275: [  2560,     1]     NONE
 - 276: [  2560,     1]     NONE
 - 277: [ 10240,     1]     NONE
 - 278: [  2560,     1]     NONE
 - 279: [  2560,     1]     NONE
 - 280: [  2560,     1]     NONE
 - 281: [  2560,  2560]     NONE
 - 282: [  2560,     1]     NONE
 - 283: [  2560,  2560]     NONE
 - 284: [  2560,     1]     NONE
 - 285: [ 10240,  2560]     NONE
 - 286: [  2560, 10240]     NONE
 - 287: [  2560,     1]     NONE
 - 288: [  2560,  2560]     NONE
 - 289: [  2560,  2560]     NONE
 - 290: [  2560,     1]     NONE
 - 291: [  2560,     1]     NONE
 - 292: [  2560,     1]     NONE
 - 293: [  2560,     1]     NONE
 - 294: [ 10240,     1]     NONE
 - 295: [  2560,     1]     NONE
 - 296: [  2560,     1]     NONE
 - 297: [  2560,     1]     NONE
 - 298: [  2560,  2560]     NONE
 - 299: [  2560,     1]     NONE
 - 300: [  2560,  2560]     NONE
 - 301: [  2560,     1]     NONE
 - 302: [ 10240,  2560]     NONE
 - 303: [  2560, 10240]     NONE
 - 304: [  2560,     1]     NONE
 - 305: [  2560,  2560]     NONE
 - 306: [  2560,  2560]     NONE
 - 307: [  2560,     1]     NONE
 - 308: [  2560,     1]     NONE
 - 309: [  2560,     1]     NONE
 - 310: [  2560,     1]     NONE
 - 311: [ 10240,     1]     NONE
 - 312: [  2560,     1]     NONE
 - 313: [  2560,     1]     NONE
 - 314: [  2560,     1]     NONE
 - 315: [  2560,  2560]     NONE
 - 316: [  2560,     1]     NONE
 - 317: [  2560,  2560]     NONE
 - 318: [  2560,     1]     NONE
 - 319: [ 10240,  2560]     NONE
 - 320: [  2560, 10240]     NONE
 - 321: [  2560,     1]     NONE
 - 322: [  2560,  2560]     NONE
 - 323: [  2560,  2560]     NONE
 - 324: [  2560,     1]     NONE
 - 325: [  2560,     1]     NONE
 - 326: [  2560,     1]     NONE
 - 327: [  2560,     1]     NONE
 - 328: [ 10240,     1]     NONE
 - 329: [  2560,     1]     NONE
 - 330: [  2560,     1]     NONE
 - 331: [  2560,     1]     NONE
 - 332: [  2560,  2560]     NONE
 - 333: [  2560,     1]     NONE
 - 334: [  2560,  2560]     NONE
 - 335: [  2560,     1]     NONE
 - 336: [ 10240,  2560]     NONE
 - 337: [  2560, 10240]     NONE
 - 338: [  2560,     1]     NONE
 - 339: [  2560,  2560]     NONE
 - 340: [  2560,  2560]     NONE
 - 341: [  2560,     1]     NONE
 - 342: [  2560,     1]     NONE
 - 343: [  2560,     1]     NONE
 - 344: [  2560,     1]     NONE
 - 345: [ 10240,     1]     NONE
 - 346: [  2560,     1]     NONE
 - 347: [  2560,     1]     NONE
 - 348: [  2560,     1]     NONE
 - 349: [  2560,  2560]     NONE
 - 350: [  2560,     1]     NONE
 - 351: [  2560,  2560]     NONE
 - 352: [  2560,     1]     NONE
 - 353: [ 10240,  2560]     NONE
 - 354: [  2560, 10240]     NONE
 - 355: [  2560,     1]     NONE
 - 356: [  2560,  2560]     NONE
 - 357: [  2560,  2560]     NONE
 - 358: [  2560,     1]     NONE
 - 359: [  2560,     1]     NONE
 - 360: [  2560,     1]     NONE
 - 361: [  2560,     1]     NONE
 - 362: [ 10240,     1]     NONE
 - 363: [  2560,     1]     NONE
 - 364: [  2560,     1]     NONE
 - 365: [  2560,     1]     NONE
 - 366: [  2560,  2560]     NONE
 - 367: [  2560,     1]     NONE
 - 368: [  2560,  2560]     NONE
 - 369: [  2560,     1]     NONE
 - 370: [ 10240,  2560]     NONE
 - 371: [  2560, 10240]     NONE
 - 372: [  2560,     1]     NONE
 - 373: [  2560,  2560]     NONE
 - 374: [  2560,  2560]     NONE
 - 375: [  2560,     1]     NONE
 - 376: [  2560,     1]     NONE
 - 377: [  2560,     1]     NONE
 - 378: [  2560,     1]     NONE
 - 379: [ 10240,     1]     NONE
 - 380: [  2560,     1]     NONE
 - 381: [  2560,     1]     NONE
 - 382: [  2560,     1]     NONE
 - 383: [  2560,  2560]     NONE
 - 384: [  2560,     1]     NONE
 - 385: [  2560,  2560]     NONE
 - 386: [  2560,     1]     NONE
 - 387: [ 10240,  2560]     NONE
 - 388: [  2560, 10240]     NONE
 - 389: [  2560,     1]     NONE
 - 390: [  2560,  2560]     NONE
 - 391: [  2560,  2560]     NONE
 - 392: [  2560,     1]     NONE
 - 393: [  2560,     1]     NONE
 - 394: [  2560,     1]     NONE
 - 395: [  2560,     1]     NONE
 - 396: [ 10240,     1]     NONE
 - 397: [  2560,     1]     NONE
 - 398: [  2560,     1]     NONE
 - 399: [  2560,     1]     NONE
 - 400: [  2560,  2560]     NONE
 - 401: [  2560,     1]     NONE
 - 402: [  2560,  2560]     NONE
 - 403: [  2560,     1]     NONE
 - 404: [ 10240,  2560]     NONE
 - 405: [  2560, 10240]     NONE
 - 406: [  2560,     1]     NONE
 - 407: [  2560,  2560]     NONE
 - 408: [  2560,  2560]     NONE
 - 409: [  2560,     1]     NONE
 - 410: [  2560,     1]     NONE
 - 411: [  2560,     1]     NONE
 - 412: [  2560,     1]     NONE
 - 413: [ 10240,     1]     NONE
 - 414: [  2560,     1]     NONE
 - 415: [  2560,     1]     NONE
 - 416: [  2560,     1]     NONE
 - 417: [  2560,  2560]     NONE
 - 418: [  2560,     1]     NONE
 - 419: [  2560,  2560]     NONE
 - 420: [  2560,     1]     NONE
 - 421: [ 10240,  2560]     NONE
 - 422: [  2560, 10240]     NONE
 - 423: [  2560,     1]     NONE
 - 424: [  2560,  2560]     NONE
 - 425: [  2560,  2560]     NONE
 - 426: [  2560,     1]     NONE
 - 427: [  2560,     1]     NONE
 - 428: [  2560,     1]     NONE
 - 429: [  2560,     1]     NONE
 - 430: [ 10240,     1]     NONE
 - 431: [  2560,     1]     NONE
 - 432: [  2560,     1]     NONE
 - 433: [  2560,     1]     NONE
 - 434: [  2560,  2560]     NONE
 - 435: [  2560,     1]     NONE
 - 436: [  2560,  2560]     NONE
 - 437: [  2560,     1]     NONE
 - 438: [ 10240,  2560]     NONE
 - 439: [  2560, 10240]     NONE
 - 440: [  2560,     1]     NONE
 - 441: [  2560,  2560]     NONE
 - 442: [  2560,  2560]     NONE
 - 443: [  2560,     1]     NONE
 - 444: [  2560,     1]     NONE
 - 445: [  2560,     1]     NONE
 - 446: [  2560,     1]     NONE
 - 447: [ 10240,     1]     NONE
 - 448: [  2560,     1]     NONE
 - 449: [  2560,     1]     NONE
 - 450: [  2560,     1]     NONE
 - 451: [  2560,  2560]     NONE
 - 452: [  2560,     1]     NONE
 - 453: [  2560,  2560]     NONE
 - 454: [  2560,     1]     NONE
 - 455: [ 10240,  2560]     NONE
 - 456: [  2560, 10240]     NONE
 - 457: [  2560,     1]     NONE
 - 458: [  2560,  2560]     NONE
 - 459: [  2560,  2560]     NONE
 - 460: [  2560,     1]     NONE
 - 461: [  2560,     1]     NONE
 - 462: [  2560,     1]     NONE
 - 463: [  2560,     1]     NONE
 - 464: [ 10240,     1]     NONE
 - 465: [  2560,     1]     NONE
 - 466: [  2560,     1]     NONE
 - 467: [  2560,     1]     NONE
 - 468: [  2560,  2560]     NONE
 - 469: [  2560,     1]     NONE
 - 470: [  2560,  2560]     NONE
 - 471: [  2560,     1]     NONE
 - 472: [ 10240,  2560]     NONE
 - 473: [  2560, 10240]     NONE
 - 474: [  2560,     1]     NONE
 - 475: [  2560,  2560]     NONE
 - 476: [  2560,  2560]     NONE
 - 477: [  2560,     1]     NONE
 - 478: [  2560,     1]     NONE
 - 479: [  2560,     1]     NONE
 - 480: [  2560,     1]     NONE
 - 481: [ 10240,     1]     NONE
 - 482: [  2560,     1]     NONE
 - 483: [  2560,     1]     NONE
 - 484: [  2560,     1]     NONE
 - 485: [  2560,  2560]     NONE
 - 486: [  2560,     1]     NONE
 - 487: [  2560,  2560]     NONE
 - 488: [  2560,     1]     NONE
 - 489: [ 10240,  2560]     NONE
 - 490: [  2560, 10240]     NONE
 - 491: [  2560,     1]     NONE
 - 492: [  2560,  2560]     NONE
 - 493: [  2560,  2560]     NONE
 - 494: [  2560,     1]     NONE
 - 495: [  2560,     1]     NONE
 - 496: [  2560,     1]     NONE
 - 497: [  2560,     1]     NONE
 - 498: [ 10240,     1]     NONE
 - 499: [  2560,     1]     NONE
 - 500: [  2560,     1]     NONE
 - 501: [  2560,     1]     NONE
 - 502: [  2560,  2560]     NONE
 - 503: [  2560,     1]     NONE
 - 504: [  2560,  2560]     NONE
 - 505: [  2560,     1]     NONE
 - 506: [ 10240,  2560]     NONE
 - 507: [  2560, 10240]     NONE
 - 508: [  2560,     1]     NONE
 - 509: [  2560,  2560]     NONE
 - 510: [  2560,  2560]     NONE
 - 511: [  2560,     1]     NONE
 - 512: [  2560,     1]     NONE
 - 513: [  2560,     1]     NONE
 - 514: [  2560,     1]     NONE
 - 515: [ 10240,     1]     NONE
 - 516: [  2560,     1]     NONE
 - 517: [  2560,     1]     NONE
 - 518: [  2560,     1]     NONE
 - 519: [  2560,  2560]     NONE
 - 520: [  2560,     1]     NONE
 - 521: [  2560,  2560]     NONE
 - 522: [  2560,     1]     NONE
 - 523: [ 10240,  2560]     NONE
 - 524: [  2560, 10240]     NONE
 - 525: [  2560,     1]     NONE
 - 526: [  2560,  2560]     NONE
 - 527: [  2560,  2560]     NONE
 - 528: [  2560,     1]     NONE
 - 529: [  2560,     1]     NONE
 - 530: [  2560,     1]     NONE
 - 531: [  2560,     1]     NONE
 - 532: [ 10240,     1]     NONE
 - 533: [  2560,     1]     NONE
 - 534: [  2560,     1]     NONE
 - 535: [  2560,     1]     NONE
 - 536: [  2560,  2560]     NONE
 - 537: [  2560,     1]     NONE
 - 538: [  2560, 102400]     NONE
 - 539: [  2560,     1]     NONE
 - 540: [ 10240,  2560]     NONE
 - 541: [  2560, 10240]     NONE
 - 542: [  2560,     1]     NONE
 - 543: [  2560,  2560]     NONE
 - 544: [  2560,  2560]     NONE
 - 545: [  2560,     1]     NONE
 - 546: [  2560,     1]     NONE
 - 547: [  2560,     1]     NONE
 - 548: [  2560,     1]     NONE
 - 549: [ 10240,     1]     NONE
 - 550: [  2560,     1]     NONE
 - 551: [  2560,     1]     NONE
perf_total_per_op_us[             ADD] =   0.321 ms
perf_total_per_op_us[             MUL] =   0.065 ms
perf_total_per_op_us[            NORM] =   0.065 ms
perf_total_per_op_us[         MUL_MAT] =   0.257 ms
perf_total_per_op_us[           SCALE] =   0.032 ms
perf_total_per_op_us[             CPY] =   0.096 ms
perf_total_per_op_us[         RESHAPE] =   0.096 ms
perf_total_per_op_us[            VIEW] =   0.128 ms
perf_total_per_op_us[         PERMUTE] =   0.064 ms
perf_total_per_op_us[       TRANSPOSE] =   0.032 ms
perf_total_per_op_us[        GET_ROWS] =   0.001 ms
perf_total_per_op_us[   DIAG_MASK_INF] =   0.032 ms
perf_total_per_op_us[        SOFT_MAX] =   0.032 ms
perf_total_per_op_us[            ROPE] =   0.064 ms
perf_total_per_op_us[           UNARY] =   0.032 ms
========================================
user=== GRAPH ===
n_nodes = 1317
 -   0: [  2560,     1,     1]         GET_ROWS   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   1: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   2: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   3: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   4: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   5: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   6: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   7: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   8: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   9: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  10: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  11: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  12: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  13: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  14: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  15: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  16: [    13,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  17: [   128,    13,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  18: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  19: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  20: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  21: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  22: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  23: [    13,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  24: [    13,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  25: [    13,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  26: [    13,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  27: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  28: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  29: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  30: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  31: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  32: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  33: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  34: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  35: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  36: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  37: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  38: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  39: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  40: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  41: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  42: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  43: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  44: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  45: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  46: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  47: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  48: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  49: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  50: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  51: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  52: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  53: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  54: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  55: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  56: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  57: [    13,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  58: [   128,    13,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  59: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  60: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  61: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  62: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  63: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  64: [    13,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  65: [    13,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  66: [    13,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  67: [    13,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  68: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  69: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  70: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  71: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  72: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  73: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  74: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  75: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  76: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  77: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  78: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  79: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  80: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  81: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  82: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  83: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  84: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  85: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  86: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  87: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  88: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  89: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  90: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  91: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  92: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  93: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  94: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  95: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  96: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  97: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  98: [    13,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  99: [   128,    13,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 100: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 102: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 103: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 104: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 105: [    13,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 106: [    13,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 107: [    13,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 108: [    13,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 109: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 110: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 111: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 112: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 113: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 114: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 115: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 116: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 117: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 118: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 119: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 120: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 121: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 122: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 123: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 124: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 125: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 127: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 128: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 129: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 130: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 131: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 132: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 133: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 134: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 135: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 136: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 137: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 138: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 139: [    13,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 140: [   128,    13,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 141: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 143: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 144: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 145: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 146: [    13,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 147: [    13,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 148: [    13,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 149: [    13,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 150: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 151: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 152: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 153: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 154: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 155: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 156: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 157: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 158: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 159: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 160: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 161: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 162: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 163: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 164: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 165: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 166: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 168: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 169: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 170: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 171: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 172: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 173: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 174: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 175: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 176: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 177: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 178: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 179: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 180: [    13,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 181: [   128,    13,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 182: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 184: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 185: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 186: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 187: [    13,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 188: [    13,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 189: [    13,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 190: [    13,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 191: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 192: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 193: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 194: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 195: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 196: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 197: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 198: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 199: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 200: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 201: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 202: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 203: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 204: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 205: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 206: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 207: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 209: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 210: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 211: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 212: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 213: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 214: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 215: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 216: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 217: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 218: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 219: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 220: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 221: [    13,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 222: [   128,    13,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 223: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 225: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 226: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 227: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 228: [    13,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 229: [    13,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 230: [    13,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 231: [    13,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 232: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 233: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 234: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 235: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 236: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 237: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 238: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 239: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 240: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 241: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 242: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 243: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 244: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 245: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 246: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 247: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 248: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 250: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 251: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 252: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 253: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 254: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 255: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 256: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 257: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 258: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 259: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 260: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 261: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 262: [    13,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 263: [   128,    13,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 264: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 266: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 267: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 268: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 269: [    13,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 270: [    13,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 271: [    13,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 272: [    13,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 273: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 274: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 275: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 276: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 277: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 278: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 279: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 280: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 281: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 282: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 283: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 284: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 285: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 286: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 287: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 288: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 289: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 291: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 292: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 293: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 294: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 295: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 296: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 297: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 298: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 299: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 300: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 301: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 302: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 303: [    13,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 304: [   128,    13,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 305: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 307: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 308: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 309: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 310: [    13,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 311: [    13,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 312: [    13,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 313: [    13,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 314: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 315: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 316: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 317: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 318: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 319: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 320: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 321: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 322: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 323: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 324: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 325: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 326: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 327: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 328: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 329: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 330: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 331: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 332: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 333: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 334: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 335: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 336: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 337: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 338: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 339: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 340: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 341: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 342: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 343: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 344: [    13,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 345: [   128,    13,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 346: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 347: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 348: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 349: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 350: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 351: [    13,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 352: [    13,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 353: [    13,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 354: [    13,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 355: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 356: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 357: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 358: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 359: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 360: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 361: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 362: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 363: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 364: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 365: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 366: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 367: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 368: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 369: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 370: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 371: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 372: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 373: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 374: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 375: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 376: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 377: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 378: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 379: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 380: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 381: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 382: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 383: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 384: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 385: [    13,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 386: [   128,    13,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 387: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 388: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 389: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 390: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 391: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 392: [    13,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 393: [    13,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 394: [    13,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 395: [    13,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 396: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 397: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 398: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 399: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 400: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 401: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 402: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 403: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 404: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 405: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 406: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 407: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 408: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 409: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 410: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 411: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 412: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 413: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 414: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 415: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 416: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 417: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 418: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 419: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 420: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 421: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 422: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 423: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 424: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 425: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 426: [    13,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 427: [   128,    13,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 428: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 429: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 430: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 431: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 432: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 433: [    13,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 434: [    13,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 435: [    13,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 436: [    13,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 437: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 438: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 439: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 440: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 441: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 442: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 443: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 444: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 445: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 446: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 447: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 448: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 449: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 450: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 451: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 452: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 453: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 454: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 455: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 456: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 457: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 458: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 459: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 460: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 461: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 462: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 463: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 464: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 465: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 466: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 467: [    13,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 468: [   128,    13,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 469: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 470: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 471: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 472: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 473: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 474: [    13,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 475: [    13,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 476: [    13,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 477: [    13,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 478: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 479: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 480: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 481: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 482: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 483: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 484: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 485: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 486: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 487: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 488: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 489: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 490: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 491: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 492: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 493: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 494: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 495: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 496: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 497: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 498: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 499: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 500: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 501: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 502: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 503: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 504: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 505: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 506: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 507: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 508: [    13,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 509: [   128,    13,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 510: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 511: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 512: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 513: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 514: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 515: [    13,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 516: [    13,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 517: [    13,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 518: [    13,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 519: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 520: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 521: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 522: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 523: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 524: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 525: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 526: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 527: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 528: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 529: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 530: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 531: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 532: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 533: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 534: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 535: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 536: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 537: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 538: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 539: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 540: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 541: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 542: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 543: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 544: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 545: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 546: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 547: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 548: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 549: [    13,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 550: [   128,    13,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 551: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 552: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 553: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 554: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 555: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 556: [    13,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 557: [    13,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 558: [    13,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 559: [    13,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 560: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 561: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 562: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 563: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 564: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 565: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 566: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 567: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 568: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 569: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 570: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 571: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 572: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 573: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 574: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 575: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 576: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 577: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 578: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 579: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 580: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 581: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 582: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 583: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 584: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 585: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 586: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 587: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 588: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 589: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 590: [    13,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 591: [   128,    13,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 592: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 593: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 594: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 595: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 596: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 597: [    13,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 598: [    13,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 599: [    13,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 600: [    13,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 601: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 602: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 603: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 604: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 605: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 606: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 607: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 608: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 609: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 610: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 611: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 612: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 613: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 614: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 615: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 616: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 617: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 618: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 619: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 620: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 621: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 622: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 623: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 624: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 625: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 626: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 627: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 628: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 629: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 630: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 631: [    13,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 632: [   128,    13,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 633: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 634: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 635: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 636: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 637: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 638: [    13,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 639: [    13,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 640: [    13,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 641: [    13,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 642: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 643: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 644: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 645: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 646: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 647: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 648: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 649: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 650: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 651: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 652: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 653: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 654: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 655: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 656: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 657: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 658: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 659: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 660: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 661: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 662: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 663: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 664: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 665: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 666: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 667: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 668: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 669: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 670: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 671: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 672: [    13,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 673: [   128,    13,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 674: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 675: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 676: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 677: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 678: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 679: [    13,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 680: [    13,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 681: [    13,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 682: [    13,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 683: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 684: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 685: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 686: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 687: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 688: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 689: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 690: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 691: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 692: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 693: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 694: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 695: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 696: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 697: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 698: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 699: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 700: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 701: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 702: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 703: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 704: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 705: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 706: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 707: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 708: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 709: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 710: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 711: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 712: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 713: [    13,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 714: [   128,    13,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 715: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 716: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 717: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 718: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 719: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 720: [    13,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 721: [    13,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 722: [    13,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 723: [    13,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 724: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 725: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 726: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 727: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 728: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 729: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 730: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 731: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 732: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 733: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 734: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 735: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 736: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 737: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 738: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 739: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 740: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 741: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 742: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 743: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 744: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 745: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 746: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 747: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 748: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 749: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 750: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 751: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 752: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 753: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 754: [    13,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 755: [   128,    13,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 756: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 757: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 758: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 759: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 760: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 761: [    13,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 762: [    13,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 763: [    13,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 764: [    13,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 765: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 766: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 767: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 768: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 769: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 770: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 771: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 772: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 773: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 774: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 775: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 776: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 777: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 778: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 779: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 780: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 781: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 782: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 783: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 784: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 785: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 786: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 787: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 788: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 789: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 790: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 791: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 792: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 793: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 794: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 795: [    13,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 796: [   128,    13,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 797: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 798: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 799: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 800: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 801: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 802: [    13,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 803: [    13,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 804: [    13,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 805: [    13,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 806: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 807: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 808: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 809: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 810: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 811: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 812: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 813: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 814: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 815: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 816: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 817: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 818: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 819: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 820: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 821: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 822: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 823: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 824: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 825: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 826: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 827: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 828: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 829: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 830: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 831: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 832: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 833: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 834: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 835: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 836: [    13,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 837: [   128,    13,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 838: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 839: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 840: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 841: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 842: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 843: [    13,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 844: [    13,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 845: [    13,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 846: [    13,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 847: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 848: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 849: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 850: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 851: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 852: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 853: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 854: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 855: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 856: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 857: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 858: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 859: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 860: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 861: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 862: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 863: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 864: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 865: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 866: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 867: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 868: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 869: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 870: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 871: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 872: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 873: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 874: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 875: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 876: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 877: [    13,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 878: [   128,    13,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 879: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 880: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 881: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 882: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 883: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 884: [    13,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 885: [    13,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 886: [    13,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 887: [    13,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 888: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 889: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 890: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 891: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 892: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 893: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 894: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 895: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 896: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 897: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 898: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 899: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 900: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 901: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 902: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 903: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 904: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 905: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 906: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 907: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 908: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 909: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 910: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 911: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 912: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 913: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 914: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 915: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 916: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 917: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 918: [    13,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 919: [   128,    13,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 920: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 921: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 922: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 923: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 924: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 925: [    13,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 926: [    13,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 927: [    13,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 928: [    13,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 929: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 930: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 931: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 932: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 933: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 934: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 935: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 936: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 937: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 938: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 939: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 940: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 941: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 942: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 943: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 944: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 945: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 946: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 947: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 948: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 949: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 950: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 951: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 952: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 953: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 954: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 955: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 956: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 957: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 958: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 959: [    13,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 960: [   128,    13,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 961: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 962: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 963: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 964: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 965: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 966: [    13,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 967: [    13,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 968: [    13,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 969: [    13,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 970: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 971: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 972: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 973: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 974: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 975: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 976: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 977: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 978: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 979: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 980: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 981: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 982: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 983: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 984: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 985: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 986: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 987: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 988: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 989: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 990: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 991: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 992: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 993: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 994: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 995: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 996: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 997: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 998: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 999: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1000: [    13,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1001: [   128,    13,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1002: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1003: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1004: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1005: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1006: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1007: [    13,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1008: [    13,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1009: [    13,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1010: [    13,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1011: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1012: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1013: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1014: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1015: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1016: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1017: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1018: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1019: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1020: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1021: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1022: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1023: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1024: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1025: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1026: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1027: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1028: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1029: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1030: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1031: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1032: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1033: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1034: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1035: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1036: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1037: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1038: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1039: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1040: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1041: [    13,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1042: [   128,    13,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1043: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1044: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1045: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1046: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1047: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1048: [    13,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1049: [    13,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1050: [    13,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1051: [    13,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1052: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1053: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1054: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1055: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1056: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1057: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1058: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1059: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1060: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1061: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1062: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1063: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1064: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1065: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1066: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1067: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1068: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1069: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1070: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1071: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1072: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1073: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1074: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1075: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1076: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1077: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1078: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1079: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1080: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1081: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1082: [    13,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1083: [   128,    13,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1084: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1085: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1086: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1087: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1088: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1089: [    13,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1090: [    13,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1091: [    13,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1092: [    13,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1093: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1094: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1095: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1096: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1097: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1098: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1099: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1100: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1102: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1103: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1104: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1105: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1106: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1107: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1108: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1109: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1110: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1111: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1112: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1113: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1114: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1115: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1116: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1117: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1118: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1119: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1120: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1121: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1122: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1123: [    13,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1124: [   128,    13,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1125: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1127: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1128: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1129: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1130: [    13,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1131: [    13,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1132: [    13,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1133: [    13,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1134: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1135: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1136: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1137: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1138: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1139: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1140: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1141: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1143: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1144: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1145: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1146: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1147: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1148: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1149: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1150: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1151: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1152: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1153: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1154: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1155: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1156: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1157: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1158: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1159: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1160: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1161: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1162: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1163: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1164: [    13,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1165: [   128,    13,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1166: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1168: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1169: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1170: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1171: [    13,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1172: [    13,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1173: [    13,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1174: [    13,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1175: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1176: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1177: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1178: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1179: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1180: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1181: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1182: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1184: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1185: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1186: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1187: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1188: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1189: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1190: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1191: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1192: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1193: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1194: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1195: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1196: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1197: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1198: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1199: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1200: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1201: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1202: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1203: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1204: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1205: [    13,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1206: [   128,    13,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1207: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1209: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1210: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1211: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1212: [    13,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1213: [    13,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1214: [    13,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1215: [    13,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1216: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1217: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1218: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1219: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1220: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1221: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1222: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1223: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1225: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1226: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1227: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1228: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1229: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1230: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1231: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1232: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1233: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1234: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1235: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1236: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1237: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1238: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1239: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1240: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1241: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1242: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1243: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1244: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1245: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1246: [    13,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1247: [   128,    13,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1248: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1250: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1251: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1252: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1253: [    13,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1254: [    13,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1255: [    13,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1256: [    13,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1257: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1258: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1259: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1260: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1261: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1262: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1263: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1264: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1266: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1267: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1268: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1269: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1270: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1271: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1272: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1273: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1274: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1275: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1276: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1277: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1278: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1279: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1280: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1281: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1282: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1283: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1284: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1285: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1286: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1287: [    13,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1288: [   128,    13,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1289: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1291: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1292: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1293: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1294: [    13,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1295: [    13,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1296: [    13,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1297: [    13,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1298: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1299: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1300: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1301: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1302: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1303: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1304: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1305: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1307: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1308: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1309: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1310: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1311: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1312: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1313: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1314: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1315: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1316: [ 102400,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
n_leafs = 552
 -   0: [  2560,  2560]     NONE
 -   1: [  2560,     1]     NONE
 -   2: [  2560, 102400]     NONE
 -   3: [     1,     1]     NONE
 -   4: [  2560,     1]     NONE
 -   5: [  2560,     1]     NONE
 -   6: [ 41943040,     1]     NONE
 -   7: [  2560,  2560]     NONE
 -   8: [  2560,     1]     NONE
 -   9: [ 41943040,     1]     NONE
 -  10: [  2560,  2560]     NONE
 -  11: [  2560,     1]     NONE
 -  12: [ 10240,  2560]     NONE
 -  13: [  2560, 10240]     NONE
 -  14: [  2560,     1]     NONE
 -  15: [  2560,  2560]     NONE
 -  16: [  2560,  2560]     NONE
 -  17: [  2560,     1]     NONE
 -  18: [     1,     1]     NONE
 -  19: [  2560,     1]     NONE
 -  20: [  2560,     1]     NONE
 -  21: [  2560,     1]     NONE
 -  22: [ 10240,     1]     NONE
 -  23: [  2560,     1]     NONE
 -  24: [  2560,     1]     NONE
 -  25: [  2560,     1]     NONE
 -  26: [  2560,  2560]     NONE
 -  27: [  2560,     1]     NONE
 -  28: [  2560,  2560]     NONE
 -  29: [  2560,     1]     NONE
 -  30: [ 10240,  2560]     NONE
 -  31: [  2560, 10240]     NONE
 -  32: [  2560,     1]     NONE
 -  33: [  2560,  2560]     NONE
 -  34: [  2560,  2560]     NONE
 -  35: [  2560,     1]     NONE
 -  36: [  2560,     1]     NONE
 -  37: [  2560,     1]     NONE
 -  38: [  2560,     1]     NONE
 -  39: [ 10240,     1]     NONE
 -  40: [  2560,     1]     NONE
 -  41: [  2560,     1]     NONE
 -  42: [  2560,     1]     NONE
 -  43: [  2560,  2560]     NONE
 -  44: [  2560,     1]     NONE
 -  45: [  2560,  2560]     NONE
 -  46: [  2560,     1]     NONE
 -  47: [ 10240,  2560]     NONE
 -  48: [  2560, 10240]     NONE
 -  49: [  2560,     1]     NONE
 -  50: [  2560,  2560]     NONE
 -  51: [  2560,  2560]     NONE
 -  52: [  2560,     1]     NONE
 -  53: [  2560,     1]     NONE
 -  54: [  2560,     1]     NONE
 -  55: [  2560,     1]     NONE
 -  56: [ 10240,     1]     NONE
 -  57: [  2560,     1]     NONE
 -  58: [  2560,     1]     NONE
 -  59: [  2560,     1]     NONE
 -  60: [  2560,  2560]     NONE
 -  61: [  2560,     1]     NONE
 -  62: [  2560,  2560]     NONE
 -  63: [  2560,     1]     NONE
 -  64: [ 10240,  2560]     NONE
 -  65: [  2560, 10240]     NONE
 -  66: [  2560,     1]     NONE
 -  67: [  2560,  2560]     NONE
 -  68: [  2560,  2560]     NONE
 -  69: [  2560,     1]     NONE
 -  70: [  2560,     1]     NONE
 -  71: [  2560,     1]     NONE
 -  72: [  2560,     1]     NONE
 -  73: [ 10240,     1]     NONE
 -  74: [  2560,     1]     NONE
 -  75: [  2560,     1]     NONE
 -  76: [  2560,     1]     NONE
 -  77: [  2560,  2560]     NONE
 -  78: [  2560,     1]     NONE
 -  79: [  2560,  2560]     NONE
 -  80: [  2560,     1]     NONE
 -  81: [ 10240,  2560]     NONE
 -  82: [  2560, 10240]     NONE
 -  83: [  2560,     1]     NONE
 -  84: [  2560,  2560]     NONE
 -  85: [  2560,  2560]     NONE
 -  86: [  2560,     1]     NONE
 -  87: [  2560,     1]     NONE
 -  88: [  2560,     1]     NONE
 -  89: [  2560,     1]     NONE
 -  90: [ 10240,     1]     NONE
 -  91: [  2560,     1]     NONE
 -  92: [  2560,     1]     NONE
 -  93: [  2560,     1]     NONE
 -  94: [  2560,  2560]     NONE
 -  95: [  2560,     1]     NONE
 -  96: [  2560,  2560]     NONE
 -  97: [  2560,     1]     NONE
 -  98: [ 10240,  2560]     NONE
 -  99: [  2560, 10240]     NONE
 - 100: [  2560,     1]     NONE
 - 101: [  2560,  2560]     NONE
 - 102: [  2560,  2560]     NONE
 - 103: [  2560,     1]     NONE
 - 104: [  2560,     1]     NONE
 - 105: [  2560,     1]     NONE
 - 106: [  2560,     1]     NONE
 - 107: [ 10240,     1]     NONE
 - 108: [  2560,     1]     NONE
 - 109: [  2560,     1]     NONE
 - 110: [  2560,     1]     NONE
 - 111: [  2560,  2560]     NONE
 - 112: [  2560,     1]     NONE
 - 113: [  2560,  2560]     NONE
 - 114: [  2560,     1]     NONE
 - 115: [ 10240,  2560]     NONE
 - 116: [  2560, 10240]     NONE
 - 117: [  2560,     1]     NONE
 - 118: [  2560,  2560]     NONE
 - 119: [  2560,  2560]     NONE
 - 120: [  2560,     1]     NONE
 - 121: [  2560,     1]     NONE
 - 122: [  2560,     1]     NONE
 - 123: [  2560,     1]     NONE
 - 124: [ 10240,     1]     NONE
 - 125: [  2560,     1]     NONE
 - 126: [  2560,     1]     NONE
 - 127: [  2560,     1]     NONE
 - 128: [  2560,  2560]     NONE
 - 129: [  2560,     1]     NONE
 - 130: [  2560,  2560]     NONE
 - 131: [  2560,     1]     NONE
 - 132: [ 10240,  2560]     NONE
 - 133: [  2560, 10240]     NONE
 - 134: [  2560,     1]     NONE
 - 135: [  2560,  2560]     NONE
 - 136: [  2560,  2560]     NONE
 - 137: [  2560,     1]     NONE
 - 138: [  2560,     1]     NONE
 - 139: [  2560,     1]     NONE
 - 140: [  2560,     1]     NONE
 - 141: [ 10240,     1]     NONE
 - 142: [  2560,     1]     NONE
 - 143: [  2560,     1]     NONE
 - 144: [  2560,     1]     NONE
 - 145: [  2560,  2560]     NONE
 - 146: [  2560,     1]     NONE
 - 147: [  2560,  2560]     NONE
 - 148: [  2560,     1]     NONE
 - 149: [ 10240,  2560]     NONE
 - 150: [  2560, 10240]     NONE
 - 151: [  2560,     1]     NONE
 - 152: [  2560,  2560]     NONE
 - 153: [  2560,  2560]     NONE
 - 154: [  2560,     1]     NONE
 - 155: [  2560,     1]     NONE
 - 156: [  2560,     1]     NONE
 - 157: [  2560,     1]     NONE
 - 158: [ 10240,     1]     NONE
 - 159: [  2560,     1]     NONE
 - 160: [  2560,     1]     NONE
 - 161: [  2560,     1]     NONE
 - 162: [  2560,  2560]     NONE
 - 163: [  2560,     1]     NONE
 - 164: [  2560,  2560]     NONE
 - 165: [  2560,     1]     NONE
 - 166: [ 10240,  2560]     NONE
 - 167: [  2560, 10240]     NONE
 - 168: [  2560,     1]     NONE
 - 169: [  2560,  2560]     NONE
 - 170: [  2560,  2560]     NONE
 - 171: [  2560,     1]     NONE
 - 172: [  2560,     1]     NONE
 - 173: [  2560,     1]     NONE
 - 174: [  2560,     1]     NONE
 - 175: [ 10240,     1]     NONE
 - 176: [  2560,     1]     NONE
 - 177: [  2560,     1]     NONE
 - 178: [  2560,     1]     NONE
 - 179: [  2560,  2560]     NONE
 - 180: [  2560,     1]     NONE
 - 181: [  2560,  2560]     NONE
 - 182: [  2560,     1]     NONE
 - 183: [ 10240,  2560]     NONE
 - 184: [  2560, 10240]     NONE
 - 185: [  2560,     1]     NONE
 - 186: [  2560,  2560]     NONE
 - 187: [  2560,  2560]     NONE
 - 188: [  2560,     1]     NONE
 - 189: [  2560,     1]     NONE
 - 190: [  2560,     1]     NONE
 - 191: [  2560,     1]     NONE
 - 192: [ 10240,     1]     NONE
 - 193: [  2560,     1]     NONE
 - 194: [  2560,     1]     NONE
 - 195: [  2560,     1]     NONE
 - 196: [  2560,  2560]     NONE
 - 197: [  2560,     1]     NONE
 - 198: [  2560,  2560]     NONE
 - 199: [  2560,     1]     NONE
 - 200: [ 10240,  2560]     NONE
 - 201: [  2560, 10240]     NONE
 - 202: [  2560,     1]     NONE
 - 203: [  2560,  2560]     NONE
 - 204: [  2560,  2560]     NONE
 - 205: [  2560,     1]     NONE
 - 206: [  2560,     1]     NONE
 - 207: [  2560,     1]     NONE
 - 208: [  2560,     1]     NONE
 - 209: [ 10240,     1]     NONE
 - 210: [  2560,     1]     NONE
 - 211: [  2560,     1]     NONE
 - 212: [  2560,     1]     NONE
 - 213: [  2560,  2560]     NONE
 - 214: [  2560,     1]     NONE
 - 215: [  2560,  2560]     NONE
 - 216: [  2560,     1]     NONE
 - 217: [ 10240,  2560]     NONE
 - 218: [  2560, 10240]     NONE
 - 219: [  2560,     1]     NONE
 - 220: [  2560,  2560]     NONE
 - 221: [  2560,  2560]     NONE
 - 222: [  2560,     1]     NONE
 - 223: [  2560,     1]     NONE
 - 224: [  2560,     1]     NONE
 - 225: [  2560,     1]     NONE
 - 226: [ 10240,     1]     NONE
 - 227: [  2560,     1]     NONE
 - 228: [  2560,     1]     NONE
 - 229: [  2560,     1]     NONE
 - 230: [  2560,  2560]     NONE
 - 231: [  2560,     1]     NONE
 - 232: [  2560,  2560]     NONE
 - 233: [  2560,     1]     NONE
 - 234: [ 10240,  2560]     NONE
 - 235: [  2560, 10240]     NONE
 - 236: [  2560,     1]     NONE
 - 237: [  2560,  2560]     NONE
 - 238: [  2560,  2560]     NONE
 - 239: [  2560,     1]     NONE
 - 240: [  2560,     1]     NONE
 - 241: [  2560,     1]     NONE
 - 242: [  2560,     1]     NONE
 - 243: [ 10240,     1]     NONE
 - 244: [  2560,     1]     NONE
 - 245: [  2560,     1]     NONE
 - 246: [  2560,     1]     NONE
 - 247: [  2560,  2560]     NONE
 - 248: [  2560,     1]     NONE
 - 249: [  2560,  2560]     NONE
 - 250: [  2560,     1]     NONE
 - 251: [ 10240,  2560]     NONE
 - 252: [  2560, 10240]     NONE
 - 253: [  2560,     1]     NONE
 - 254: [  2560,  2560]     NONE
 - 255: [  2560,  2560]     NONE
 - 256: [  2560,     1]     NONE
 - 257: [  2560,     1]     NONE
 - 258: [  2560,     1]     NONE
 - 259: [  2560,     1]     NONE
 - 260: [ 10240,     1]     NONE
 - 261: [  2560,     1]     NONE
 - 262: [  2560,     1]     NONE
 - 263: [  2560,     1]     NONE
 - 264: [  2560,  2560]     NONE
 - 265: [  2560,     1]     NONE
 - 266: [  2560,  2560]     NONE
 - 267: [  2560,     1]     NONE
 - 268: [ 10240,  2560]     NONE
 - 269: [  2560, 10240]     NONE
 - 270: [  2560,     1]     NONE
 - 271: [  2560,  2560]     NONE
 - 272: [  2560,  2560]     NONE
 - 273: [  2560,     1]     NONE
 - 274: [  2560,     1]     NONE
 - 275: [  2560,     1]     NONE
 - 276: [  2560,     1]     NONE
 - 277: [ 10240,     1]     NONE
 - 278: [  2560,     1]     NONE
 - 279: [  2560,     1]     NONE
 - 280: [  2560,     1]     NONE
 - 281: [  2560,  2560]     NONE
 - 282: [  2560,     1]     NONE
 - 283: [  2560,  2560]     NONE
 - 284: [  2560,     1]     NONE
 - 285: [ 10240,  2560]     NONE
 - 286: [  2560, 10240]     NONE
 - 287: [  2560,     1]     NONE
 - 288: [  2560,  2560]     NONE
 - 289: [  2560,  2560]     NONE
 - 290: [  2560,     1]     NONE
 - 291: [  2560,     1]     NONE
 - 292: [  2560,     1]     NONE
 - 293: [  2560,     1]     NONE
 - 294: [ 10240,     1]     NONE
 - 295: [  2560,     1]     NONE
 - 296: [  2560,     1]     NONE
 - 297: [  2560,     1]     NONE
 - 298: [  2560,  2560]     NONE
 - 299: [  2560,     1]     NONE
 - 300: [  2560,  2560]     NONE
 - 301: [  2560,     1]     NONE
 - 302: [ 10240,  2560]     NONE
 - 303: [  2560, 10240]     NONE
 - 304: [  2560,     1]     NONE
 - 305: [  2560,  2560]     NONE
 - 306: [  2560,  2560]     NONE
 - 307: [  2560,     1]     NONE
 - 308: [  2560,     1]     NONE
 - 309: [  2560,     1]     NONE
 - 310: [  2560,     1]     NONE
 - 311: [ 10240,     1]     NONE
 - 312: [  2560,     1]     NONE
 - 313: [  2560,     1]     NONE
 - 314: [  2560,     1]     NONE
 - 315: [  2560,  2560]     NONE
 - 316: [  2560,     1]     NONE
 - 317: [  2560,  2560]     NONE
 - 318: [  2560,     1]     NONE
 - 319: [ 10240,  2560]     NONE
 - 320: [  2560, 10240]     NONE
 - 321: [  2560,     1]     NONE
 - 322: [  2560,  2560]     NONE
 - 323: [  2560,  2560]     NONE
 - 324: [  2560,     1]     NONE
 - 325: [  2560,     1]     NONE
 - 326: [  2560,     1]     NONE
 - 327: [  2560,     1]     NONE
 - 328: [ 10240,     1]     NONE
 - 329: [  2560,     1]     NONE
 - 330: [  2560,     1]     NONE
 - 331: [  2560,     1]     NONE
 - 332: [  2560,  2560]     NONE
 - 333: [  2560,     1]     NONE
 - 334: [  2560,  2560]     NONE
 - 335: [  2560,     1]     NONE
 - 336: [ 10240,  2560]     NONE
 - 337: [  2560, 10240]     NONE
 - 338: [  2560,     1]     NONE
 - 339: [  2560,  2560]     NONE
 - 340: [  2560,  2560]     NONE
 - 341: [  2560,     1]     NONE
 - 342: [  2560,     1]     NONE
 - 343: [  2560,     1]     NONE
 - 344: [  2560,     1]     NONE
 - 345: [ 10240,     1]     NONE
 - 346: [  2560,     1]     NONE
 - 347: [  2560,     1]     NONE
 - 348: [  2560,     1]     NONE
 - 349: [  2560,  2560]     NONE
 - 350: [  2560,     1]     NONE
 - 351: [  2560,  2560]     NONE
 - 352: [  2560,     1]     NONE
 - 353: [ 10240,  2560]     NONE
 - 354: [  2560, 10240]     NONE
 - 355: [  2560,     1]     NONE
 - 356: [  2560,  2560]     NONE
 - 357: [  2560,  2560]     NONE
 - 358: [  2560,     1]     NONE
 - 359: [  2560,     1]     NONE
 - 360: [  2560,     1]     NONE
 - 361: [  2560,     1]     NONE
 - 362: [ 10240,     1]     NONE
 - 363: [  2560,     1]     NONE
 - 364: [  2560,     1]     NONE
 - 365: [  2560,     1]     NONE
 - 366: [  2560,  2560]     NONE
 - 367: [  2560,     1]     NONE
 - 368: [  2560,  2560]     NONE
 - 369: [  2560,     1]     NONE
 - 370: [ 10240,  2560]     NONE
 - 371: [  2560, 10240]     NONE
 - 372: [  2560,     1]     NONE
 - 373: [  2560,  2560]     NONE
 - 374: [  2560,  2560]     NONE
 - 375: [  2560,     1]     NONE
 - 376: [  2560,     1]     NONE
 - 377: [  2560,     1]     NONE
 - 378: [  2560,     1]     NONE
 - 379: [ 10240,     1]     NONE
 - 380: [  2560,     1]     NONE
 - 381: [  2560,     1]     NONE
 - 382: [  2560,     1]     NONE
 - 383: [  2560,  2560]     NONE
 - 384: [  2560,     1]     NONE
 - 385: [  2560,  2560]     NONE
 - 386: [  2560,     1]     NONE
 - 387: [ 10240,  2560]     NONE
 - 388: [  2560, 10240]     NONE
 - 389: [  2560,     1]     NONE
 - 390: [  2560,  2560]     NONE
 - 391: [  2560,  2560]     NONE
 - 392: [  2560,     1]     NONE
 - 393: [  2560,     1]     NONE
 - 394: [  2560,     1]     NONE
 - 395: [  2560,     1]     NONE
 - 396: [ 10240,     1]     NONE
 - 397: [  2560,     1]     NONE
 - 398: [  2560,     1]     NONE
 - 399: [  2560,     1]     NONE
 - 400: [  2560,  2560]     NONE
 - 401: [  2560,     1]     NONE
 - 402: [  2560,  2560]     NONE
 - 403: [  2560,     1]     NONE
 - 404: [ 10240,  2560]     NONE
 - 405: [  2560, 10240]     NONE
 - 406: [  2560,     1]     NONE
 - 407: [  2560,  2560]     NONE
 - 408: [  2560,  2560]     NONE
 - 409: [  2560,     1]     NONE
 - 410: [  2560,     1]     NONE
 - 411: [  2560,     1]     NONE
 - 412: [  2560,     1]     NONE
 - 413: [ 10240,     1]     NONE
 - 414: [  2560,     1]     NONE
 - 415: [  2560,     1]     NONE
 - 416: [  2560,     1]     NONE
 - 417: [  2560,  2560]     NONE
 - 418: [  2560,     1]     NONE
 - 419: [  2560,  2560]     NONE
 - 420: [  2560,     1]     NONE
 - 421: [ 10240,  2560]     NONE
 - 422: [  2560, 10240]     NONE
 - 423: [  2560,     1]     NONE
 - 424: [  2560,  2560]     NONE
 - 425: [  2560,  2560]     NONE
 - 426: [  2560,     1]     NONE
 - 427: [  2560,     1]     NONE
 - 428: [  2560,     1]     NONE
 - 429: [  2560,     1]     NONE
 - 430: [ 10240,     1]     NONE
 - 431: [  2560,     1]     NONE
 - 432: [  2560,     1]     NONE
 - 433: [  2560,     1]     NONE
 - 434: [  2560,  2560]     NONE
 - 435: [  2560,     1]     NONE
 - 436: [  2560,  2560]     NONE
 - 437: [  2560,     1]     NONE
 - 438: [ 10240,  2560]     NONE
 - 439: [  2560, 10240]     NONE
 - 440: [  2560,     1]     NONE
 - 441: [  2560,  2560]     NONE
 - 442: [  2560,  2560]     NONE
 - 443: [  2560,     1]     NONE
 - 444: [  2560,     1]     NONE
 - 445: [  2560,     1]     NONE
 - 446: [  2560,     1]     NONE
 - 447: [ 10240,     1]     NONE
 - 448: [  2560,     1]     NONE
 - 449: [  2560,     1]     NONE
 - 450: [  2560,     1]     NONE
 - 451: [  2560,  2560]     NONE
 - 452: [  2560,     1]     NONE
 - 453: [  2560,  2560]     NONE
 - 454: [  2560,     1]     NONE
 - 455: [ 10240,  2560]     NONE
 - 456: [  2560, 10240]     NONE
 - 457: [  2560,     1]     NONE
 - 458: [  2560,  2560]     NONE
 - 459: [  2560,  2560]     NONE
 - 460: [  2560,     1]     NONE
 - 461: [  2560,     1]     NONE
 - 462: [  2560,     1]     NONE
 - 463: [  2560,     1]     NONE
 - 464: [ 10240,     1]     NONE
 - 465: [  2560,     1]     NONE
 - 466: [  2560,     1]     NONE
 - 467: [  2560,     1]     NONE
 - 468: [  2560,  2560]     NONE
 - 469: [  2560,     1]     NONE
 - 470: [  2560,  2560]     NONE
 - 471: [  2560,     1]     NONE
 - 472: [ 10240,  2560]     NONE
 - 473: [  2560, 10240]     NONE
 - 474: [  2560,     1]     NONE
 - 475: [  2560,  2560]     NONE
 - 476: [  2560,  2560]     NONE
 - 477: [  2560,     1]     NONE
 - 478: [  2560,     1]     NONE
 - 479: [  2560,     1]     NONE
 - 480: [  2560,     1]     NONE
 - 481: [ 10240,     1]     NONE
 - 482: [  2560,     1]     NONE
 - 483: [  2560,     1]     NONE
 - 484: [  2560,     1]     NONE
 - 485: [  2560,  2560]     NONE
 - 486: [  2560,     1]     NONE
 - 487: [  2560,  2560]     NONE
 - 488: [  2560,     1]     NONE
 - 489: [ 10240,  2560]     NONE
 - 490: [  2560, 10240]     NONE
 - 491: [  2560,     1]     NONE
 - 492: [  2560,  2560]     NONE
 - 493: [  2560,  2560]     NONE
 - 494: [  2560,     1]     NONE
 - 495: [  2560,     1]     NONE
 - 496: [  2560,     1]     NONE
 - 497: [  2560,     1]     NONE
 - 498: [ 10240,     1]     NONE
 - 499: [  2560,     1]     NONE
 - 500: [  2560,     1]     NONE
 - 501: [  2560,     1]     NONE
 - 502: [  2560,  2560]     NONE
 - 503: [  2560,     1]     NONE
 - 504: [  2560,  2560]     NONE
 - 505: [  2560,     1]     NONE
 - 506: [ 10240,  2560]     NONE
 - 507: [  2560, 10240]     NONE
 - 508: [  2560,     1]     NONE
 - 509: [  2560,  2560]     NONE
 - 510: [  2560,  2560]     NONE
 - 511: [  2560,     1]     NONE
 - 512: [  2560,     1]     NONE
 - 513: [  2560,     1]     NONE
 - 514: [  2560,     1]     NONE
 - 515: [ 10240,     1]     NONE
 - 516: [  2560,     1]     NONE
 - 517: [  2560,     1]     NONE
 - 518: [  2560,     1]     NONE
 - 519: [  2560,  2560]     NONE
 - 520: [  2560,     1]     NONE
 - 521: [  2560,  2560]     NONE
 - 522: [  2560,     1]     NONE
 - 523: [ 10240,  2560]     NONE
 - 524: [  2560, 10240]     NONE
 - 525: [  2560,     1]     NONE
 - 526: [  2560,  2560]     NONE
 - 527: [  2560,  2560]     NONE
 - 528: [  2560,     1]     NONE
 - 529: [  2560,     1]     NONE
 - 530: [  2560,     1]     NONE
 - 531: [  2560,     1]     NONE
 - 532: [ 10240,     1]     NONE
 - 533: [  2560,     1]     NONE
 - 534: [  2560,     1]     NONE
 - 535: [  2560,     1]     NONE
 - 536: [  2560,  2560]     NONE
 - 537: [  2560,     1]     NONE
 - 538: [  2560, 102400]     NONE
 - 539: [  2560,     1]     NONE
 - 540: [ 10240,  2560]     NONE
 - 541: [  2560, 10240]     NONE
 - 542: [  2560,     1]     NONE
 - 543: [  2560,  2560]     NONE
 - 544: [  2560,  2560]     NONE
 - 545: [  2560,     1]     NONE
 - 546: [  2560,     1]     NONE
 - 547: [  2560,     1]     NONE
 - 548: [  2560,     1]     NONE
 - 549: [ 10240,     1]     NONE
 - 550: [  2560,     1]     NONE
 - 551: [  2560,     1]     NONE
perf_total_per_op_us[             ADD] =   0.321 ms
perf_total_per_op_us[             MUL] =   0.065 ms
perf_total_per_op_us[            NORM] =   0.065 ms
perf_total_per_op_us[         MUL_MAT] =   0.257 ms
perf_total_per_op_us[           SCALE] =   0.032 ms
perf_total_per_op_us[             CPY] =   0.096 ms
perf_total_per_op_us[         RESHAPE] =   0.096 ms
perf_total_per_op_us[            VIEW] =   0.128 ms
perf_total_per_op_us[         PERMUTE] =   0.064 ms
perf_total_per_op_us[       TRANSPOSE] =   0.032 ms
perf_total_per_op_us[        GET_ROWS] =   0.001 ms
perf_total_per_op_us[   DIAG_MASK_INF] =   0.032 ms
perf_total_per_op_us[        SOFT_MAX] =   0.032 ms
perf_total_per_op_us[            ROPE] =   0.064 ms
perf_total_per_op_us[           UNARY] =   0.032 ms
========================================
user=== GRAPH ===
n_nodes = 1317
 -   0: [  2560,     1,     1]         GET_ROWS   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   1: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   2: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   3: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   4: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   5: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   6: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   7: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   8: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   9: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  10: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  11: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  12: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  13: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  14: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  15: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  16: [    14,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  17: [   128,    14,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  18: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  19: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  20: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  21: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  22: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  23: [    14,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  24: [    14,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  25: [    14,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  26: [    14,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  27: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  28: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  29: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  30: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  31: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  32: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  33: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  34: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  35: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  36: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  37: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  38: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  39: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  40: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  41: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  42: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  43: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  44: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  45: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  46: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  47: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  48: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  49: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  50: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  51: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  52: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  53: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  54: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  55: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  56: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  57: [    14,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  58: [   128,    14,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  59: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  60: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  61: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  62: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  63: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  64: [    14,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  65: [    14,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  66: [    14,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  67: [    14,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  68: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  69: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  70: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  71: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  72: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  73: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  74: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  75: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  76: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  77: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  78: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  79: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  80: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  81: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  82: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  83: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  84: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  85: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  86: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  87: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  88: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  89: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  90: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  91: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  92: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  93: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  94: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  95: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  96: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  97: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  98: [    14,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  99: [   128,    14,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 100: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 102: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 103: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 104: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 105: [    14,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 106: [    14,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 107: [    14,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 108: [    14,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 109: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 110: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 111: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 112: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 113: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 114: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 115: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 116: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 117: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 118: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 119: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 120: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 121: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 122: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 123: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 124: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 125: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 127: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 128: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 129: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 130: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 131: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 132: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 133: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 134: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 135: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 136: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 137: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 138: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 139: [    14,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 140: [   128,    14,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 141: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 143: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 144: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 145: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 146: [    14,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 147: [    14,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 148: [    14,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 149: [    14,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 150: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 151: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 152: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 153: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 154: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 155: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 156: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 157: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 158: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 159: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 160: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 161: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 162: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 163: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 164: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 165: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 166: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 168: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 169: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 170: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 171: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 172: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 173: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 174: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 175: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 176: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 177: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 178: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 179: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 180: [    14,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 181: [   128,    14,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 182: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 184: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 185: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 186: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 187: [    14,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 188: [    14,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 189: [    14,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 190: [    14,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 191: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 192: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 193: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 194: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 195: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 196: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 197: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 198: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 199: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 200: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 201: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 202: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 203: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 204: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 205: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 206: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 207: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 209: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 210: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 211: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 212: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 213: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 214: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 215: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 216: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 217: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 218: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 219: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 220: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 221: [    14,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 222: [   128,    14,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 223: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 225: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 226: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 227: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 228: [    14,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 229: [    14,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 230: [    14,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 231: [    14,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 232: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 233: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 234: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 235: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 236: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 237: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 238: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 239: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 240: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 241: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 242: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 243: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 244: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 245: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 246: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 247: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 248: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 250: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 251: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 252: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 253: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 254: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 255: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 256: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 257: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 258: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 259: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 260: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 261: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 262: [    14,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 263: [   128,    14,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 264: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 266: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 267: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 268: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 269: [    14,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 270: [    14,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 271: [    14,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 272: [    14,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 273: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 274: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 275: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 276: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 277: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 278: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 279: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 280: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 281: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 282: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 283: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 284: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 285: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 286: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 287: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 288: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 289: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 291: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 292: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 293: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 294: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 295: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 296: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 297: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 298: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 299: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 300: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 301: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 302: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 303: [    14,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 304: [   128,    14,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 305: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 307: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 308: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 309: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 310: [    14,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 311: [    14,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 312: [    14,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 313: [    14,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 314: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 315: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 316: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 317: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 318: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 319: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 320: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 321: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 322: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 323: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 324: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 325: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 326: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 327: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 328: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 329: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 330: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 331: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 332: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 333: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 334: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 335: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 336: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 337: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 338: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 339: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 340: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 341: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 342: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 343: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 344: [    14,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 345: [   128,    14,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 346: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 347: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 348: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 349: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 350: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 351: [    14,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 352: [    14,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 353: [    14,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 354: [    14,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 355: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 356: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 357: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 358: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 359: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 360: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 361: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 362: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 363: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 364: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 365: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 366: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 367: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 368: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 369: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 370: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 371: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 372: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 373: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 374: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 375: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 376: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 377: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 378: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 379: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 380: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 381: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 382: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 383: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 384: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 385: [    14,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 386: [   128,    14,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 387: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 388: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 389: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 390: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 391: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 392: [    14,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 393: [    14,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 394: [    14,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 395: [    14,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 396: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 397: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 398: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 399: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 400: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 401: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 402: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 403: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 404: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 405: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 406: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 407: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 408: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 409: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 410: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 411: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 412: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 413: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 414: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 415: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 416: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 417: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 418: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 419: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 420: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 421: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 422: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 423: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 424: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 425: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 426: [    14,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 427: [   128,    14,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 428: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 429: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 430: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 431: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 432: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 433: [    14,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 434: [    14,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 435: [    14,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 436: [    14,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 437: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 438: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 439: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 440: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 441: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 442: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 443: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 444: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 445: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 446: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 447: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 448: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 449: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 450: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 451: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 452: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 453: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 454: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 455: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 456: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 457: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 458: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 459: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 460: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 461: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 462: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 463: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 464: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 465: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 466: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 467: [    14,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 468: [   128,    14,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 469: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 470: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 471: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 472: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 473: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 474: [    14,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 475: [    14,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 476: [    14,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 477: [    14,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 478: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 479: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 480: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 481: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 482: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 483: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 484: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 485: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 486: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 487: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 488: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 489: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 490: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 491: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 492: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 493: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 494: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 495: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 496: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 497: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 498: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 499: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 500: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 501: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 502: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 503: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 504: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 505: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 506: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 507: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 508: [    14,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 509: [   128,    14,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 510: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 511: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 512: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 513: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 514: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 515: [    14,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 516: [    14,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 517: [    14,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 518: [    14,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 519: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 520: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 521: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 522: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 523: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 524: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 525: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 526: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 527: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 528: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 529: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 530: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 531: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 532: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 533: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 534: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 535: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 536: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 537: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 538: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 539: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 540: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 541: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 542: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 543: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 544: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 545: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 546: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 547: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 548: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 549: [    14,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 550: [   128,    14,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 551: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 552: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 553: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 554: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 555: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 556: [    14,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 557: [    14,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 558: [    14,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 559: [    14,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 560: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 561: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 562: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 563: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 564: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 565: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 566: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 567: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 568: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 569: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 570: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 571: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 572: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 573: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 574: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 575: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 576: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 577: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 578: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 579: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 580: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 581: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 582: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 583: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 584: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 585: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 586: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 587: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 588: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 589: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 590: [    14,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 591: [   128,    14,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 592: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 593: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 594: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 595: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 596: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 597: [    14,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 598: [    14,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 599: [    14,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 600: [    14,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 601: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 602: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 603: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 604: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 605: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 606: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 607: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 608: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 609: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 610: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 611: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 612: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 613: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 614: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 615: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 616: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 617: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 618: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 619: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 620: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 621: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 622: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 623: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 624: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 625: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 626: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 627: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 628: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 629: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 630: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 631: [    14,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 632: [   128,    14,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 633: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 634: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 635: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 636: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 637: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 638: [    14,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 639: [    14,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 640: [    14,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 641: [    14,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 642: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 643: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 644: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 645: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 646: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 647: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 648: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 649: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 650: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 651: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 652: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 653: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 654: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 655: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 656: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 657: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 658: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 659: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 660: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 661: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 662: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 663: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 664: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 665: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 666: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 667: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 668: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 669: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 670: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 671: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 672: [    14,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 673: [   128,    14,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 674: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 675: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 676: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 677: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 678: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 679: [    14,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 680: [    14,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 681: [    14,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 682: [    14,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 683: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 684: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 685: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 686: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 687: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 688: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 689: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 690: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 691: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 692: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 693: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 694: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 695: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 696: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 697: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 698: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 699: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 700: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 701: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 702: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 703: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 704: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 705: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 706: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 707: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 708: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 709: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 710: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 711: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 712: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 713: [    14,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 714: [   128,    14,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 715: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 716: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 717: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 718: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 719: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 720: [    14,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 721: [    14,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 722: [    14,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 723: [    14,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 724: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 725: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 726: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 727: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 728: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 729: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 730: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 731: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 732: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 733: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 734: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 735: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 736: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 737: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 738: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 739: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 740: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 741: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 742: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 743: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 744: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 745: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 746: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 747: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 748: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 749: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 750: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 751: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 752: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 753: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 754: [    14,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 755: [   128,    14,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 756: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 757: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 758: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 759: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 760: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 761: [    14,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 762: [    14,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 763: [    14,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 764: [    14,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 765: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 766: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 767: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 768: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 769: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 770: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 771: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 772: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 773: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 774: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 775: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 776: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 777: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 778: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 779: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 780: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 781: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 782: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 783: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 784: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 785: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 786: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 787: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 788: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 789: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 790: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 791: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 792: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 793: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 794: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 795: [    14,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 796: [   128,    14,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 797: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 798: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 799: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 800: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 801: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 802: [    14,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 803: [    14,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 804: [    14,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 805: [    14,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 806: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 807: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 808: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 809: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 810: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 811: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 812: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 813: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 814: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 815: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 816: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 817: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 818: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 819: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 820: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 821: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 822: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 823: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 824: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 825: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 826: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 827: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 828: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 829: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 830: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 831: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 832: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 833: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 834: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 835: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 836: [    14,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 837: [   128,    14,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 838: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 839: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 840: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 841: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 842: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 843: [    14,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 844: [    14,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 845: [    14,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 846: [    14,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 847: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 848: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 849: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 850: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 851: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 852: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 853: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 854: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 855: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 856: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 857: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 858: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 859: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 860: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 861: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 862: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 863: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 864: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 865: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 866: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 867: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 868: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 869: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 870: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 871: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 872: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 873: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 874: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 875: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 876: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 877: [    14,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 878: [   128,    14,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 879: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 880: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 881: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 882: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 883: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 884: [    14,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 885: [    14,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 886: [    14,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 887: [    14,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 888: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 889: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 890: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 891: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 892: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 893: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 894: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 895: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 896: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 897: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 898: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 899: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 900: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 901: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 902: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 903: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 904: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 905: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 906: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 907: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 908: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 909: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 910: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 911: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 912: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 913: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 914: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 915: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 916: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 917: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 918: [    14,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 919: [   128,    14,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 920: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 921: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 922: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 923: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 924: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 925: [    14,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 926: [    14,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 927: [    14,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 928: [    14,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 929: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 930: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 931: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 932: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 933: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 934: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 935: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 936: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 937: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 938: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 939: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 940: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 941: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 942: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 943: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 944: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 945: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 946: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 947: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 948: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 949: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 950: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 951: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 952: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 953: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 954: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 955: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 956: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 957: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 958: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 959: [    14,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 960: [   128,    14,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 961: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 962: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 963: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 964: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 965: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 966: [    14,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 967: [    14,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 968: [    14,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 969: [    14,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 970: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 971: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 972: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 973: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 974: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 975: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 976: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 977: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 978: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 979: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 980: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 981: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 982: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 983: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 984: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 985: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 986: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 987: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 988: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 989: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 990: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 991: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 992: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 993: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 994: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 995: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 996: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 997: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 998: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 999: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1000: [    14,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1001: [   128,    14,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1002: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1003: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1004: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1005: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1006: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1007: [    14,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1008: [    14,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1009: [    14,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1010: [    14,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1011: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1012: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1013: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1014: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1015: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1016: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1017: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1018: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1019: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1020: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1021: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1022: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1023: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1024: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1025: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1026: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1027: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1028: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1029: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1030: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1031: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1032: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1033: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1034: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1035: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1036: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1037: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1038: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1039: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1040: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1041: [    14,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1042: [   128,    14,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1043: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1044: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1045: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1046: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1047: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1048: [    14,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1049: [    14,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1050: [    14,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1051: [    14,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1052: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1053: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1054: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1055: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1056: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1057: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1058: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1059: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1060: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1061: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1062: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1063: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1064: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1065: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1066: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1067: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1068: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1069: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1070: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1071: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1072: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1073: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1074: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1075: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1076: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1077: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1078: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1079: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1080: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1081: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1082: [    14,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1083: [   128,    14,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1084: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1085: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1086: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1087: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1088: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1089: [    14,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1090: [    14,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1091: [    14,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1092: [    14,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1093: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1094: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1095: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1096: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1097: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1098: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1099: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1100: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1102: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1103: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1104: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1105: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1106: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1107: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1108: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1109: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1110: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1111: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1112: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1113: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1114: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1115: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1116: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1117: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1118: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1119: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1120: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1121: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1122: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1123: [    14,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1124: [   128,    14,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1125: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1127: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1128: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1129: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1130: [    14,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1131: [    14,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1132: [    14,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1133: [    14,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1134: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1135: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1136: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1137: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1138: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1139: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1140: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1141: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1143: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1144: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1145: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1146: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1147: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1148: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1149: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1150: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1151: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1152: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1153: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1154: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1155: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1156: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1157: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1158: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1159: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1160: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1161: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1162: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1163: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1164: [    14,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1165: [   128,    14,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1166: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1168: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1169: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1170: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1171: [    14,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1172: [    14,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1173: [    14,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1174: [    14,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1175: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1176: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1177: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1178: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1179: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1180: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1181: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1182: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1184: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1185: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1186: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1187: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1188: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1189: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1190: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1191: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1192: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1193: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1194: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1195: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1196: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1197: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1198: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1199: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1200: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1201: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1202: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1203: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1204: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1205: [    14,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1206: [   128,    14,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1207: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1209: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1210: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1211: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1212: [    14,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1213: [    14,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1214: [    14,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1215: [    14,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1216: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1217: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1218: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1219: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1220: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1221: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1222: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1223: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1225: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1226: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1227: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1228: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1229: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1230: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1231: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1232: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1233: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1234: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1235: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1236: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1237: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1238: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1239: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1240: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1241: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1242: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1243: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1244: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1245: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1246: [    14,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1247: [   128,    14,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1248: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1250: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1251: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1252: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1253: [    14,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1254: [    14,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1255: [    14,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1256: [    14,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1257: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1258: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1259: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1260: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1261: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1262: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1263: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1264: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1266: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1267: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1268: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1269: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1270: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1271: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1272: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1273: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1274: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1275: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1276: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1277: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1278: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1279: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1280: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1281: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1282: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1283: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1284: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1285: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1286: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1287: [    14,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1288: [   128,    14,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1289: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1291: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1292: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1293: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1294: [    14,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1295: [    14,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1296: [    14,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1297: [    14,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1298: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1299: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1300: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1301: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1302: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1303: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1304: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1305: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1307: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1308: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1309: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1310: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1311: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1312: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1313: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1314: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1315: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1316: [ 102400,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
n_leafs = 552
 -   0: [  2560,  2560]     NONE
 -   1: [  2560,     1]     NONE
 -   2: [  2560, 102400]     NONE
 -   3: [     1,     1]     NONE
 -   4: [  2560,     1]     NONE
 -   5: [  2560,     1]     NONE
 -   6: [ 41943040,     1]     NONE
 -   7: [  2560,  2560]     NONE
 -   8: [  2560,     1]     NONE
 -   9: [ 41943040,     1]     NONE
 -  10: [  2560,  2560]     NONE
 -  11: [  2560,     1]     NONE
 -  12: [ 10240,  2560]     NONE
 -  13: [  2560, 10240]     NONE
 -  14: [  2560,     1]     NONE
 -  15: [  2560,  2560]     NONE
 -  16: [  2560,  2560]     NONE
 -  17: [  2560,     1]     NONE
 -  18: [     1,     1]     NONE
 -  19: [  2560,     1]     NONE
 -  20: [  2560,     1]     NONE
 -  21: [  2560,     1]     NONE
 -  22: [ 10240,     1]     NONE
 -  23: [  2560,     1]     NONE
 -  24: [  2560,     1]     NONE
 -  25: [  2560,     1]     NONE
 -  26: [  2560,  2560]     NONE
 -  27: [  2560,     1]     NONE
 -  28: [  2560,  2560]     NONE
 -  29: [  2560,     1]     NONE
 -  30: [ 10240,  2560]     NONE
 -  31: [  2560, 10240]     NONE
 -  32: [  2560,     1]     NONE
 -  33: [  2560,  2560]     NONE
 -  34: [  2560,  2560]     NONE
 -  35: [  2560,     1]     NONE
 -  36: [  2560,     1]     NONE
 -  37: [  2560,     1]     NONE
 -  38: [  2560,     1]     NONE
 -  39: [ 10240,     1]     NONE
 -  40: [  2560,     1]     NONE
 -  41: [  2560,     1]     NONE
 -  42: [  2560,     1]     NONE
 -  43: [  2560,  2560]     NONE
 -  44: [  2560,     1]     NONE
 -  45: [  2560,  2560]     NONE
 -  46: [  2560,     1]     NONE
 -  47: [ 10240,  2560]     NONE
 -  48: [  2560, 10240]     NONE
 -  49: [  2560,     1]     NONE
 -  50: [  2560,  2560]     NONE
 -  51: [  2560,  2560]     NONE
 -  52: [  2560,     1]     NONE
 -  53: [  2560,     1]     NONE
 -  54: [  2560,     1]     NONE
 -  55: [  2560,     1]     NONE
 -  56: [ 10240,     1]     NONE
 -  57: [  2560,     1]     NONE
 -  58: [  2560,     1]     NONE
 -  59: [  2560,     1]     NONE
 -  60: [  2560,  2560]     NONE
 -  61: [  2560,     1]     NONE
 -  62: [  2560,  2560]     NONE
 -  63: [  2560,     1]     NONE
 -  64: [ 10240,  2560]     NONE
 -  65: [  2560, 10240]     NONE
 -  66: [  2560,     1]     NONE
 -  67: [  2560,  2560]     NONE
 -  68: [  2560,  2560]     NONE
 -  69: [  2560,     1]     NONE
 -  70: [  2560,     1]     NONE
 -  71: [  2560,     1]     NONE
 -  72: [  2560,     1]     NONE
 -  73: [ 10240,     1]     NONE
 -  74: [  2560,     1]     NONE
 -  75: [  2560,     1]     NONE
 -  76: [  2560,     1]     NONE
 -  77: [  2560,  2560]     NONE
 -  78: [  2560,     1]     NONE
 -  79: [  2560,  2560]     NONE
 -  80: [  2560,     1]     NONE
 -  81: [ 10240,  2560]     NONE
 -  82: [  2560, 10240]     NONE
 -  83: [  2560,     1]     NONE
 -  84: [  2560,  2560]     NONE
 -  85: [  2560,  2560]     NONE
 -  86: [  2560,     1]     NONE
 -  87: [  2560,     1]     NONE
 -  88: [  2560,     1]     NONE
 -  89: [  2560,     1]     NONE
 -  90: [ 10240,     1]     NONE
 -  91: [  2560,     1]     NONE
 -  92: [  2560,     1]     NONE
 -  93: [  2560,     1]     NONE
 -  94: [  2560,  2560]     NONE
 -  95: [  2560,     1]     NONE
 -  96: [  2560,  2560]     NONE
 -  97: [  2560,     1]     NONE
 -  98: [ 10240,  2560]     NONE
 -  99: [  2560, 10240]     NONE
 - 100: [  2560,     1]     NONE
 - 101: [  2560,  2560]     NONE
 - 102: [  2560,  2560]     NONE
 - 103: [  2560,     1]     NONE
 - 104: [  2560,     1]     NONE
 - 105: [  2560,     1]     NONE
 - 106: [  2560,     1]     NONE
 - 107: [ 10240,     1]     NONE
 - 108: [  2560,     1]     NONE
 - 109: [  2560,     1]     NONE
 - 110: [  2560,     1]     NONE
 - 111: [  2560,  2560]     NONE
 - 112: [  2560,     1]     NONE
 - 113: [  2560,  2560]     NONE
 - 114: [  2560,     1]     NONE
 - 115: [ 10240,  2560]     NONE
 - 116: [  2560, 10240]     NONE
 - 117: [  2560,     1]     NONE
 - 118: [  2560,  2560]     NONE
 - 119: [  2560,  2560]     NONE
 - 120: [  2560,     1]     NONE
 - 121: [  2560,     1]     NONE
 - 122: [  2560,     1]     NONE
 - 123: [  2560,     1]     NONE
 - 124: [ 10240,     1]     NONE
 - 125: [  2560,     1]     NONE
 - 126: [  2560,     1]     NONE
 - 127: [  2560,     1]     NONE
 - 128: [  2560,  2560]     NONE
 - 129: [  2560,     1]     NONE
 - 130: [  2560,  2560]     NONE
 - 131: [  2560,     1]     NONE
 - 132: [ 10240,  2560]     NONE
 - 133: [  2560, 10240]     NONE
 - 134: [  2560,     1]     NONE
 - 135: [  2560,  2560]     NONE
 - 136: [  2560,  2560]     NONE
 - 137: [  2560,     1]     NONE
 - 138: [  2560,     1]     NONE
 - 139: [  2560,     1]     NONE
 - 140: [  2560,     1]     NONE
 - 141: [ 10240,     1]     NONE
 - 142: [  2560,     1]     NONE
 - 143: [  2560,     1]     NONE
 - 144: [  2560,     1]     NONE
 - 145: [  2560,  2560]     NONE
 - 146: [  2560,     1]     NONE
 - 147: [  2560,  2560]     NONE
 - 148: [  2560,     1]     NONE
 - 149: [ 10240,  2560]     NONE
 - 150: [  2560, 10240]     NONE
 - 151: [  2560,     1]     NONE
 - 152: [  2560,  2560]     NONE
 - 153: [  2560,  2560]     NONE
 - 154: [  2560,     1]     NONE
 - 155: [  2560,     1]     NONE
 - 156: [  2560,     1]     NONE
 - 157: [  2560,     1]     NONE
 - 158: [ 10240,     1]     NONE
 - 159: [  2560,     1]     NONE
 - 160: [  2560,     1]     NONE
 - 161: [  2560,     1]     NONE
 - 162: [  2560,  2560]     NONE
 - 163: [  2560,     1]     NONE
 - 164: [  2560,  2560]     NONE
 - 165: [  2560,     1]     NONE
 - 166: [ 10240,  2560]     NONE
 - 167: [  2560, 10240]     NONE
 - 168: [  2560,     1]     NONE
 - 169: [  2560,  2560]     NONE
 - 170: [  2560,  2560]     NONE
 - 171: [  2560,     1]     NONE
 - 172: [  2560,     1]     NONE
 - 173: [  2560,     1]     NONE
 - 174: [  2560,     1]     NONE
 - 175: [ 10240,     1]     NONE
 - 176: [  2560,     1]     NONE
 - 177: [  2560,     1]     NONE
 - 178: [  2560,     1]     NONE
 - 179: [  2560,  2560]     NONE
 - 180: [  2560,     1]     NONE
 - 181: [  2560,  2560]     NONE
 - 182: [  2560,     1]     NONE
 - 183: [ 10240,  2560]     NONE
 - 184: [  2560, 10240]     NONE
 - 185: [  2560,     1]     NONE
 - 186: [  2560,  2560]     NONE
 - 187: [  2560,  2560]     NONE
 - 188: [  2560,     1]     NONE
 - 189: [  2560,     1]     NONE
 - 190: [  2560,     1]     NONE
 - 191: [  2560,     1]     NONE
 - 192: [ 10240,     1]     NONE
 - 193: [  2560,     1]     NONE
 - 194: [  2560,     1]     NONE
 - 195: [  2560,     1]     NONE
 - 196: [  2560,  2560]     NONE
 - 197: [  2560,     1]     NONE
 - 198: [  2560,  2560]     NONE
 - 199: [  2560,     1]     NONE
 - 200: [ 10240,  2560]     NONE
 - 201: [  2560, 10240]     NONE
 - 202: [  2560,     1]     NONE
 - 203: [  2560,  2560]     NONE
 - 204: [  2560,  2560]     NONE
 - 205: [  2560,     1]     NONE
 - 206: [  2560,     1]     NONE
 - 207: [  2560,     1]     NONE
 - 208: [  2560,     1]     NONE
 - 209: [ 10240,     1]     NONE
 - 210: [  2560,     1]     NONE
 - 211: [  2560,     1]     NONE
 - 212: [  2560,     1]     NONE
 - 213: [  2560,  2560]     NONE
 - 214: [  2560,     1]     NONE
 - 215: [  2560,  2560]     NONE
 - 216: [  2560,     1]     NONE
 - 217: [ 10240,  2560]     NONE
 - 218: [  2560, 10240]     NONE
 - 219: [  2560,     1]     NONE
 - 220: [  2560,  2560]     NONE
 - 221: [  2560,  2560]     NONE
 - 222: [  2560,     1]     NONE
 - 223: [  2560,     1]     NONE
 - 224: [  2560,     1]     NONE
 - 225: [  2560,     1]     NONE
 - 226: [ 10240,     1]     NONE
 - 227: [  2560,     1]     NONE
 - 228: [  2560,     1]     NONE
 - 229: [  2560,     1]     NONE
 - 230: [  2560,  2560]     NONE
 - 231: [  2560,     1]     NONE
 - 232: [  2560,  2560]     NONE
 - 233: [  2560,     1]     NONE
 - 234: [ 10240,  2560]     NONE
 - 235: [  2560, 10240]     NONE
 - 236: [  2560,     1]     NONE
 - 237: [  2560,  2560]     NONE
 - 238: [  2560,  2560]     NONE
 - 239: [  2560,     1]     NONE
 - 240: [  2560,     1]     NONE
 - 241: [  2560,     1]     NONE
 - 242: [  2560,     1]     NONE
 - 243: [ 10240,     1]     NONE
 - 244: [  2560,     1]     NONE
 - 245: [  2560,     1]     NONE
 - 246: [  2560,     1]     NONE
 - 247: [  2560,  2560]     NONE
 - 248: [  2560,     1]     NONE
 - 249: [  2560,  2560]     NONE
 - 250: [  2560,     1]     NONE
 - 251: [ 10240,  2560]     NONE
 - 252: [  2560, 10240]     NONE
 - 253: [  2560,     1]     NONE
 - 254: [  2560,  2560]     NONE
 - 255: [  2560,  2560]     NONE
 - 256: [  2560,     1]     NONE
 - 257: [  2560,     1]     NONE
 - 258: [  2560,     1]     NONE
 - 259: [  2560,     1]     NONE
 - 260: [ 10240,     1]     NONE
 - 261: [  2560,     1]     NONE
 - 262: [  2560,     1]     NONE
 - 263: [  2560,     1]     NONE
 - 264: [  2560,  2560]     NONE
 - 265: [  2560,     1]     NONE
 - 266: [  2560,  2560]     NONE
 - 267: [  2560,     1]     NONE
 - 268: [ 10240,  2560]     NONE
 - 269: [  2560, 10240]     NONE
 - 270: [  2560,     1]     NONE
 - 271: [  2560,  2560]     NONE
 - 272: [  2560,  2560]     NONE
 - 273: [  2560,     1]     NONE
 - 274: [  2560,     1]     NONE
 - 275: [  2560,     1]     NONE
 - 276: [  2560,     1]     NONE
 - 277: [ 10240,     1]     NONE
 - 278: [  2560,     1]     NONE
 - 279: [  2560,     1]     NONE
 - 280: [  2560,     1]     NONE
 - 281: [  2560,  2560]     NONE
 - 282: [  2560,     1]     NONE
 - 283: [  2560,  2560]     NONE
 - 284: [  2560,     1]     NONE
 - 285: [ 10240,  2560]     NONE
 - 286: [  2560, 10240]     NONE
 - 287: [  2560,     1]     NONE
 - 288: [  2560,  2560]     NONE
 - 289: [  2560,  2560]     NONE
 - 290: [  2560,     1]     NONE
 - 291: [  2560,     1]     NONE
 - 292: [  2560,     1]     NONE
 - 293: [  2560,     1]     NONE
 - 294: [ 10240,     1]     NONE
 - 295: [  2560,     1]     NONE
 - 296: [  2560,     1]     NONE
 - 297: [  2560,     1]     NONE
 - 298: [  2560,  2560]     NONE
 - 299: [  2560,     1]     NONE
 - 300: [  2560,  2560]     NONE
 - 301: [  2560,     1]     NONE
 - 302: [ 10240,  2560]     NONE
 - 303: [  2560, 10240]     NONE
 - 304: [  2560,     1]     NONE
 - 305: [  2560,  2560]     NONE
 - 306: [  2560,  2560]     NONE
 - 307: [  2560,     1]     NONE
 - 308: [  2560,     1]     NONE
 - 309: [  2560,     1]     NONE
 - 310: [  2560,     1]     NONE
 - 311: [ 10240,     1]     NONE
 - 312: [  2560,     1]     NONE
 - 313: [  2560,     1]     NONE
 - 314: [  2560,     1]     NONE
 - 315: [  2560,  2560]     NONE
 - 316: [  2560,     1]     NONE
 - 317: [  2560,  2560]     NONE
 - 318: [  2560,     1]     NONE
 - 319: [ 10240,  2560]     NONE
 - 320: [  2560, 10240]     NONE
 - 321: [  2560,     1]     NONE
 - 322: [  2560,  2560]     NONE
 - 323: [  2560,  2560]     NONE
 - 324: [  2560,     1]     NONE
 - 325: [  2560,     1]     NONE
 - 326: [  2560,     1]     NONE
 - 327: [  2560,     1]     NONE
 - 328: [ 10240,     1]     NONE
 - 329: [  2560,     1]     NONE
 - 330: [  2560,     1]     NONE
 - 331: [  2560,     1]     NONE
 - 332: [  2560,  2560]     NONE
 - 333: [  2560,     1]     NONE
 - 334: [  2560,  2560]     NONE
 - 335: [  2560,     1]     NONE
 - 336: [ 10240,  2560]     NONE
 - 337: [  2560, 10240]     NONE
 - 338: [  2560,     1]     NONE
 - 339: [  2560,  2560]     NONE
 - 340: [  2560,  2560]     NONE
 - 341: [  2560,     1]     NONE
 - 342: [  2560,     1]     NONE
 - 343: [  2560,     1]     NONE
 - 344: [  2560,     1]     NONE
 - 345: [ 10240,     1]     NONE
 - 346: [  2560,     1]     NONE
 - 347: [  2560,     1]     NONE
 - 348: [  2560,     1]     NONE
 - 349: [  2560,  2560]     NONE
 - 350: [  2560,     1]     NONE
 - 351: [  2560,  2560]     NONE
 - 352: [  2560,     1]     NONE
 - 353: [ 10240,  2560]     NONE
 - 354: [  2560, 10240]     NONE
 - 355: [  2560,     1]     NONE
 - 356: [  2560,  2560]     NONE
 - 357: [  2560,  2560]     NONE
 - 358: [  2560,     1]     NONE
 - 359: [  2560,     1]     NONE
 - 360: [  2560,     1]     NONE
 - 361: [  2560,     1]     NONE
 - 362: [ 10240,     1]     NONE
 - 363: [  2560,     1]     NONE
 - 364: [  2560,     1]     NONE
 - 365: [  2560,     1]     NONE
 - 366: [  2560,  2560]     NONE
 - 367: [  2560,     1]     NONE
 - 368: [  2560,  2560]     NONE
 - 369: [  2560,     1]     NONE
 - 370: [ 10240,  2560]     NONE
 - 371: [  2560, 10240]     NONE
 - 372: [  2560,     1]     NONE
 - 373: [  2560,  2560]     NONE
 - 374: [  2560,  2560]     NONE
 - 375: [  2560,     1]     NONE
 - 376: [  2560,     1]     NONE
 - 377: [  2560,     1]     NONE
 - 378: [  2560,     1]     NONE
 - 379: [ 10240,     1]     NONE
 - 380: [  2560,     1]     NONE
 - 381: [  2560,     1]     NONE
 - 382: [  2560,     1]     NONE
 - 383: [  2560,  2560]     NONE
 - 384: [  2560,     1]     NONE
 - 385: [  2560,  2560]     NONE
 - 386: [  2560,     1]     NONE
 - 387: [ 10240,  2560]     NONE
 - 388: [  2560, 10240]     NONE
 - 389: [  2560,     1]     NONE
 - 390: [  2560,  2560]     NONE
 - 391: [  2560,  2560]     NONE
 - 392: [  2560,     1]     NONE
 - 393: [  2560,     1]     NONE
 - 394: [  2560,     1]     NONE
 - 395: [  2560,     1]     NONE
 - 396: [ 10240,     1]     NONE
 - 397: [  2560,     1]     NONE
 - 398: [  2560,     1]     NONE
 - 399: [  2560,     1]     NONE
 - 400: [  2560,  2560]     NONE
 - 401: [  2560,     1]     NONE
 - 402: [  2560,  2560]     NONE
 - 403: [  2560,     1]     NONE
 - 404: [ 10240,  2560]     NONE
 - 405: [  2560, 10240]     NONE
 - 406: [  2560,     1]     NONE
 - 407: [  2560,  2560]     NONE
 - 408: [  2560,  2560]     NONE
 - 409: [  2560,     1]     NONE
 - 410: [  2560,     1]     NONE
 - 411: [  2560,     1]     NONE
 - 412: [  2560,     1]     NONE
 - 413: [ 10240,     1]     NONE
 - 414: [  2560,     1]     NONE
 - 415: [  2560,     1]     NONE
 - 416: [  2560,     1]     NONE
 - 417: [  2560,  2560]     NONE
 - 418: [  2560,     1]     NONE
 - 419: [  2560,  2560]     NONE
 - 420: [  2560,     1]     NONE
 - 421: [ 10240,  2560]     NONE
 - 422: [  2560, 10240]     NONE
 - 423: [  2560,     1]     NONE
 - 424: [  2560,  2560]     NONE
 - 425: [  2560,  2560]     NONE
 - 426: [  2560,     1]     NONE
 - 427: [  2560,     1]     NONE
 - 428: [  2560,     1]     NONE
 - 429: [  2560,     1]     NONE
 - 430: [ 10240,     1]     NONE
 - 431: [  2560,     1]     NONE
 - 432: [  2560,     1]     NONE
 - 433: [  2560,     1]     NONE
 - 434: [  2560,  2560]     NONE
 - 435: [  2560,     1]     NONE
 - 436: [  2560,  2560]     NONE
 - 437: [  2560,     1]     NONE
 - 438: [ 10240,  2560]     NONE
 - 439: [  2560, 10240]     NONE
 - 440: [  2560,     1]     NONE
 - 441: [  2560,  2560]     NONE
 - 442: [  2560,  2560]     NONE
 - 443: [  2560,     1]     NONE
 - 444: [  2560,     1]     NONE
 - 445: [  2560,     1]     NONE
 - 446: [  2560,     1]     NONE
 - 447: [ 10240,     1]     NONE
 - 448: [  2560,     1]     NONE
 - 449: [  2560,     1]     NONE
 - 450: [  2560,     1]     NONE
 - 451: [  2560,  2560]     NONE
 - 452: [  2560,     1]     NONE
 - 453: [  2560,  2560]     NONE
 - 454: [  2560,     1]     NONE
 - 455: [ 10240,  2560]     NONE
 - 456: [  2560, 10240]     NONE
 - 457: [  2560,     1]     NONE
 - 458: [  2560,  2560]     NONE
 - 459: [  2560,  2560]     NONE
 - 460: [  2560,     1]     NONE
 - 461: [  2560,     1]     NONE
 - 462: [  2560,     1]     NONE
 - 463: [  2560,     1]     NONE
 - 464: [ 10240,     1]     NONE
 - 465: [  2560,     1]     NONE
 - 466: [  2560,     1]     NONE
 - 467: [  2560,     1]     NONE
 - 468: [  2560,  2560]     NONE
 - 469: [  2560,     1]     NONE
 - 470: [  2560,  2560]     NONE
 - 471: [  2560,     1]     NONE
 - 472: [ 10240,  2560]     NONE
 - 473: [  2560, 10240]     NONE
 - 474: [  2560,     1]     NONE
 - 475: [  2560,  2560]     NONE
 - 476: [  2560,  2560]     NONE
 - 477: [  2560,     1]     NONE
 - 478: [  2560,     1]     NONE
 - 479: [  2560,     1]     NONE
 - 480: [  2560,     1]     NONE
 - 481: [ 10240,     1]     NONE
 - 482: [  2560,     1]     NONE
 - 483: [  2560,     1]     NONE
 - 484: [  2560,     1]     NONE
 - 485: [  2560,  2560]     NONE
 - 486: [  2560,     1]     NONE
 - 487: [  2560,  2560]     NONE
 - 488: [  2560,     1]     NONE
 - 489: [ 10240,  2560]     NONE
 - 490: [  2560, 10240]     NONE
 - 491: [  2560,     1]     NONE
 - 492: [  2560,  2560]     NONE
 - 493: [  2560,  2560]     NONE
 - 494: [  2560,     1]     NONE
 - 495: [  2560,     1]     NONE
 - 496: [  2560,     1]     NONE
 - 497: [  2560,     1]     NONE
 - 498: [ 10240,     1]     NONE
 - 499: [  2560,     1]     NONE
 - 500: [  2560,     1]     NONE
 - 501: [  2560,     1]     NONE
 - 502: [  2560,  2560]     NONE
 - 503: [  2560,     1]     NONE
 - 504: [  2560,  2560]     NONE
 - 505: [  2560,     1]     NONE
 - 506: [ 10240,  2560]     NONE
 - 507: [  2560, 10240]     NONE
 - 508: [  2560,     1]     NONE
 - 509: [  2560,  2560]     NONE
 - 510: [  2560,  2560]     NONE
 - 511: [  2560,     1]     NONE
 - 512: [  2560,     1]     NONE
 - 513: [  2560,     1]     NONE
 - 514: [  2560,     1]     NONE
 - 515: [ 10240,     1]     NONE
 - 516: [  2560,     1]     NONE
 - 517: [  2560,     1]     NONE
 - 518: [  2560,     1]     NONE
 - 519: [  2560,  2560]     NONE
 - 520: [  2560,     1]     NONE
 - 521: [  2560,  2560]     NONE
 - 522: [  2560,     1]     NONE
 - 523: [ 10240,  2560]     NONE
 - 524: [  2560, 10240]     NONE
 - 525: [  2560,     1]     NONE
 - 526: [  2560,  2560]     NONE
 - 527: [  2560,  2560]     NONE
 - 528: [  2560,     1]     NONE
 - 529: [  2560,     1]     NONE
 - 530: [  2560,     1]     NONE
 - 531: [  2560,     1]     NONE
 - 532: [ 10240,     1]     NONE
 - 533: [  2560,     1]     NONE
 - 534: [  2560,     1]     NONE
 - 535: [  2560,     1]     NONE
 - 536: [  2560,  2560]     NONE
 - 537: [  2560,     1]     NONE
 - 538: [  2560, 102400]     NONE
 - 539: [  2560,     1]     NONE
 - 540: [ 10240,  2560]     NONE
 - 541: [  2560, 10240]     NONE
 - 542: [  2560,     1]     NONE
 - 543: [  2560,  2560]     NONE
 - 544: [  2560,  2560]     NONE
 - 545: [  2560,     1]     NONE
 - 546: [  2560,     1]     NONE
 - 547: [  2560,     1]     NONE
 - 548: [  2560,     1]     NONE
 - 549: [ 10240,     1]     NONE
 - 550: [  2560,     1]     NONE
 - 551: [  2560,     1]     NONE
perf_total_per_op_us[             ADD] =   0.321 ms
perf_total_per_op_us[             MUL] =   0.065 ms
perf_total_per_op_us[            NORM] =   0.065 ms
perf_total_per_op_us[         MUL_MAT] =   0.257 ms
perf_total_per_op_us[           SCALE] =   0.032 ms
perf_total_per_op_us[             CPY] =   0.096 ms
perf_total_per_op_us[         RESHAPE] =   0.096 ms
perf_total_per_op_us[            VIEW] =   0.128 ms
perf_total_per_op_us[         PERMUTE] =   0.064 ms
perf_total_per_op_us[       TRANSPOSE] =   0.032 ms
perf_total_per_op_us[        GET_ROWS] =   0.001 ms
perf_total_per_op_us[   DIAG_MASK_INF] =   0.032 ms
perf_total_per_op_us[        SOFT_MAX] =   0.032 ms
perf_total_per_op_us[            ROPE] =   0.064 ms
perf_total_per_op_us[           UNARY] =   0.032 ms
========================================
user=== GRAPH ===
n_nodes = 1317
 -   0: [  2560,     1,     1]         GET_ROWS   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   1: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   2: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   3: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   4: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   5: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   6: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   7: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   8: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   9: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  10: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  11: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  12: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  13: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  14: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  15: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  16: [    15,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  17: [   128,    15,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  18: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  19: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  20: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  21: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  22: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  23: [    15,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  24: [    15,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  25: [    15,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  26: [    15,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  27: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  28: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  29: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  30: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  31: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  32: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  33: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  34: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  35: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  36: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  37: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  38: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  39: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  40: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  41: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  42: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  43: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  44: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  45: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  46: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  47: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  48: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  49: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  50: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  51: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  52: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  53: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  54: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  55: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  56: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  57: [    15,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  58: [   128,    15,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  59: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  60: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  61: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  62: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  63: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  64: [    15,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  65: [    15,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  66: [    15,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  67: [    15,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  68: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  69: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  70: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  71: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  72: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  73: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  74: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  75: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  76: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  77: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  78: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  79: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  80: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  81: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  82: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  83: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  84: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  85: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  86: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  87: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  88: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  89: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  90: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  91: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  92: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  93: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  94: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  95: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  96: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  97: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  98: [    15,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  99: [   128,    15,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 100: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 102: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 103: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 104: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 105: [    15,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 106: [    15,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 107: [    15,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 108: [    15,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 109: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 110: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 111: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 112: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 113: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 114: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 115: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 116: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 117: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 118: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 119: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 120: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 121: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 122: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 123: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 124: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 125: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 127: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 128: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 129: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 130: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 131: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 132: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 133: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 134: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 135: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 136: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 137: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 138: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 139: [    15,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 140: [   128,    15,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 141: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 143: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 144: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 145: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 146: [    15,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 147: [    15,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 148: [    15,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 149: [    15,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 150: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 151: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 152: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 153: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 154: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 155: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 156: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 157: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 158: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 159: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 160: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 161: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 162: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 163: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 164: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 165: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 166: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 168: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 169: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 170: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 171: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 172: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 173: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 174: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 175: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 176: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 177: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 178: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 179: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 180: [    15,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 181: [   128,    15,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 182: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 184: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 185: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 186: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 187: [    15,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 188: [    15,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 189: [    15,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 190: [    15,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 191: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 192: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 193: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 194: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 195: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 196: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 197: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 198: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 199: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 200: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 201: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 202: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 203: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 204: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 205: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 206: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 207: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 209: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 210: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 211: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 212: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 213: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 214: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 215: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 216: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 217: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 218: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 219: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 220: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 221: [    15,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 222: [   128,    15,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 223: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 225: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 226: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 227: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 228: [    15,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 229: [    15,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 230: [    15,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 231: [    15,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 232: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 233: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 234: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 235: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 236: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 237: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 238: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 239: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 240: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 241: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 242: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 243: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 244: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 245: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 246: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 247: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 248: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 250: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 251: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 252: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 253: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 254: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 255: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 256: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 257: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 258: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 259: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 260: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 261: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 262: [    15,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 263: [   128,    15,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 264: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 266: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 267: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 268: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 269: [    15,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 270: [    15,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 271: [    15,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 272: [    15,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 273: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 274: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 275: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 276: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 277: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 278: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 279: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 280: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 281: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 282: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 283: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 284: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 285: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 286: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 287: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 288: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 289: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 291: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 292: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 293: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 294: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 295: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 296: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 297: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 298: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 299: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 300: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 301: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 302: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 303: [    15,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 304: [   128,    15,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 305: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 307: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 308: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 309: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 310: [    15,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 311: [    15,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 312: [    15,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 313: [    15,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 314: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 315: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 316: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 317: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 318: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 319: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 320: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 321: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 322: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 323: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 324: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 325: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 326: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 327: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 328: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 329: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 330: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 331: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 332: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 333: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 334: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 335: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 336: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 337: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 338: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 339: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 340: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 341: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 342: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 343: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 344: [    15,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 345: [   128,    15,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 346: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 347: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 348: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 349: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 350: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 351: [    15,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 352: [    15,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 353: [    15,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 354: [    15,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 355: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 356: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 357: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 358: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 359: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 360: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 361: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 362: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 363: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 364: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 365: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 366: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 367: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 368: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 369: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 370: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 371: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 372: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 373: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 374: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 375: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 376: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 377: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 378: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 379: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 380: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 381: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 382: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 383: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 384: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 385: [    15,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 386: [   128,    15,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 387: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 388: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 389: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 390: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 391: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 392: [    15,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 393: [    15,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 394: [    15,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 395: [    15,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 396: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 397: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 398: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 399: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 400: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 401: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 402: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 403: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 404: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 405: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 406: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 407: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 408: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 409: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 410: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 411: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 412: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 413: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 414: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 415: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 416: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 417: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 418: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 419: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 420: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 421: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 422: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 423: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 424: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 425: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 426: [    15,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 427: [   128,    15,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 428: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 429: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 430: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 431: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 432: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 433: [    15,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 434: [    15,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 435: [    15,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 436: [    15,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 437: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 438: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 439: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 440: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 441: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 442: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 443: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 444: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 445: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 446: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 447: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 448: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 449: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 450: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 451: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 452: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 453: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 454: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 455: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 456: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 457: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 458: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 459: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 460: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 461: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 462: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 463: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 464: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 465: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 466: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 467: [    15,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 468: [   128,    15,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 469: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 470: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 471: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 472: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 473: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 474: [    15,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 475: [    15,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 476: [    15,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 477: [    15,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 478: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 479: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 480: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 481: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 482: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 483: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 484: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 485: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 486: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 487: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 488: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 489: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 490: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 491: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 492: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 493: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 494: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 495: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 496: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 497: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 498: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 499: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 500: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 501: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 502: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 503: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 504: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 505: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 506: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 507: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 508: [    15,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 509: [   128,    15,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 510: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 511: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 512: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 513: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 514: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 515: [    15,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 516: [    15,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 517: [    15,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 518: [    15,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 519: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 520: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 521: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 522: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 523: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 524: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 525: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 526: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 527: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 528: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 529: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 530: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 531: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 532: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 533: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 534: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 535: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 536: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 537: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 538: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 539: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 540: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 541: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 542: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 543: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 544: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 545: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 546: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 547: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 548: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 549: [    15,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 550: [   128,    15,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 551: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 552: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 553: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 554: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 555: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 556: [    15,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 557: [    15,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 558: [    15,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 559: [    15,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 560: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 561: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 562: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 563: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 564: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 565: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 566: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 567: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 568: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 569: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 570: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 571: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 572: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 573: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 574: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 575: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 576: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 577: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 578: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 579: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 580: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 581: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 582: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 583: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 584: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 585: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 586: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 587: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 588: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 589: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 590: [    15,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 591: [   128,    15,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 592: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 593: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 594: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 595: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 596: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 597: [    15,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 598: [    15,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 599: [    15,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 600: [    15,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 601: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 602: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 603: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 604: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 605: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 606: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 607: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 608: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 609: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 610: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 611: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 612: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 613: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 614: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 615: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 616: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 617: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 618: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 619: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 620: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 621: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 622: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 623: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 624: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 625: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 626: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 627: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 628: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 629: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 630: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 631: [    15,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 632: [   128,    15,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 633: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 634: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 635: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 636: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 637: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 638: [    15,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 639: [    15,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 640: [    15,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 641: [    15,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 642: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 643: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 644: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 645: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 646: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 647: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 648: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 649: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 650: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 651: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 652: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 653: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 654: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 655: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 656: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 657: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 658: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 659: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 660: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 661: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 662: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 663: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 664: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 665: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 666: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 667: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 668: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 669: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 670: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 671: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 672: [    15,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 673: [   128,    15,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 674: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 675: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 676: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 677: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 678: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 679: [    15,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 680: [    15,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 681: [    15,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 682: [    15,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 683: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 684: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 685: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 686: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 687: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 688: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 689: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 690: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 691: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 692: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 693: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 694: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 695: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 696: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 697: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 698: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 699: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 700: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 701: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 702: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 703: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 704: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 705: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 706: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 707: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 708: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 709: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 710: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 711: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 712: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 713: [    15,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 714: [   128,    15,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 715: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 716: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 717: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 718: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 719: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 720: [    15,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 721: [    15,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 722: [    15,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 723: [    15,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 724: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 725: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 726: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 727: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 728: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 729: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 730: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 731: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 732: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 733: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 734: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 735: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 736: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 737: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 738: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 739: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 740: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 741: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 742: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 743: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 744: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 745: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 746: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 747: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 748: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 749: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 750: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 751: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 752: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 753: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 754: [    15,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 755: [   128,    15,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 756: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 757: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 758: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 759: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 760: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 761: [    15,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 762: [    15,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 763: [    15,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 764: [    15,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 765: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 766: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 767: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 768: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 769: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 770: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 771: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 772: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 773: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 774: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 775: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 776: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 777: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 778: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 779: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 780: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 781: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 782: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 783: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 784: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 785: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 786: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 787: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 788: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 789: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 790: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 791: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 792: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 793: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 794: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 795: [    15,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 796: [   128,    15,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 797: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 798: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 799: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 800: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 801: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 802: [    15,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 803: [    15,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 804: [    15,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 805: [    15,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 806: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 807: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 808: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 809: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 810: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 811: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 812: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 813: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 814: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 815: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 816: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 817: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 818: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 819: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 820: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 821: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 822: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 823: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 824: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 825: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 826: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 827: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 828: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 829: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 830: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 831: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 832: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 833: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 834: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 835: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 836: [    15,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 837: [   128,    15,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 838: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 839: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 840: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 841: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 842: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 843: [    15,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 844: [    15,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 845: [    15,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 846: [    15,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 847: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 848: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 849: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 850: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 851: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 852: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 853: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 854: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 855: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 856: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 857: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 858: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 859: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 860: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 861: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 862: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 863: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 864: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 865: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 866: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 867: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 868: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 869: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 870: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 871: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 872: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 873: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 874: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 875: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 876: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 877: [    15,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 878: [   128,    15,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 879: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 880: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 881: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 882: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 883: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 884: [    15,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 885: [    15,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 886: [    15,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 887: [    15,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 888: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 889: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 890: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 891: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 892: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 893: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 894: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 895: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 896: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 897: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 898: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 899: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 900: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 901: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 902: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 903: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 904: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 905: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 906: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 907: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 908: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 909: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 910: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 911: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 912: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 913: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 914: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 915: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 916: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 917: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 918: [    15,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 919: [   128,    15,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 920: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 921: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 922: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 923: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 924: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 925: [    15,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 926: [    15,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 927: [    15,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 928: [    15,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 929: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 930: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 931: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 932: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 933: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 934: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 935: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 936: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 937: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 938: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 939: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 940: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 941: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 942: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 943: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 944: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 945: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 946: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 947: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 948: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 949: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 950: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 951: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 952: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 953: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 954: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 955: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 956: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 957: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 958: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 959: [    15,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 960: [   128,    15,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 961: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 962: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 963: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 964: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 965: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 966: [    15,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 967: [    15,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 968: [    15,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 969: [    15,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 970: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 971: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 972: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 973: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 974: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 975: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 976: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 977: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 978: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 979: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 980: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 981: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 982: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 983: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 984: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 985: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 986: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 987: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 988: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 989: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 990: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 991: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 992: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 993: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 994: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 995: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 996: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 997: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 998: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 999: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1000: [    15,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1001: [   128,    15,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1002: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1003: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1004: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1005: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1006: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1007: [    15,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1008: [    15,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1009: [    15,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1010: [    15,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1011: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1012: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1013: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1014: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1015: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1016: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1017: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1018: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1019: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1020: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1021: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1022: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1023: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1024: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1025: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1026: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1027: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1028: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1029: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1030: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1031: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1032: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1033: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1034: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1035: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1036: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1037: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1038: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1039: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1040: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1041: [    15,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1042: [   128,    15,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1043: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1044: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1045: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1046: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1047: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1048: [    15,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1049: [    15,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1050: [    15,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1051: [    15,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1052: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1053: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1054: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1055: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1056: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1057: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1058: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1059: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1060: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1061: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1062: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1063: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1064: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1065: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1066: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1067: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1068: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1069: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1070: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1071: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1072: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1073: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1074: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1075: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1076: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1077: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1078: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1079: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1080: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1081: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1082: [    15,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1083: [   128,    15,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1084: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1085: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1086: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1087: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1088: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1089: [    15,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1090: [    15,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1091: [    15,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1092: [    15,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1093: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1094: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1095: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1096: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1097: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1098: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1099: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1100: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1102: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1103: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1104: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1105: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1106: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1107: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1108: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1109: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1110: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1111: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1112: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1113: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1114: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1115: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1116: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1117: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1118: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1119: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1120: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1121: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1122: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1123: [    15,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1124: [   128,    15,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1125: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1127: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1128: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1129: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1130: [    15,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1131: [    15,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1132: [    15,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1133: [    15,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1134: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1135: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1136: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1137: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1138: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1139: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1140: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1141: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1143: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1144: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1145: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1146: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1147: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1148: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1149: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1150: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1151: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1152: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1153: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1154: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1155: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1156: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1157: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1158: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1159: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1160: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1161: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1162: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1163: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1164: [    15,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1165: [   128,    15,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1166: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1168: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1169: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1170: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1171: [    15,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1172: [    15,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1173: [    15,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1174: [    15,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1175: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1176: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1177: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1178: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1179: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1180: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1181: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1182: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1184: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1185: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1186: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1187: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1188: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1189: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1190: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1191: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1192: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1193: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1194: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1195: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1196: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1197: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1198: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1199: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1200: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1201: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1202: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1203: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1204: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1205: [    15,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1206: [   128,    15,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1207: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1209: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1210: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1211: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1212: [    15,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1213: [    15,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1214: [    15,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1215: [    15,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1216: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1217: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1218: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1219: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1220: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1221: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1222: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1223: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1225: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1226: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1227: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1228: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1229: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1230: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1231: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1232: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1233: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1234: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1235: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1236: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1237: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1238: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1239: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1240: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1241: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1242: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1243: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1244: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1245: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1246: [    15,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1247: [   128,    15,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1248: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1250: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1251: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1252: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1253: [    15,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1254: [    15,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1255: [    15,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1256: [    15,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1257: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1258: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1259: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1260: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1261: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1262: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1263: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1264: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1266: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1267: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1268: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1269: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1270: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1271: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1272: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1273: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1274: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1275: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1276: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1277: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1278: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1279: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1280: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1281: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1282: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1283: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1284: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1285: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1286: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1287: [    15,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1288: [   128,    15,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1289: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1291: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1292: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1293: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1294: [    15,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1295: [    15,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1296: [    15,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1297: [    15,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1298: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1299: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1300: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1301: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1302: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1303: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1304: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1305: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1307: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1308: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1309: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1310: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1311: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1312: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1313: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1314: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1315: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1316: [ 102400,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
n_leafs = 552
 -   0: [  2560,  2560]     NONE
 -   1: [  2560,     1]     NONE
 -   2: [  2560, 102400]     NONE
 -   3: [     1,     1]     NONE
 -   4: [  2560,     1]     NONE
 -   5: [  2560,     1]     NONE
 -   6: [ 41943040,     1]     NONE
 -   7: [  2560,  2560]     NONE
 -   8: [  2560,     1]     NONE
 -   9: [ 41943040,     1]     NONE
 -  10: [  2560,  2560]     NONE
 -  11: [  2560,     1]     NONE
 -  12: [ 10240,  2560]     NONE
 -  13: [  2560, 10240]     NONE
 -  14: [  2560,     1]     NONE
 -  15: [  2560,  2560]     NONE
 -  16: [  2560,  2560]     NONE
 -  17: [  2560,     1]     NONE
 -  18: [     1,     1]     NONE
 -  19: [  2560,     1]     NONE
 -  20: [  2560,     1]     NONE
 -  21: [  2560,     1]     NONE
 -  22: [ 10240,     1]     NONE
 -  23: [  2560,     1]     NONE
 -  24: [  2560,     1]     NONE
 -  25: [  2560,     1]     NONE
 -  26: [  2560,  2560]     NONE
 -  27: [  2560,     1]     NONE
 -  28: [  2560,  2560]     NONE
 -  29: [  2560,     1]     NONE
 -  30: [ 10240,  2560]     NONE
 -  31: [  2560, 10240]     NONE
 -  32: [  2560,     1]     NONE
 -  33: [  2560,  2560]     NONE
 -  34: [  2560,  2560]     NONE
 -  35: [  2560,     1]     NONE
 -  36: [  2560,     1]     NONE
 -  37: [  2560,     1]     NONE
 -  38: [  2560,     1]     NONE
 -  39: [ 10240,     1]     NONE
 -  40: [  2560,     1]     NONE
 -  41: [  2560,     1]     NONE
 -  42: [  2560,     1]     NONE
 -  43: [  2560,  2560]     NONE
 -  44: [  2560,     1]     NONE
 -  45: [  2560,  2560]     NONE
 -  46: [  2560,     1]     NONE
 -  47: [ 10240,  2560]     NONE
 -  48: [  2560, 10240]     NONE
 -  49: [  2560,     1]     NONE
 -  50: [  2560,  2560]     NONE
 -  51: [  2560,  2560]     NONE
 -  52: [  2560,     1]     NONE
 -  53: [  2560,     1]     NONE
 -  54: [  2560,     1]     NONE
 -  55: [  2560,     1]     NONE
 -  56: [ 10240,     1]     NONE
 -  57: [  2560,     1]     NONE
 -  58: [  2560,     1]     NONE
 -  59: [  2560,     1]     NONE
 -  60: [  2560,  2560]     NONE
 -  61: [  2560,     1]     NONE
 -  62: [  2560,  2560]     NONE
 -  63: [  2560,     1]     NONE
 -  64: [ 10240,  2560]     NONE
 -  65: [  2560, 10240]     NONE
 -  66: [  2560,     1]     NONE
 -  67: [  2560,  2560]     NONE
 -  68: [  2560,  2560]     NONE
 -  69: [  2560,     1]     NONE
 -  70: [  2560,     1]     NONE
 -  71: [  2560,     1]     NONE
 -  72: [  2560,     1]     NONE
 -  73: [ 10240,     1]     NONE
 -  74: [  2560,     1]     NONE
 -  75: [  2560,     1]     NONE
 -  76: [  2560,     1]     NONE
 -  77: [  2560,  2560]     NONE
 -  78: [  2560,     1]     NONE
 -  79: [  2560,  2560]     NONE
 -  80: [  2560,     1]     NONE
 -  81: [ 10240,  2560]     NONE
 -  82: [  2560, 10240]     NONE
 -  83: [  2560,     1]     NONE
 -  84: [  2560,  2560]     NONE
 -  85: [  2560,  2560]     NONE
 -  86: [  2560,     1]     NONE
 -  87: [  2560,     1]     NONE
 -  88: [  2560,     1]     NONE
 -  89: [  2560,     1]     NONE
 -  90: [ 10240,     1]     NONE
 -  91: [  2560,     1]     NONE
 -  92: [  2560,     1]     NONE
 -  93: [  2560,     1]     NONE
 -  94: [  2560,  2560]     NONE
 -  95: [  2560,     1]     NONE
 -  96: [  2560,  2560]     NONE
 -  97: [  2560,     1]     NONE
 -  98: [ 10240,  2560]     NONE
 -  99: [  2560, 10240]     NONE
 - 100: [  2560,     1]     NONE
 - 101: [  2560,  2560]     NONE
 - 102: [  2560,  2560]     NONE
 - 103: [  2560,     1]     NONE
 - 104: [  2560,     1]     NONE
 - 105: [  2560,     1]     NONE
 - 106: [  2560,     1]     NONE
 - 107: [ 10240,     1]     NONE
 - 108: [  2560,     1]     NONE
 - 109: [  2560,     1]     NONE
 - 110: [  2560,     1]     NONE
 - 111: [  2560,  2560]     NONE
 - 112: [  2560,     1]     NONE
 - 113: [  2560,  2560]     NONE
 - 114: [  2560,     1]     NONE
 - 115: [ 10240,  2560]     NONE
 - 116: [  2560, 10240]     NONE
 - 117: [  2560,     1]     NONE
 - 118: [  2560,  2560]     NONE
 - 119: [  2560,  2560]     NONE
 - 120: [  2560,     1]     NONE
 - 121: [  2560,     1]     NONE
 - 122: [  2560,     1]     NONE
 - 123: [  2560,     1]     NONE
 - 124: [ 10240,     1]     NONE
 - 125: [  2560,     1]     NONE
 - 126: [  2560,     1]     NONE
 - 127: [  2560,     1]     NONE
 - 128: [  2560,  2560]     NONE
 - 129: [  2560,     1]     NONE
 - 130: [  2560,  2560]     NONE
 - 131: [  2560,     1]     NONE
 - 132: [ 10240,  2560]     NONE
 - 133: [  2560, 10240]     NONE
 - 134: [  2560,     1]     NONE
 - 135: [  2560,  2560]     NONE
 - 136: [  2560,  2560]     NONE
 - 137: [  2560,     1]     NONE
 - 138: [  2560,     1]     NONE
 - 139: [  2560,     1]     NONE
 - 140: [  2560,     1]     NONE
 - 141: [ 10240,     1]     NONE
 - 142: [  2560,     1]     NONE
 - 143: [  2560,     1]     NONE
 - 144: [  2560,     1]     NONE
 - 145: [  2560,  2560]     NONE
 - 146: [  2560,     1]     NONE
 - 147: [  2560,  2560]     NONE
 - 148: [  2560,     1]     NONE
 - 149: [ 10240,  2560]     NONE
 - 150: [  2560, 10240]     NONE
 - 151: [  2560,     1]     NONE
 - 152: [  2560,  2560]     NONE
 - 153: [  2560,  2560]     NONE
 - 154: [  2560,     1]     NONE
 - 155: [  2560,     1]     NONE
 - 156: [  2560,     1]     NONE
 - 157: [  2560,     1]     NONE
 - 158: [ 10240,     1]     NONE
 - 159: [  2560,     1]     NONE
 - 160: [  2560,     1]     NONE
 - 161: [  2560,     1]     NONE
 - 162: [  2560,  2560]     NONE
 - 163: [  2560,     1]     NONE
 - 164: [  2560,  2560]     NONE
 - 165: [  2560,     1]     NONE
 - 166: [ 10240,  2560]     NONE
 - 167: [  2560, 10240]     NONE
 - 168: [  2560,     1]     NONE
 - 169: [  2560,  2560]     NONE
 - 170: [  2560,  2560]     NONE
 - 171: [  2560,     1]     NONE
 - 172: [  2560,     1]     NONE
 - 173: [  2560,     1]     NONE
 - 174: [  2560,     1]     NONE
 - 175: [ 10240,     1]     NONE
 - 176: [  2560,     1]     NONE
 - 177: [  2560,     1]     NONE
 - 178: [  2560,     1]     NONE
 - 179: [  2560,  2560]     NONE
 - 180: [  2560,     1]     NONE
 - 181: [  2560,  2560]     NONE
 - 182: [  2560,     1]     NONE
 - 183: [ 10240,  2560]     NONE
 - 184: [  2560, 10240]     NONE
 - 185: [  2560,     1]     NONE
 - 186: [  2560,  2560]     NONE
 - 187: [  2560,  2560]     NONE
 - 188: [  2560,     1]     NONE
 - 189: [  2560,     1]     NONE
 - 190: [  2560,     1]     NONE
 - 191: [  2560,     1]     NONE
 - 192: [ 10240,     1]     NONE
 - 193: [  2560,     1]     NONE
 - 194: [  2560,     1]     NONE
 - 195: [  2560,     1]     NONE
 - 196: [  2560,  2560]     NONE
 - 197: [  2560,     1]     NONE
 - 198: [  2560,  2560]     NONE
 - 199: [  2560,     1]     NONE
 - 200: [ 10240,  2560]     NONE
 - 201: [  2560, 10240]     NONE
 - 202: [  2560,     1]     NONE
 - 203: [  2560,  2560]     NONE
 - 204: [  2560,  2560]     NONE
 - 205: [  2560,     1]     NONE
 - 206: [  2560,     1]     NONE
 - 207: [  2560,     1]     NONE
 - 208: [  2560,     1]     NONE
 - 209: [ 10240,     1]     NONE
 - 210: [  2560,     1]     NONE
 - 211: [  2560,     1]     NONE
 - 212: [  2560,     1]     NONE
 - 213: [  2560,  2560]     NONE
 - 214: [  2560,     1]     NONE
 - 215: [  2560,  2560]     NONE
 - 216: [  2560,     1]     NONE
 - 217: [ 10240,  2560]     NONE
 - 218: [  2560, 10240]     NONE
 - 219: [  2560,     1]     NONE
 - 220: [  2560,  2560]     NONE
 - 221: [  2560,  2560]     NONE
 - 222: [  2560,     1]     NONE
 - 223: [  2560,     1]     NONE
 - 224: [  2560,     1]     NONE
 - 225: [  2560,     1]     NONE
 - 226: [ 10240,     1]     NONE
 - 227: [  2560,     1]     NONE
 - 228: [  2560,     1]     NONE
 - 229: [  2560,     1]     NONE
 - 230: [  2560,  2560]     NONE
 - 231: [  2560,     1]     NONE
 - 232: [  2560,  2560]     NONE
 - 233: [  2560,     1]     NONE
 - 234: [ 10240,  2560]     NONE
 - 235: [  2560, 10240]     NONE
 - 236: [  2560,     1]     NONE
 - 237: [  2560,  2560]     NONE
 - 238: [  2560,  2560]     NONE
 - 239: [  2560,     1]     NONE
 - 240: [  2560,     1]     NONE
 - 241: [  2560,     1]     NONE
 - 242: [  2560,     1]     NONE
 - 243: [ 10240,     1]     NONE
 - 244: [  2560,     1]     NONE
 - 245: [  2560,     1]     NONE
 - 246: [  2560,     1]     NONE
 - 247: [  2560,  2560]     NONE
 - 248: [  2560,     1]     NONE
 - 249: [  2560,  2560]     NONE
 - 250: [  2560,     1]     NONE
 - 251: [ 10240,  2560]     NONE
 - 252: [  2560, 10240]     NONE
 - 253: [  2560,     1]     NONE
 - 254: [  2560,  2560]     NONE
 - 255: [  2560,  2560]     NONE
 - 256: [  2560,     1]     NONE
 - 257: [  2560,     1]     NONE
 - 258: [  2560,     1]     NONE
 - 259: [  2560,     1]     NONE
 - 260: [ 10240,     1]     NONE
 - 261: [  2560,     1]     NONE
 - 262: [  2560,     1]     NONE
 - 263: [  2560,     1]     NONE
 - 264: [  2560,  2560]     NONE
 - 265: [  2560,     1]     NONE
 - 266: [  2560,  2560]     NONE
 - 267: [  2560,     1]     NONE
 - 268: [ 10240,  2560]     NONE
 - 269: [  2560, 10240]     NONE
 - 270: [  2560,     1]     NONE
 - 271: [  2560,  2560]     NONE
 - 272: [  2560,  2560]     NONE
 - 273: [  2560,     1]     NONE
 - 274: [  2560,     1]     NONE
 - 275: [  2560,     1]     NONE
 - 276: [  2560,     1]     NONE
 - 277: [ 10240,     1]     NONE
 - 278: [  2560,     1]     NONE
 - 279: [  2560,     1]     NONE
 - 280: [  2560,     1]     NONE
 - 281: [  2560,  2560]     NONE
 - 282: [  2560,     1]     NONE
 - 283: [  2560,  2560]     NONE
 - 284: [  2560,     1]     NONE
 - 285: [ 10240,  2560]     NONE
 - 286: [  2560, 10240]     NONE
 - 287: [  2560,     1]     NONE
 - 288: [  2560,  2560]     NONE
 - 289: [  2560,  2560]     NONE
 - 290: [  2560,     1]     NONE
 - 291: [  2560,     1]     NONE
 - 292: [  2560,     1]     NONE
 - 293: [  2560,     1]     NONE
 - 294: [ 10240,     1]     NONE
 - 295: [  2560,     1]     NONE
 - 296: [  2560,     1]     NONE
 - 297: [  2560,     1]     NONE
 - 298: [  2560,  2560]     NONE
 - 299: [  2560,     1]     NONE
 - 300: [  2560,  2560]     NONE
 - 301: [  2560,     1]     NONE
 - 302: [ 10240,  2560]     NONE
 - 303: [  2560, 10240]     NONE
 - 304: [  2560,     1]     NONE
 - 305: [  2560,  2560]     NONE
 - 306: [  2560,  2560]     NONE
 - 307: [  2560,     1]     NONE
 - 308: [  2560,     1]     NONE
 - 309: [  2560,     1]     NONE
 - 310: [  2560,     1]     NONE
 - 311: [ 10240,     1]     NONE
 - 312: [  2560,     1]     NONE
 - 313: [  2560,     1]     NONE
 - 314: [  2560,     1]     NONE
 - 315: [  2560,  2560]     NONE
 - 316: [  2560,     1]     NONE
 - 317: [  2560,  2560]     NONE
 - 318: [  2560,     1]     NONE
 - 319: [ 10240,  2560]     NONE
 - 320: [  2560, 10240]     NONE
 - 321: [  2560,     1]     NONE
 - 322: [  2560,  2560]     NONE
 - 323: [  2560,  2560]     NONE
 - 324: [  2560,     1]     NONE
 - 325: [  2560,     1]     NONE
 - 326: [  2560,     1]     NONE
 - 327: [  2560,     1]     NONE
 - 328: [ 10240,     1]     NONE
 - 329: [  2560,     1]     NONE
 - 330: [  2560,     1]     NONE
 - 331: [  2560,     1]     NONE
 - 332: [  2560,  2560]     NONE
 - 333: [  2560,     1]     NONE
 - 334: [  2560,  2560]     NONE
 - 335: [  2560,     1]     NONE
 - 336: [ 10240,  2560]     NONE
 - 337: [  2560, 10240]     NONE
 - 338: [  2560,     1]     NONE
 - 339: [  2560,  2560]     NONE
 - 340: [  2560,  2560]     NONE
 - 341: [  2560,     1]     NONE
 - 342: [  2560,     1]     NONE
 - 343: [  2560,     1]     NONE
 - 344: [  2560,     1]     NONE
 - 345: [ 10240,     1]     NONE
 - 346: [  2560,     1]     NONE
 - 347: [  2560,     1]     NONE
 - 348: [  2560,     1]     NONE
 - 349: [  2560,  2560]     NONE
 - 350: [  2560,     1]     NONE
 - 351: [  2560,  2560]     NONE
 - 352: [  2560,     1]     NONE
 - 353: [ 10240,  2560]     NONE
 - 354: [  2560, 10240]     NONE
 - 355: [  2560,     1]     NONE
 - 356: [  2560,  2560]     NONE
 - 357: [  2560,  2560]     NONE
 - 358: [  2560,     1]     NONE
 - 359: [  2560,     1]     NONE
 - 360: [  2560,     1]     NONE
 - 361: [  2560,     1]     NONE
 - 362: [ 10240,     1]     NONE
 - 363: [  2560,     1]     NONE
 - 364: [  2560,     1]     NONE
 - 365: [  2560,     1]     NONE
 - 366: [  2560,  2560]     NONE
 - 367: [  2560,     1]     NONE
 - 368: [  2560,  2560]     NONE
 - 369: [  2560,     1]     NONE
 - 370: [ 10240,  2560]     NONE
 - 371: [  2560, 10240]     NONE
 - 372: [  2560,     1]     NONE
 - 373: [  2560,  2560]     NONE
 - 374: [  2560,  2560]     NONE
 - 375: [  2560,     1]     NONE
 - 376: [  2560,     1]     NONE
 - 377: [  2560,     1]     NONE
 - 378: [  2560,     1]     NONE
 - 379: [ 10240,     1]     NONE
 - 380: [  2560,     1]     NONE
 - 381: [  2560,     1]     NONE
 - 382: [  2560,     1]     NONE
 - 383: [  2560,  2560]     NONE
 - 384: [  2560,     1]     NONE
 - 385: [  2560,  2560]     NONE
 - 386: [  2560,     1]     NONE
 - 387: [ 10240,  2560]     NONE
 - 388: [  2560, 10240]     NONE
 - 389: [  2560,     1]     NONE
 - 390: [  2560,  2560]     NONE
 - 391: [  2560,  2560]     NONE
 - 392: [  2560,     1]     NONE
 - 393: [  2560,     1]     NONE
 - 394: [  2560,     1]     NONE
 - 395: [  2560,     1]     NONE
 - 396: [ 10240,     1]     NONE
 - 397: [  2560,     1]     NONE
 - 398: [  2560,     1]     NONE
 - 399: [  2560,     1]     NONE
 - 400: [  2560,  2560]     NONE
 - 401: [  2560,     1]     NONE
 - 402: [  2560,  2560]     NONE
 - 403: [  2560,     1]     NONE
 - 404: [ 10240,  2560]     NONE
 - 405: [  2560, 10240]     NONE
 - 406: [  2560,     1]     NONE
 - 407: [  2560,  2560]     NONE
 - 408: [  2560,  2560]     NONE
 - 409: [  2560,     1]     NONE
 - 410: [  2560,     1]     NONE
 - 411: [  2560,     1]     NONE
 - 412: [  2560,     1]     NONE
 - 413: [ 10240,     1]     NONE
 - 414: [  2560,     1]     NONE
 - 415: [  2560,     1]     NONE
 - 416: [  2560,     1]     NONE
 - 417: [  2560,  2560]     NONE
 - 418: [  2560,     1]     NONE
 - 419: [  2560,  2560]     NONE
 - 420: [  2560,     1]     NONE
 - 421: [ 10240,  2560]     NONE
 - 422: [  2560, 10240]     NONE
 - 423: [  2560,     1]     NONE
 - 424: [  2560,  2560]     NONE
 - 425: [  2560,  2560]     NONE
 - 426: [  2560,     1]     NONE
 - 427: [  2560,     1]     NONE
 - 428: [  2560,     1]     NONE
 - 429: [  2560,     1]     NONE
 - 430: [ 10240,     1]     NONE
 - 431: [  2560,     1]     NONE
 - 432: [  2560,     1]     NONE
 - 433: [  2560,     1]     NONE
 - 434: [  2560,  2560]     NONE
 - 435: [  2560,     1]     NONE
 - 436: [  2560,  2560]     NONE
 - 437: [  2560,     1]     NONE
 - 438: [ 10240,  2560]     NONE
 - 439: [  2560, 10240]     NONE
 - 440: [  2560,     1]     NONE
 - 441: [  2560,  2560]     NONE
 - 442: [  2560,  2560]     NONE
 - 443: [  2560,     1]     NONE
 - 444: [  2560,     1]     NONE
 - 445: [  2560,     1]     NONE
 - 446: [  2560,     1]     NONE
 - 447: [ 10240,     1]     NONE
 - 448: [  2560,     1]     NONE
 - 449: [  2560,     1]     NONE
 - 450: [  2560,     1]     NONE
 - 451: [  2560,  2560]     NONE
 - 452: [  2560,     1]     NONE
 - 453: [  2560,  2560]     NONE
 - 454: [  2560,     1]     NONE
 - 455: [ 10240,  2560]     NONE
 - 456: [  2560, 10240]     NONE
 - 457: [  2560,     1]     NONE
 - 458: [  2560,  2560]     NONE
 - 459: [  2560,  2560]     NONE
 - 460: [  2560,     1]     NONE
 - 461: [  2560,     1]     NONE
 - 462: [  2560,     1]     NONE
 - 463: [  2560,     1]     NONE
 - 464: [ 10240,     1]     NONE
 - 465: [  2560,     1]     NONE
 - 466: [  2560,     1]     NONE
 - 467: [  2560,     1]     NONE
 - 468: [  2560,  2560]     NONE
 - 469: [  2560,     1]     NONE
 - 470: [  2560,  2560]     NONE
 - 471: [  2560,     1]     NONE
 - 472: [ 10240,  2560]     NONE
 - 473: [  2560, 10240]     NONE
 - 474: [  2560,     1]     NONE
 - 475: [  2560,  2560]     NONE
 - 476: [  2560,  2560]     NONE
 - 477: [  2560,     1]     NONE
 - 478: [  2560,     1]     NONE
 - 479: [  2560,     1]     NONE
 - 480: [  2560,     1]     NONE
 - 481: [ 10240,     1]     NONE
 - 482: [  2560,     1]     NONE
 - 483: [  2560,     1]     NONE
 - 484: [  2560,     1]     NONE
 - 485: [  2560,  2560]     NONE
 - 486: [  2560,     1]     NONE
 - 487: [  2560,  2560]     NONE
 - 488: [  2560,     1]     NONE
 - 489: [ 10240,  2560]     NONE
 - 490: [  2560, 10240]     NONE
 - 491: [  2560,     1]     NONE
 - 492: [  2560,  2560]     NONE
 - 493: [  2560,  2560]     NONE
 - 494: [  2560,     1]     NONE
 - 495: [  2560,     1]     NONE
 - 496: [  2560,     1]     NONE
 - 497: [  2560,     1]     NONE
 - 498: [ 10240,     1]     NONE
 - 499: [  2560,     1]     NONE
 - 500: [  2560,     1]     NONE
 - 501: [  2560,     1]     NONE
 - 502: [  2560,  2560]     NONE
 - 503: [  2560,     1]     NONE
 - 504: [  2560,  2560]     NONE
 - 505: [  2560,     1]     NONE
 - 506: [ 10240,  2560]     NONE
 - 507: [  2560, 10240]     NONE
 - 508: [  2560,     1]     NONE
 - 509: [  2560,  2560]     NONE
 - 510: [  2560,  2560]     NONE
 - 511: [  2560,     1]     NONE
 - 512: [  2560,     1]     NONE
 - 513: [  2560,     1]     NONE
 - 514: [  2560,     1]     NONE
 - 515: [ 10240,     1]     NONE
 - 516: [  2560,     1]     NONE
 - 517: [  2560,     1]     NONE
 - 518: [  2560,     1]     NONE
 - 519: [  2560,  2560]     NONE
 - 520: [  2560,     1]     NONE
 - 521: [  2560,  2560]     NONE
 - 522: [  2560,     1]     NONE
 - 523: [ 10240,  2560]     NONE
 - 524: [  2560, 10240]     NONE
 - 525: [  2560,     1]     NONE
 - 526: [  2560,  2560]     NONE
 - 527: [  2560,  2560]     NONE
 - 528: [  2560,     1]     NONE
 - 529: [  2560,     1]     NONE
 - 530: [  2560,     1]     NONE
 - 531: [  2560,     1]     NONE
 - 532: [ 10240,     1]     NONE
 - 533: [  2560,     1]     NONE
 - 534: [  2560,     1]     NONE
 - 535: [  2560,     1]     NONE
 - 536: [  2560,  2560]     NONE
 - 537: [  2560,     1]     NONE
 - 538: [  2560, 102400]     NONE
 - 539: [  2560,     1]     NONE
 - 540: [ 10240,  2560]     NONE
 - 541: [  2560, 10240]     NONE
 - 542: [  2560,     1]     NONE
 - 543: [  2560,  2560]     NONE
 - 544: [  2560,  2560]     NONE
 - 545: [  2560,     1]     NONE
 - 546: [  2560,     1]     NONE
 - 547: [  2560,     1]     NONE
 - 548: [  2560,     1]     NONE
 - 549: [ 10240,     1]     NONE
 - 550: [  2560,     1]     NONE
 - 551: [  2560,     1]     NONE
perf_total_per_op_us[             ADD] =   0.321 ms
perf_total_per_op_us[             MUL] =   0.065 ms
perf_total_per_op_us[            NORM] =   0.065 ms
perf_total_per_op_us[         MUL_MAT] =   0.257 ms
perf_total_per_op_us[           SCALE] =   0.032 ms
perf_total_per_op_us[             CPY] =   0.096 ms
perf_total_per_op_us[         RESHAPE] =   0.096 ms
perf_total_per_op_us[            VIEW] =   0.128 ms
perf_total_per_op_us[         PERMUTE] =   0.064 ms
perf_total_per_op_us[       TRANSPOSE] =   0.032 ms
perf_total_per_op_us[        GET_ROWS] =   0.001 ms
perf_total_per_op_us[   DIAG_MASK_INF] =   0.032 ms
perf_total_per_op_us[        SOFT_MAX] =   0.032 ms
perf_total_per_op_us[            ROPE] =   0.064 ms
perf_total_per_op_us[           UNARY] =   0.032 ms
========================================
user=== GRAPH ===
n_nodes = 1317
 -   0: [  2560,     1,     1]         GET_ROWS   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   1: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   2: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   3: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   4: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   5: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   6: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   7: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   8: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   9: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  10: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  11: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  12: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  13: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  14: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  15: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  16: [    16,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  17: [   128,    16,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  18: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  19: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  20: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  21: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  22: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  23: [    16,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  24: [    16,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  25: [    16,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  26: [    16,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  27: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  28: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  29: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  30: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  31: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  32: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  33: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  34: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  35: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  36: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  37: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  38: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  39: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  40: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  41: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  42: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  43: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  44: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  45: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  46: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  47: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  48: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  49: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  50: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  51: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  52: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  53: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  54: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  55: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  56: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  57: [    16,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  58: [   128,    16,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  59: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  60: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  61: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  62: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  63: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  64: [    16,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  65: [    16,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  66: [    16,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  67: [    16,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  68: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  69: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  70: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  71: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  72: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  73: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  74: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  75: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  76: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  77: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  78: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  79: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  80: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  81: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  82: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  83: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  84: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  85: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  86: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  87: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  88: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  89: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  90: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  91: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  92: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  93: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  94: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  95: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  96: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  97: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  98: [    16,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  99: [   128,    16,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 100: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 102: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 103: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 104: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 105: [    16,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 106: [    16,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 107: [    16,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 108: [    16,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 109: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 110: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 111: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 112: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 113: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 114: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 115: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 116: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 117: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 118: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 119: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 120: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 121: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 122: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 123: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 124: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 125: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 127: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 128: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 129: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 130: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 131: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 132: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 133: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 134: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 135: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 136: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 137: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 138: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 139: [    16,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 140: [   128,    16,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 141: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 143: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 144: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 145: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 146: [    16,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 147: [    16,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 148: [    16,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 149: [    16,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 150: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 151: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 152: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 153: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 154: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 155: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 156: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 157: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 158: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 159: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 160: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 161: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 162: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 163: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 164: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 165: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 166: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 168: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 169: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 170: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 171: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 172: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 173: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 174: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 175: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 176: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 177: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 178: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 179: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 180: [    16,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 181: [   128,    16,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 182: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 184: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 185: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 186: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 187: [    16,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 188: [    16,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 189: [    16,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 190: [    16,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 191: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 192: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 193: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 194: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 195: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 196: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 197: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 198: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 199: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 200: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 201: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 202: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 203: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 204: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 205: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 206: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 207: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 209: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 210: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 211: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 212: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 213: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 214: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 215: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 216: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 217: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 218: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 219: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 220: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 221: [    16,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 222: [   128,    16,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 223: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 225: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 226: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 227: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 228: [    16,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 229: [    16,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 230: [    16,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 231: [    16,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 232: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 233: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 234: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 235: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 236: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 237: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 238: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 239: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 240: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 241: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 242: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 243: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 244: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 245: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 246: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 247: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 248: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 250: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 251: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 252: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 253: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 254: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 255: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 256: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 257: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 258: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 259: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 260: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 261: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 262: [    16,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 263: [   128,    16,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 264: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 266: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 267: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 268: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 269: [    16,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 270: [    16,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 271: [    16,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 272: [    16,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 273: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 274: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 275: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 276: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 277: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 278: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 279: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 280: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 281: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 282: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 283: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 284: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 285: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 286: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 287: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 288: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 289: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 291: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 292: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 293: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 294: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 295: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 296: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 297: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 298: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 299: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 300: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 301: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 302: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 303: [    16,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 304: [   128,    16,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 305: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 307: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 308: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 309: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 310: [    16,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 311: [    16,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 312: [    16,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 313: [    16,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 314: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 315: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 316: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 317: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 318: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 319: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 320: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 321: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 322: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 323: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 324: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 325: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 326: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 327: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 328: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 329: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 330: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 331: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 332: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 333: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 334: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 335: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 336: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 337: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 338: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 339: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 340: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 341: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 342: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 343: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 344: [    16,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 345: [   128,    16,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 346: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 347: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 348: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 349: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 350: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 351: [    16,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 352: [    16,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 353: [    16,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 354: [    16,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 355: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 356: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 357: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 358: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 359: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 360: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 361: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 362: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 363: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 364: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 365: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 366: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 367: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 368: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 369: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 370: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 371: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 372: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 373: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 374: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 375: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 376: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 377: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 378: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 379: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 380: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 381: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 382: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 383: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 384: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 385: [    16,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 386: [   128,    16,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 387: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 388: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 389: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 390: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 391: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 392: [    16,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 393: [    16,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 394: [    16,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 395: [    16,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 396: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 397: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 398: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 399: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 400: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 401: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 402: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 403: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 404: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 405: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 406: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 407: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 408: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 409: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 410: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 411: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 412: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 413: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 414: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 415: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 416: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 417: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 418: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 419: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 420: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 421: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 422: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 423: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 424: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 425: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 426: [    16,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 427: [   128,    16,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 428: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 429: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 430: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 431: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 432: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 433: [    16,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 434: [    16,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 435: [    16,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 436: [    16,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 437: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 438: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 439: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 440: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 441: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 442: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 443: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 444: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 445: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 446: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 447: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 448: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 449: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 450: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 451: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 452: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 453: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 454: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 455: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 456: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 457: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 458: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 459: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 460: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 461: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 462: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 463: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 464: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 465: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 466: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 467: [    16,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 468: [   128,    16,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 469: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 470: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 471: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 472: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 473: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 474: [    16,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 475: [    16,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 476: [    16,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 477: [    16,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 478: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 479: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 480: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 481: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 482: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 483: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 484: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 485: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 486: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 487: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 488: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 489: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 490: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 491: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 492: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 493: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 494: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 495: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 496: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 497: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 498: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 499: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 500: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 501: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 502: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 503: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 504: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 505: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 506: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 507: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 508: [    16,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 509: [   128,    16,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 510: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 511: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 512: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 513: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 514: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 515: [    16,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 516: [    16,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 517: [    16,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 518: [    16,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 519: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 520: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 521: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 522: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 523: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 524: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 525: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 526: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 527: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 528: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 529: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 530: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 531: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 532: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 533: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 534: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 535: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 536: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 537: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 538: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 539: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 540: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 541: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 542: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 543: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 544: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 545: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 546: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 547: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 548: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 549: [    16,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 550: [   128,    16,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 551: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 552: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 553: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 554: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 555: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 556: [    16,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 557: [    16,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 558: [    16,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 559: [    16,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 560: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 561: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 562: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 563: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 564: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 565: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 566: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 567: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 568: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 569: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 570: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 571: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 572: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 573: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 574: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 575: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 576: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 577: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 578: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 579: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 580: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 581: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 582: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 583: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 584: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 585: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 586: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 587: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 588: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 589: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 590: [    16,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 591: [   128,    16,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 592: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 593: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 594: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 595: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 596: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 597: [    16,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 598: [    16,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 599: [    16,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 600: [    16,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 601: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 602: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 603: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 604: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 605: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 606: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 607: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 608: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 609: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 610: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 611: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 612: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 613: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 614: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 615: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 616: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 617: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 618: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 619: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 620: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 621: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 622: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 623: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 624: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 625: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 626: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 627: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 628: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 629: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 630: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 631: [    16,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 632: [   128,    16,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 633: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 634: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 635: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 636: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 637: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 638: [    16,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 639: [    16,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 640: [    16,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 641: [    16,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 642: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 643: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 644: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 645: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 646: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 647: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 648: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 649: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 650: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 651: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 652: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 653: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 654: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 655: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 656: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 657: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 658: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 659: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 660: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 661: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 662: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 663: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 664: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 665: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 666: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 667: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 668: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 669: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 670: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 671: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 672: [    16,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 673: [   128,    16,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 674: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 675: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 676: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 677: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 678: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 679: [    16,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 680: [    16,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 681: [    16,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 682: [    16,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 683: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 684: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 685: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 686: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 687: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 688: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 689: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 690: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 691: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 692: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 693: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 694: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 695: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 696: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 697: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 698: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 699: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 700: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 701: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 702: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 703: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 704: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 705: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 706: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 707: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 708: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 709: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 710: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 711: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 712: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 713: [    16,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 714: [   128,    16,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 715: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 716: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 717: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 718: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 719: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 720: [    16,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 721: [    16,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 722: [    16,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 723: [    16,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 724: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 725: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 726: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 727: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 728: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 729: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 730: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 731: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 732: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 733: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 734: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 735: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 736: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 737: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 738: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 739: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 740: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 741: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 742: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 743: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 744: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 745: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 746: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 747: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 748: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 749: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 750: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 751: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 752: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 753: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 754: [    16,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 755: [   128,    16,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 756: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 757: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 758: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 759: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 760: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 761: [    16,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 762: [    16,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 763: [    16,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 764: [    16,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 765: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 766: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 767: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 768: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 769: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 770: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 771: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 772: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 773: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 774: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 775: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 776: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 777: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 778: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 779: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 780: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 781: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 782: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 783: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 784: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 785: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 786: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 787: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 788: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 789: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 790: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 791: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 792: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 793: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 794: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 795: [    16,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 796: [   128,    16,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 797: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 798: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 799: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 800: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 801: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 802: [    16,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 803: [    16,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 804: [    16,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 805: [    16,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 806: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 807: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 808: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 809: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 810: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 811: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 812: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 813: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 814: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 815: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 816: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 817: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 818: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 819: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 820: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 821: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 822: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 823: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 824: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 825: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 826: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 827: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 828: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 829: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 830: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 831: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 832: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 833: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 834: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 835: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 836: [    16,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 837: [   128,    16,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 838: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 839: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 840: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 841: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 842: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 843: [    16,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 844: [    16,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 845: [    16,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 846: [    16,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 847: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 848: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 849: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 850: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 851: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 852: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 853: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 854: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 855: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 856: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 857: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 858: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 859: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 860: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 861: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 862: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 863: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 864: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 865: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 866: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 867: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 868: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 869: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 870: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 871: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 872: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 873: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 874: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 875: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 876: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 877: [    16,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 878: [   128,    16,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 879: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 880: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 881: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 882: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 883: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 884: [    16,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 885: [    16,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 886: [    16,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 887: [    16,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 888: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 889: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 890: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 891: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 892: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 893: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 894: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 895: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 896: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 897: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 898: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 899: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 900: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 901: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 902: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 903: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 904: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 905: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 906: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 907: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 908: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 909: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 910: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 911: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 912: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 913: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 914: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 915: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 916: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 917: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 918: [    16,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 919: [   128,    16,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 920: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 921: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 922: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 923: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 924: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 925: [    16,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 926: [    16,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 927: [    16,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 928: [    16,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 929: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 930: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 931: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 932: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 933: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 934: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 935: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 936: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 937: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 938: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 939: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 940: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 941: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 942: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 943: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 944: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 945: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 946: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 947: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 948: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 949: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 950: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 951: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 952: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 953: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 954: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 955: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 956: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 957: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 958: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 959: [    16,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 960: [   128,    16,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 961: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 962: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 963: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 964: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 965: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 966: [    16,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 967: [    16,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 968: [    16,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 969: [    16,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 970: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 971: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 972: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 973: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 974: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 975: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 976: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 977: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 978: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 979: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 980: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 981: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 982: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 983: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 984: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 985: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 986: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 987: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 988: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 989: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 990: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 991: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 992: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 993: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 994: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 995: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 996: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 997: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 998: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 999: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1000: [    16,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1001: [   128,    16,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1002: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1003: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1004: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1005: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1006: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1007: [    16,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1008: [    16,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1009: [    16,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1010: [    16,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1011: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1012: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1013: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1014: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1015: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1016: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1017: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1018: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1019: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1020: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1021: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1022: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1023: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1024: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1025: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1026: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1027: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1028: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1029: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1030: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1031: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1032: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1033: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1034: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1035: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1036: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1037: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1038: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1039: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1040: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1041: [    16,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1042: [   128,    16,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1043: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1044: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1045: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1046: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1047: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1048: [    16,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1049: [    16,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1050: [    16,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1051: [    16,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1052: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1053: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1054: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1055: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1056: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1057: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1058: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1059: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1060: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1061: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1062: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1063: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1064: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1065: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1066: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1067: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1068: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1069: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1070: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1071: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1072: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1073: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1074: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1075: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1076: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1077: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1078: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1079: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1080: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1081: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1082: [    16,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1083: [   128,    16,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1084: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1085: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1086: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1087: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1088: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1089: [    16,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1090: [    16,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1091: [    16,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1092: [    16,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1093: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1094: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1095: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1096: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1097: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1098: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1099: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1100: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1102: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1103: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1104: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1105: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1106: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1107: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1108: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1109: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1110: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1111: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1112: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1113: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1114: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1115: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1116: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1117: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1118: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1119: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1120: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1121: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1122: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1123: [    16,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1124: [   128,    16,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1125: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1127: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1128: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1129: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1130: [    16,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1131: [    16,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1132: [    16,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1133: [    16,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1134: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1135: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1136: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1137: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1138: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1139: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1140: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1141: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1143: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1144: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1145: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1146: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1147: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1148: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1149: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1150: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1151: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1152: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1153: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1154: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1155: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1156: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1157: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1158: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1159: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1160: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1161: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1162: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1163: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1164: [    16,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1165: [   128,    16,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1166: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1168: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1169: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1170: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1171: [    16,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1172: [    16,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1173: [    16,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1174: [    16,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1175: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1176: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1177: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1178: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1179: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1180: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1181: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1182: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1184: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1185: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1186: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1187: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1188: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1189: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1190: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1191: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1192: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1193: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1194: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1195: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1196: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1197: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1198: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1199: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1200: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1201: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1202: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1203: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1204: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1205: [    16,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1206: [   128,    16,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1207: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1209: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1210: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1211: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1212: [    16,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1213: [    16,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1214: [    16,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1215: [    16,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1216: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1217: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1218: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1219: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1220: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1221: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1222: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1223: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1225: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1226: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1227: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1228: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1229: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1230: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1231: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1232: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1233: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1234: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1235: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1236: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1237: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1238: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1239: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1240: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1241: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1242: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1243: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1244: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1245: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1246: [    16,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1247: [   128,    16,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1248: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1250: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1251: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1252: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1253: [    16,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1254: [    16,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1255: [    16,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1256: [    16,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1257: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1258: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1259: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1260: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1261: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1262: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1263: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1264: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1266: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1267: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1268: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1269: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1270: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1271: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1272: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1273: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1274: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1275: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1276: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1277: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1278: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1279: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1280: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1281: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1282: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1283: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1284: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1285: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1286: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1287: [    16,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1288: [   128,    16,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1289: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1291: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1292: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1293: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1294: [    16,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1295: [    16,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1296: [    16,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1297: [    16,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1298: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1299: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1300: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1301: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1302: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1303: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1304: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1305: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1307: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1308: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1309: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1310: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1311: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1312: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1313: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1314: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1315: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1316: [ 102400,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
n_leafs = 552
 -   0: [  2560,  2560]     NONE
 -   1: [  2560,     1]     NONE
 -   2: [  2560, 102400]     NONE
 -   3: [     1,     1]     NONE
 -   4: [  2560,     1]     NONE
 -   5: [  2560,     1]     NONE
 -   6: [ 41943040,     1]     NONE
 -   7: [  2560,  2560]     NONE
 -   8: [  2560,     1]     NONE
 -   9: [ 41943040,     1]     NONE
 -  10: [  2560,  2560]     NONE
 -  11: [  2560,     1]     NONE
 -  12: [ 10240,  2560]     NONE
 -  13: [  2560, 10240]     NONE
 -  14: [  2560,     1]     NONE
 -  15: [  2560,  2560]     NONE
 -  16: [  2560,  2560]     NONE
 -  17: [  2560,     1]     NONE
 -  18: [     1,     1]     NONE
 -  19: [  2560,     1]     NONE
 -  20: [  2560,     1]     NONE
 -  21: [  2560,     1]     NONE
 -  22: [ 10240,     1]     NONE
 -  23: [  2560,     1]     NONE
 -  24: [  2560,     1]     NONE
 -  25: [  2560,     1]     NONE
 -  26: [  2560,  2560]     NONE
 -  27: [  2560,     1]     NONE
 -  28: [  2560,  2560]     NONE
 -  29: [  2560,     1]     NONE
 -  30: [ 10240,  2560]     NONE
 -  31: [  2560, 10240]     NONE
 -  32: [  2560,     1]     NONE
 -  33: [  2560,  2560]     NONE
 -  34: [  2560,  2560]     NONE
 -  35: [  2560,     1]     NONE
 -  36: [  2560,     1]     NONE
 -  37: [  2560,     1]     NONE
 -  38: [  2560,     1]     NONE
 -  39: [ 10240,     1]     NONE
 -  40: [  2560,     1]     NONE
 -  41: [  2560,     1]     NONE
 -  42: [  2560,     1]     NONE
 -  43: [  2560,  2560]     NONE
 -  44: [  2560,     1]     NONE
 -  45: [  2560,  2560]     NONE
 -  46: [  2560,     1]     NONE
 -  47: [ 10240,  2560]     NONE
 -  48: [  2560, 10240]     NONE
 -  49: [  2560,     1]     NONE
 -  50: [  2560,  2560]     NONE
 -  51: [  2560,  2560]     NONE
 -  52: [  2560,     1]     NONE
 -  53: [  2560,     1]     NONE
 -  54: [  2560,     1]     NONE
 -  55: [  2560,     1]     NONE
 -  56: [ 10240,     1]     NONE
 -  57: [  2560,     1]     NONE
 -  58: [  2560,     1]     NONE
 -  59: [  2560,     1]     NONE
 -  60: [  2560,  2560]     NONE
 -  61: [  2560,     1]     NONE
 -  62: [  2560,  2560]     NONE
 -  63: [  2560,     1]     NONE
 -  64: [ 10240,  2560]     NONE
 -  65: [  2560, 10240]     NONE
 -  66: [  2560,     1]     NONE
 -  67: [  2560,  2560]     NONE
 -  68: [  2560,  2560]     NONE
 -  69: [  2560,     1]     NONE
 -  70: [  2560,     1]     NONE
 -  71: [  2560,     1]     NONE
 -  72: [  2560,     1]     NONE
 -  73: [ 10240,     1]     NONE
 -  74: [  2560,     1]     NONE
 -  75: [  2560,     1]     NONE
 -  76: [  2560,     1]     NONE
 -  77: [  2560,  2560]     NONE
 -  78: [  2560,     1]     NONE
 -  79: [  2560,  2560]     NONE
 -  80: [  2560,     1]     NONE
 -  81: [ 10240,  2560]     NONE
 -  82: [  2560, 10240]     NONE
 -  83: [  2560,     1]     NONE
 -  84: [  2560,  2560]     NONE
 -  85: [  2560,  2560]     NONE
 -  86: [  2560,     1]     NONE
 -  87: [  2560,     1]     NONE
 -  88: [  2560,     1]     NONE
 -  89: [  2560,     1]     NONE
 -  90: [ 10240,     1]     NONE
 -  91: [  2560,     1]     NONE
 -  92: [  2560,     1]     NONE
 -  93: [  2560,     1]     NONE
 -  94: [  2560,  2560]     NONE
 -  95: [  2560,     1]     NONE
 -  96: [  2560,  2560]     NONE
 -  97: [  2560,     1]     NONE
 -  98: [ 10240,  2560]     NONE
 -  99: [  2560, 10240]     NONE
 - 100: [  2560,     1]     NONE
 - 101: [  2560,  2560]     NONE
 - 102: [  2560,  2560]     NONE
 - 103: [  2560,     1]     NONE
 - 104: [  2560,     1]     NONE
 - 105: [  2560,     1]     NONE
 - 106: [  2560,     1]     NONE
 - 107: [ 10240,     1]     NONE
 - 108: [  2560,     1]     NONE
 - 109: [  2560,     1]     NONE
 - 110: [  2560,     1]     NONE
 - 111: [  2560,  2560]     NONE
 - 112: [  2560,     1]     NONE
 - 113: [  2560,  2560]     NONE
 - 114: [  2560,     1]     NONE
 - 115: [ 10240,  2560]     NONE
 - 116: [  2560, 10240]     NONE
 - 117: [  2560,     1]     NONE
 - 118: [  2560,  2560]     NONE
 - 119: [  2560,  2560]     NONE
 - 120: [  2560,     1]     NONE
 - 121: [  2560,     1]     NONE
 - 122: [  2560,     1]     NONE
 - 123: [  2560,     1]     NONE
 - 124: [ 10240,     1]     NONE
 - 125: [  2560,     1]     NONE
 - 126: [  2560,     1]     NONE
 - 127: [  2560,     1]     NONE
 - 128: [  2560,  2560]     NONE
 - 129: [  2560,     1]     NONE
 - 130: [  2560,  2560]     NONE
 - 131: [  2560,     1]     NONE
 - 132: [ 10240,  2560]     NONE
 - 133: [  2560, 10240]     NONE
 - 134: [  2560,     1]     NONE
 - 135: [  2560,  2560]     NONE
 - 136: [  2560,  2560]     NONE
 - 137: [  2560,     1]     NONE
 - 138: [  2560,     1]     NONE
 - 139: [  2560,     1]     NONE
 - 140: [  2560,     1]     NONE
 - 141: [ 10240,     1]     NONE
 - 142: [  2560,     1]     NONE
 - 143: [  2560,     1]     NONE
 - 144: [  2560,     1]     NONE
 - 145: [  2560,  2560]     NONE
 - 146: [  2560,     1]     NONE
 - 147: [  2560,  2560]     NONE
 - 148: [  2560,     1]     NONE
 - 149: [ 10240,  2560]     NONE
 - 150: [  2560, 10240]     NONE
 - 151: [  2560,     1]     NONE
 - 152: [  2560,  2560]     NONE
 - 153: [  2560,  2560]     NONE
 - 154: [  2560,     1]     NONE
 - 155: [  2560,     1]     NONE
 - 156: [  2560,     1]     NONE
 - 157: [  2560,     1]     NONE
 - 158: [ 10240,     1]     NONE
 - 159: [  2560,     1]     NONE
 - 160: [  2560,     1]     NONE
 - 161: [  2560,     1]     NONE
 - 162: [  2560,  2560]     NONE
 - 163: [  2560,     1]     NONE
 - 164: [  2560,  2560]     NONE
 - 165: [  2560,     1]     NONE
 - 166: [ 10240,  2560]     NONE
 - 167: [  2560, 10240]     NONE
 - 168: [  2560,     1]     NONE
 - 169: [  2560,  2560]     NONE
 - 170: [  2560,  2560]     NONE
 - 171: [  2560,     1]     NONE
 - 172: [  2560,     1]     NONE
 - 173: [  2560,     1]     NONE
 - 174: [  2560,     1]     NONE
 - 175: [ 10240,     1]     NONE
 - 176: [  2560,     1]     NONE
 - 177: [  2560,     1]     NONE
 - 178: [  2560,     1]     NONE
 - 179: [  2560,  2560]     NONE
 - 180: [  2560,     1]     NONE
 - 181: [  2560,  2560]     NONE
 - 182: [  2560,     1]     NONE
 - 183: [ 10240,  2560]     NONE
 - 184: [  2560, 10240]     NONE
 - 185: [  2560,     1]     NONE
 - 186: [  2560,  2560]     NONE
 - 187: [  2560,  2560]     NONE
 - 188: [  2560,     1]     NONE
 - 189: [  2560,     1]     NONE
 - 190: [  2560,     1]     NONE
 - 191: [  2560,     1]     NONE
 - 192: [ 10240,     1]     NONE
 - 193: [  2560,     1]     NONE
 - 194: [  2560,     1]     NONE
 - 195: [  2560,     1]     NONE
 - 196: [  2560,  2560]     NONE
 - 197: [  2560,     1]     NONE
 - 198: [  2560,  2560]     NONE
 - 199: [  2560,     1]     NONE
 - 200: [ 10240,  2560]     NONE
 - 201: [  2560, 10240]     NONE
 - 202: [  2560,     1]     NONE
 - 203: [  2560,  2560]     NONE
 - 204: [  2560,  2560]     NONE
 - 205: [  2560,     1]     NONE
 - 206: [  2560,     1]     NONE
 - 207: [  2560,     1]     NONE
 - 208: [  2560,     1]     NONE
 - 209: [ 10240,     1]     NONE
 - 210: [  2560,     1]     NONE
 - 211: [  2560,     1]     NONE
 - 212: [  2560,     1]     NONE
 - 213: [  2560,  2560]     NONE
 - 214: [  2560,     1]     NONE
 - 215: [  2560,  2560]     NONE
 - 216: [  2560,     1]     NONE
 - 217: [ 10240,  2560]     NONE
 - 218: [  2560, 10240]     NONE
 - 219: [  2560,     1]     NONE
 - 220: [  2560,  2560]     NONE
 - 221: [  2560,  2560]     NONE
 - 222: [  2560,     1]     NONE
 - 223: [  2560,     1]     NONE
 - 224: [  2560,     1]     NONE
 - 225: [  2560,     1]     NONE
 - 226: [ 10240,     1]     NONE
 - 227: [  2560,     1]     NONE
 - 228: [  2560,     1]     NONE
 - 229: [  2560,     1]     NONE
 - 230: [  2560,  2560]     NONE
 - 231: [  2560,     1]     NONE
 - 232: [  2560,  2560]     NONE
 - 233: [  2560,     1]     NONE
 - 234: [ 10240,  2560]     NONE
 - 235: [  2560, 10240]     NONE
 - 236: [  2560,     1]     NONE
 - 237: [  2560,  2560]     NONE
 - 238: [  2560,  2560]     NONE
 - 239: [  2560,     1]     NONE
 - 240: [  2560,     1]     NONE
 - 241: [  2560,     1]     NONE
 - 242: [  2560,     1]     NONE
 - 243: [ 10240,     1]     NONE
 - 244: [  2560,     1]     NONE
 - 245: [  2560,     1]     NONE
 - 246: [  2560,     1]     NONE
 - 247: [  2560,  2560]     NONE
 - 248: [  2560,     1]     NONE
 - 249: [  2560,  2560]     NONE
 - 250: [  2560,     1]     NONE
 - 251: [ 10240,  2560]     NONE
 - 252: [  2560, 10240]     NONE
 - 253: [  2560,     1]     NONE
 - 254: [  2560,  2560]     NONE
 - 255: [  2560,  2560]     NONE
 - 256: [  2560,     1]     NONE
 - 257: [  2560,     1]     NONE
 - 258: [  2560,     1]     NONE
 - 259: [  2560,     1]     NONE
 - 260: [ 10240,     1]     NONE
 - 261: [  2560,     1]     NONE
 - 262: [  2560,     1]     NONE
 - 263: [  2560,     1]     NONE
 - 264: [  2560,  2560]     NONE
 - 265: [  2560,     1]     NONE
 - 266: [  2560,  2560]     NONE
 - 267: [  2560,     1]     NONE
 - 268: [ 10240,  2560]     NONE
 - 269: [  2560, 10240]     NONE
 - 270: [  2560,     1]     NONE
 - 271: [  2560,  2560]     NONE
 - 272: [  2560,  2560]     NONE
 - 273: [  2560,     1]     NONE
 - 274: [  2560,     1]     NONE
 - 275: [  2560,     1]     NONE
 - 276: [  2560,     1]     NONE
 - 277: [ 10240,     1]     NONE
 - 278: [  2560,     1]     NONE
 - 279: [  2560,     1]     NONE
 - 280: [  2560,     1]     NONE
 - 281: [  2560,  2560]     NONE
 - 282: [  2560,     1]     NONE
 - 283: [  2560,  2560]     NONE
 - 284: [  2560,     1]     NONE
 - 285: [ 10240,  2560]     NONE
 - 286: [  2560, 10240]     NONE
 - 287: [  2560,     1]     NONE
 - 288: [  2560,  2560]     NONE
 - 289: [  2560,  2560]     NONE
 - 290: [  2560,     1]     NONE
 - 291: [  2560,     1]     NONE
 - 292: [  2560,     1]     NONE
 - 293: [  2560,     1]     NONE
 - 294: [ 10240,     1]     NONE
 - 295: [  2560,     1]     NONE
 - 296: [  2560,     1]     NONE
 - 297: [  2560,     1]     NONE
 - 298: [  2560,  2560]     NONE
 - 299: [  2560,     1]     NONE
 - 300: [  2560,  2560]     NONE
 - 301: [  2560,     1]     NONE
 - 302: [ 10240,  2560]     NONE
 - 303: [  2560, 10240]     NONE
 - 304: [  2560,     1]     NONE
 - 305: [  2560,  2560]     NONE
 - 306: [  2560,  2560]     NONE
 - 307: [  2560,     1]     NONE
 - 308: [  2560,     1]     NONE
 - 309: [  2560,     1]     NONE
 - 310: [  2560,     1]     NONE
 - 311: [ 10240,     1]     NONE
 - 312: [  2560,     1]     NONE
 - 313: [  2560,     1]     NONE
 - 314: [  2560,     1]     NONE
 - 315: [  2560,  2560]     NONE
 - 316: [  2560,     1]     NONE
 - 317: [  2560,  2560]     NONE
 - 318: [  2560,     1]     NONE
 - 319: [ 10240,  2560]     NONE
 - 320: [  2560, 10240]     NONE
 - 321: [  2560,     1]     NONE
 - 322: [  2560,  2560]     NONE
 - 323: [  2560,  2560]     NONE
 - 324: [  2560,     1]     NONE
 - 325: [  2560,     1]     NONE
 - 326: [  2560,     1]     NONE
 - 327: [  2560,     1]     NONE
 - 328: [ 10240,     1]     NONE
 - 329: [  2560,     1]     NONE
 - 330: [  2560,     1]     NONE
 - 331: [  2560,     1]     NONE
 - 332: [  2560,  2560]     NONE
 - 333: [  2560,     1]     NONE
 - 334: [  2560,  2560]     NONE
 - 335: [  2560,     1]     NONE
 - 336: [ 10240,  2560]     NONE
 - 337: [  2560, 10240]     NONE
 - 338: [  2560,     1]     NONE
 - 339: [  2560,  2560]     NONE
 - 340: [  2560,  2560]     NONE
 - 341: [  2560,     1]     NONE
 - 342: [  2560,     1]     NONE
 - 343: [  2560,     1]     NONE
 - 344: [  2560,     1]     NONE
 - 345: [ 10240,     1]     NONE
 - 346: [  2560,     1]     NONE
 - 347: [  2560,     1]     NONE
 - 348: [  2560,     1]     NONE
 - 349: [  2560,  2560]     NONE
 - 350: [  2560,     1]     NONE
 - 351: [  2560,  2560]     NONE
 - 352: [  2560,     1]     NONE
 - 353: [ 10240,  2560]     NONE
 - 354: [  2560, 10240]     NONE
 - 355: [  2560,     1]     NONE
 - 356: [  2560,  2560]     NONE
 - 357: [  2560,  2560]     NONE
 - 358: [  2560,     1]     NONE
 - 359: [  2560,     1]     NONE
 - 360: [  2560,     1]     NONE
 - 361: [  2560,     1]     NONE
 - 362: [ 10240,     1]     NONE
 - 363: [  2560,     1]     NONE
 - 364: [  2560,     1]     NONE
 - 365: [  2560,     1]     NONE
 - 366: [  2560,  2560]     NONE
 - 367: [  2560,     1]     NONE
 - 368: [  2560,  2560]     NONE
 - 369: [  2560,     1]     NONE
 - 370: [ 10240,  2560]     NONE
 - 371: [  2560, 10240]     NONE
 - 372: [  2560,     1]     NONE
 - 373: [  2560,  2560]     NONE
 - 374: [  2560,  2560]     NONE
 - 375: [  2560,     1]     NONE
 - 376: [  2560,     1]     NONE
 - 377: [  2560,     1]     NONE
 - 378: [  2560,     1]     NONE
 - 379: [ 10240,     1]     NONE
 - 380: [  2560,     1]     NONE
 - 381: [  2560,     1]     NONE
 - 382: [  2560,     1]     NONE
 - 383: [  2560,  2560]     NONE
 - 384: [  2560,     1]     NONE
 - 385: [  2560,  2560]     NONE
 - 386: [  2560,     1]     NONE
 - 387: [ 10240,  2560]     NONE
 - 388: [  2560, 10240]     NONE
 - 389: [  2560,     1]     NONE
 - 390: [  2560,  2560]     NONE
 - 391: [  2560,  2560]     NONE
 - 392: [  2560,     1]     NONE
 - 393: [  2560,     1]     NONE
 - 394: [  2560,     1]     NONE
 - 395: [  2560,     1]     NONE
 - 396: [ 10240,     1]     NONE
 - 397: [  2560,     1]     NONE
 - 398: [  2560,     1]     NONE
 - 399: [  2560,     1]     NONE
 - 400: [  2560,  2560]     NONE
 - 401: [  2560,     1]     NONE
 - 402: [  2560,  2560]     NONE
 - 403: [  2560,     1]     NONE
 - 404: [ 10240,  2560]     NONE
 - 405: [  2560, 10240]     NONE
 - 406: [  2560,     1]     NONE
 - 407: [  2560,  2560]     NONE
 - 408: [  2560,  2560]     NONE
 - 409: [  2560,     1]     NONE
 - 410: [  2560,     1]     NONE
 - 411: [  2560,     1]     NONE
 - 412: [  2560,     1]     NONE
 - 413: [ 10240,     1]     NONE
 - 414: [  2560,     1]     NONE
 - 415: [  2560,     1]     NONE
 - 416: [  2560,     1]     NONE
 - 417: [  2560,  2560]     NONE
 - 418: [  2560,     1]     NONE
 - 419: [  2560,  2560]     NONE
 - 420: [  2560,     1]     NONE
 - 421: [ 10240,  2560]     NONE
 - 422: [  2560, 10240]     NONE
 - 423: [  2560,     1]     NONE
 - 424: [  2560,  2560]     NONE
 - 425: [  2560,  2560]     NONE
 - 426: [  2560,     1]     NONE
 - 427: [  2560,     1]     NONE
 - 428: [  2560,     1]     NONE
 - 429: [  2560,     1]     NONE
 - 430: [ 10240,     1]     NONE
 - 431: [  2560,     1]     NONE
 - 432: [  2560,     1]     NONE
 - 433: [  2560,     1]     NONE
 - 434: [  2560,  2560]     NONE
 - 435: [  2560,     1]     NONE
 - 436: [  2560,  2560]     NONE
 - 437: [  2560,     1]     NONE
 - 438: [ 10240,  2560]     NONE
 - 439: [  2560, 10240]     NONE
 - 440: [  2560,     1]     NONE
 - 441: [  2560,  2560]     NONE
 - 442: [  2560,  2560]     NONE
 - 443: [  2560,     1]     NONE
 - 444: [  2560,     1]     NONE
 - 445: [  2560,     1]     NONE
 - 446: [  2560,     1]     NONE
 - 447: [ 10240,     1]     NONE
 - 448: [  2560,     1]     NONE
 - 449: [  2560,     1]     NONE
 - 450: [  2560,     1]     NONE
 - 451: [  2560,  2560]     NONE
 - 452: [  2560,     1]     NONE
 - 453: [  2560,  2560]     NONE
 - 454: [  2560,     1]     NONE
 - 455: [ 10240,  2560]     NONE
 - 456: [  2560, 10240]     NONE
 - 457: [  2560,     1]     NONE
 - 458: [  2560,  2560]     NONE
 - 459: [  2560,  2560]     NONE
 - 460: [  2560,     1]     NONE
 - 461: [  2560,     1]     NONE
 - 462: [  2560,     1]     NONE
 - 463: [  2560,     1]     NONE
 - 464: [ 10240,     1]     NONE
 - 465: [  2560,     1]     NONE
 - 466: [  2560,     1]     NONE
 - 467: [  2560,     1]     NONE
 - 468: [  2560,  2560]     NONE
 - 469: [  2560,     1]     NONE
 - 470: [  2560,  2560]     NONE
 - 471: [  2560,     1]     NONE
 - 472: [ 10240,  2560]     NONE
 - 473: [  2560, 10240]     NONE
 - 474: [  2560,     1]     NONE
 - 475: [  2560,  2560]     NONE
 - 476: [  2560,  2560]     NONE
 - 477: [  2560,     1]     NONE
 - 478: [  2560,     1]     NONE
 - 479: [  2560,     1]     NONE
 - 480: [  2560,     1]     NONE
 - 481: [ 10240,     1]     NONE
 - 482: [  2560,     1]     NONE
 - 483: [  2560,     1]     NONE
 - 484: [  2560,     1]     NONE
 - 485: [  2560,  2560]     NONE
 - 486: [  2560,     1]     NONE
 - 487: [  2560,  2560]     NONE
 - 488: [  2560,     1]     NONE
 - 489: [ 10240,  2560]     NONE
 - 490: [  2560, 10240]     NONE
 - 491: [  2560,     1]     NONE
 - 492: [  2560,  2560]     NONE
 - 493: [  2560,  2560]     NONE
 - 494: [  2560,     1]     NONE
 - 495: [  2560,     1]     NONE
 - 496: [  2560,     1]     NONE
 - 497: [  2560,     1]     NONE
 - 498: [ 10240,     1]     NONE
 - 499: [  2560,     1]     NONE
 - 500: [  2560,     1]     NONE
 - 501: [  2560,     1]     NONE
 - 502: [  2560,  2560]     NONE
 - 503: [  2560,     1]     NONE
 - 504: [  2560,  2560]     NONE
 - 505: [  2560,     1]     NONE
 - 506: [ 10240,  2560]     NONE
 - 507: [  2560, 10240]     NONE
 - 508: [  2560,     1]     NONE
 - 509: [  2560,  2560]     NONE
 - 510: [  2560,  2560]     NONE
 - 511: [  2560,     1]     NONE
 - 512: [  2560,     1]     NONE
 - 513: [  2560,     1]     NONE
 - 514: [  2560,     1]     NONE
 - 515: [ 10240,     1]     NONE
 - 516: [  2560,     1]     NONE
 - 517: [  2560,     1]     NONE
 - 518: [  2560,     1]     NONE
 - 519: [  2560,  2560]     NONE
 - 520: [  2560,     1]     NONE
 - 521: [  2560,  2560]     NONE
 - 522: [  2560,     1]     NONE
 - 523: [ 10240,  2560]     NONE
 - 524: [  2560, 10240]     NONE
 - 525: [  2560,     1]     NONE
 - 526: [  2560,  2560]     NONE
 - 527: [  2560,  2560]     NONE
 - 528: [  2560,     1]     NONE
 - 529: [  2560,     1]     NONE
 - 530: [  2560,     1]     NONE
 - 531: [  2560,     1]     NONE
 - 532: [ 10240,     1]     NONE
 - 533: [  2560,     1]     NONE
 - 534: [  2560,     1]     NONE
 - 535: [  2560,     1]     NONE
 - 536: [  2560,  2560]     NONE
 - 537: [  2560,     1]     NONE
 - 538: [  2560, 102400]     NONE
 - 539: [  2560,     1]     NONE
 - 540: [ 10240,  2560]     NONE
 - 541: [  2560, 10240]     NONE
 - 542: [  2560,     1]     NONE
 - 543: [  2560,  2560]     NONE
 - 544: [  2560,  2560]     NONE
 - 545: [  2560,     1]     NONE
 - 546: [  2560,     1]     NONE
 - 547: [  2560,     1]     NONE
 - 548: [  2560,     1]     NONE
 - 549: [ 10240,     1]     NONE
 - 550: [  2560,     1]     NONE
 - 551: [  2560,     1]     NONE
perf_total_per_op_us[             ADD] =   0.321 ms
perf_total_per_op_us[             MUL] =   0.065 ms
perf_total_per_op_us[            NORM] =   0.065 ms
perf_total_per_op_us[         MUL_MAT] =   0.257 ms
perf_total_per_op_us[           SCALE] =   0.032 ms
perf_total_per_op_us[             CPY] =   0.096 ms
perf_total_per_op_us[         RESHAPE] =   0.096 ms
perf_total_per_op_us[            VIEW] =   0.128 ms
perf_total_per_op_us[         PERMUTE] =   0.064 ms
perf_total_per_op_us[       TRANSPOSE] =   0.032 ms
perf_total_per_op_us[        GET_ROWS] =   0.001 ms
perf_total_per_op_us[   DIAG_MASK_INF] =   0.032 ms
perf_total_per_op_us[        SOFT_MAX] =   0.032 ms
perf_total_per_op_us[            ROPE] =   0.064 ms
perf_total_per_op_us[           UNARY] =   0.032 ms
========================================
user=== GRAPH ===
n_nodes = 1317
 -   0: [  2560,     1,     1]         GET_ROWS   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   1: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   2: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   3: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   4: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   5: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   6: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   7: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   8: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   9: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  10: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  11: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  12: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  13: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  14: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  15: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  16: [    17,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  17: [   128,    17,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  18: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  19: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  20: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  21: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  22: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  23: [    17,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  24: [    17,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  25: [    17,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  26: [    17,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  27: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  28: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  29: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  30: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  31: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  32: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  33: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  34: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  35: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  36: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  37: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  38: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  39: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  40: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  41: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  42: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  43: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  44: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  45: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  46: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  47: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  48: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  49: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  50: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  51: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  52: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  53: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  54: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  55: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  56: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  57: [    17,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  58: [   128,    17,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  59: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  60: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  61: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  62: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  63: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  64: [    17,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  65: [    17,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  66: [    17,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  67: [    17,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  68: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  69: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  70: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  71: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  72: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  73: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  74: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  75: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  76: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  77: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  78: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  79: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  80: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  81: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  82: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  83: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  84: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  85: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  86: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  87: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  88: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  89: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  90: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  91: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  92: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  93: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  94: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  95: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  96: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  97: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  98: [    17,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  99: [   128,    17,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 100: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 102: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 103: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 104: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 105: [    17,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 106: [    17,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 107: [    17,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 108: [    17,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 109: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 110: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 111: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 112: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 113: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 114: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 115: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 116: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 117: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 118: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 119: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 120: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 121: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 122: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 123: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 124: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 125: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 127: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 128: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 129: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 130: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 131: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 132: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 133: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 134: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 135: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 136: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 137: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 138: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 139: [    17,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 140: [   128,    17,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 141: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 143: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 144: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 145: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 146: [    17,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 147: [    17,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 148: [    17,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 149: [    17,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 150: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 151: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 152: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 153: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 154: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 155: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 156: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 157: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 158: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 159: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 160: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 161: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 162: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 163: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 164: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 165: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 166: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 168: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 169: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 170: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 171: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 172: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 173: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 174: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 175: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 176: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 177: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 178: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 179: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 180: [    17,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 181: [   128,    17,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 182: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 184: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 185: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 186: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 187: [    17,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 188: [    17,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 189: [    17,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 190: [    17,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 191: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 192: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 193: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 194: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 195: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 196: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 197: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 198: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 199: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 200: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 201: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 202: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 203: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 204: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 205: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 206: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 207: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 209: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 210: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 211: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 212: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 213: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 214: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 215: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 216: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 217: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 218: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 219: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 220: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 221: [    17,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 222: [   128,    17,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 223: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 225: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 226: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 227: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 228: [    17,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 229: [    17,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 230: [    17,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 231: [    17,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 232: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 233: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 234: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 235: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 236: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 237: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 238: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 239: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 240: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 241: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 242: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 243: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 244: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 245: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 246: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 247: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 248: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 250: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 251: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 252: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 253: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 254: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 255: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 256: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 257: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 258: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 259: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 260: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 261: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 262: [    17,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 263: [   128,    17,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 264: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 266: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 267: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 268: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 269: [    17,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 270: [    17,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 271: [    17,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 272: [    17,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 273: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 274: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 275: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 276: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 277: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 278: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 279: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 280: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 281: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 282: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 283: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 284: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 285: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 286: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 287: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 288: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 289: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 291: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 292: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 293: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 294: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 295: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 296: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 297: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 298: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 299: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 300: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 301: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 302: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 303: [    17,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 304: [   128,    17,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 305: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 307: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 308: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 309: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 310: [    17,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 311: [    17,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 312: [    17,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 313: [    17,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 314: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 315: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 316: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 317: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 318: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 319: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 320: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 321: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 322: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 323: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 324: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 325: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 326: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 327: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 328: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 329: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 330: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 331: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 332: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 333: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 334: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 335: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 336: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 337: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 338: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 339: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 340: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 341: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 342: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 343: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 344: [    17,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 345: [   128,    17,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 346: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 347: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 348: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 349: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 350: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 351: [    17,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 352: [    17,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 353: [    17,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 354: [    17,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 355: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 356: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 357: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 358: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 359: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 360: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 361: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 362: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 363: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 364: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 365: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 366: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 367: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 368: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 369: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 370: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 371: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 372: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 373: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 374: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 375: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 376: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 377: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 378: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 379: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 380: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 381: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 382: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 383: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 384: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 385: [    17,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 386: [   128,    17,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 387: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 388: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 389: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 390: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 391: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 392: [    17,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 393: [    17,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 394: [    17,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 395: [    17,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 396: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 397: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 398: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 399: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 400: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 401: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 402: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 403: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 404: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 405: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 406: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 407: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 408: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 409: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 410: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 411: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 412: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 413: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 414: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 415: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 416: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 417: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 418: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 419: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 420: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 421: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 422: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 423: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 424: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 425: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 426: [    17,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 427: [   128,    17,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 428: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 429: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 430: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 431: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 432: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 433: [    17,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 434: [    17,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 435: [    17,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 436: [    17,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 437: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 438: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 439: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 440: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 441: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 442: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 443: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 444: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 445: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 446: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 447: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 448: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 449: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 450: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 451: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 452: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 453: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 454: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 455: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 456: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 457: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 458: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 459: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 460: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 461: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 462: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 463: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 464: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 465: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 466: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 467: [    17,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 468: [   128,    17,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 469: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 470: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 471: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 472: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 473: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 474: [    17,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 475: [    17,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 476: [    17,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 477: [    17,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 478: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 479: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 480: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 481: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 482: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 483: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 484: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 485: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 486: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 487: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 488: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 489: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 490: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 491: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 492: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 493: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 494: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 495: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 496: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 497: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 498: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 499: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 500: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 501: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 502: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 503: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 504: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 505: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 506: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 507: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 508: [    17,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 509: [   128,    17,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 510: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 511: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 512: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 513: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 514: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 515: [    17,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 516: [    17,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 517: [    17,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 518: [    17,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 519: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 520: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 521: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 522: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 523: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 524: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 525: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 526: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 527: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 528: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 529: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 530: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 531: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 532: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 533: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 534: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 535: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 536: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 537: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 538: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 539: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 540: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 541: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 542: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 543: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 544: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 545: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 546: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 547: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 548: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 549: [    17,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 550: [   128,    17,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 551: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 552: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 553: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 554: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 555: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 556: [    17,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 557: [    17,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 558: [    17,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 559: [    17,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 560: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 561: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 562: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 563: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 564: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 565: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 566: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 567: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 568: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 569: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 570: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 571: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 572: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 573: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 574: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 575: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 576: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 577: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 578: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 579: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 580: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 581: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 582: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 583: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 584: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 585: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 586: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 587: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 588: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 589: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 590: [    17,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 591: [   128,    17,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 592: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 593: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 594: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 595: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 596: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 597: [    17,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 598: [    17,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 599: [    17,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 600: [    17,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 601: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 602: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 603: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 604: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 605: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 606: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 607: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 608: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 609: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 610: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 611: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 612: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 613: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 614: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 615: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 616: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 617: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 618: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 619: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 620: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 621: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 622: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 623: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 624: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 625: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 626: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 627: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 628: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 629: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 630: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 631: [    17,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 632: [   128,    17,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 633: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 634: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 635: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 636: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 637: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 638: [    17,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 639: [    17,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 640: [    17,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 641: [    17,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 642: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 643: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 644: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 645: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 646: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 647: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 648: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 649: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 650: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 651: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 652: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 653: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 654: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 655: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 656: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 657: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 658: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 659: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 660: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 661: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 662: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 663: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 664: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 665: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 666: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 667: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 668: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 669: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 670: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 671: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 672: [    17,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 673: [   128,    17,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 674: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 675: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 676: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 677: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 678: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 679: [    17,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 680: [    17,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 681: [    17,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 682: [    17,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 683: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 684: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 685: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 686: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 687: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 688: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 689: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 690: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 691: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 692: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 693: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 694: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 695: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 696: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 697: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 698: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 699: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 700: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 701: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 702: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 703: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 704: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 705: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 706: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 707: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 708: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 709: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 710: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 711: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 712: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 713: [    17,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 714: [   128,    17,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 715: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 716: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 717: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 718: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 719: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 720: [    17,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 721: [    17,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 722: [    17,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 723: [    17,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 724: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 725: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 726: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 727: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 728: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 729: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 730: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 731: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 732: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 733: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 734: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 735: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 736: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 737: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 738: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 739: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 740: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 741: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 742: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 743: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 744: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 745: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 746: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 747: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 748: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 749: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 750: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 751: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 752: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 753: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 754: [    17,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 755: [   128,    17,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 756: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 757: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 758: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 759: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 760: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 761: [    17,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 762: [    17,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 763: [    17,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 764: [    17,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 765: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 766: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 767: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 768: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 769: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 770: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 771: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 772: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 773: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 774: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 775: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 776: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 777: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 778: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 779: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 780: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 781: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 782: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 783: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 784: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 785: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 786: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 787: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 788: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 789: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 790: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 791: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 792: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 793: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 794: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 795: [    17,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 796: [   128,    17,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 797: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 798: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 799: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 800: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 801: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 802: [    17,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 803: [    17,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 804: [    17,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 805: [    17,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 806: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 807: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 808: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 809: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 810: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 811: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 812: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 813: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 814: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 815: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 816: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 817: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 818: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 819: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 820: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 821: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 822: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 823: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 824: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 825: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 826: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 827: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 828: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 829: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 830: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 831: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 832: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 833: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 834: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 835: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 836: [    17,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 837: [   128,    17,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 838: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 839: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 840: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 841: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 842: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 843: [    17,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 844: [    17,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 845: [    17,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 846: [    17,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 847: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 848: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 849: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 850: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 851: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 852: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 853: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 854: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 855: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 856: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 857: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 858: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 859: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 860: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 861: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 862: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 863: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 864: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 865: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 866: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 867: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 868: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 869: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 870: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 871: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 872: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 873: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 874: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 875: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 876: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 877: [    17,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 878: [   128,    17,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 879: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 880: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 881: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 882: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 883: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 884: [    17,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 885: [    17,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 886: [    17,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 887: [    17,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 888: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 889: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 890: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 891: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 892: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 893: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 894: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 895: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 896: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 897: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 898: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 899: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 900: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 901: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 902: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 903: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 904: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 905: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 906: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 907: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 908: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 909: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 910: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 911: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 912: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 913: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 914: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 915: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 916: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 917: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 918: [    17,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 919: [   128,    17,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 920: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 921: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 922: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 923: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 924: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 925: [    17,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 926: [    17,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 927: [    17,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 928: [    17,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 929: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 930: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 931: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 932: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 933: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 934: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 935: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 936: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 937: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 938: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 939: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 940: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 941: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 942: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 943: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 944: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 945: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 946: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 947: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 948: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 949: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 950: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 951: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 952: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 953: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 954: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 955: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 956: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 957: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 958: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 959: [    17,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 960: [   128,    17,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 961: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 962: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 963: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 964: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 965: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 966: [    17,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 967: [    17,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 968: [    17,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 969: [    17,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 970: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 971: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 972: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 973: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 974: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 975: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 976: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 977: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 978: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 979: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 980: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 981: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 982: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 983: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 984: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 985: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 986: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 987: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 988: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 989: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 990: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 991: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 992: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 993: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 994: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 995: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 996: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 997: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 998: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 999: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1000: [    17,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1001: [   128,    17,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1002: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1003: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1004: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1005: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1006: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1007: [    17,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1008: [    17,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1009: [    17,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1010: [    17,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1011: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1012: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1013: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1014: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1015: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1016: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1017: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1018: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1019: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1020: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1021: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1022: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1023: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1024: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1025: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1026: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1027: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1028: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1029: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1030: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1031: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1032: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1033: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1034: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1035: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1036: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1037: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1038: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1039: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1040: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1041: [    17,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1042: [   128,    17,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1043: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1044: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1045: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1046: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1047: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1048: [    17,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1049: [    17,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1050: [    17,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1051: [    17,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1052: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1053: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1054: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1055: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1056: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1057: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1058: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1059: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1060: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1061: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1062: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1063: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1064: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1065: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1066: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1067: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1068: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1069: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1070: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1071: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1072: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1073: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1074: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1075: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1076: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1077: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1078: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1079: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1080: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1081: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1082: [    17,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1083: [   128,    17,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1084: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1085: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1086: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1087: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1088: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1089: [    17,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1090: [    17,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1091: [    17,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1092: [    17,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1093: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1094: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1095: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1096: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1097: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1098: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1099: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1100: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1102: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1103: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1104: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1105: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1106: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1107: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1108: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1109: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1110: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1111: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1112: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1113: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1114: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1115: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1116: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1117: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1118: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1119: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1120: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1121: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1122: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1123: [    17,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1124: [   128,    17,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1125: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1127: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1128: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1129: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1130: [    17,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1131: [    17,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1132: [    17,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1133: [    17,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1134: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1135: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1136: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1137: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1138: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1139: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1140: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1141: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1143: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1144: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1145: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1146: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1147: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1148: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1149: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1150: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1151: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1152: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1153: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1154: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1155: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1156: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1157: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1158: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1159: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1160: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1161: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1162: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1163: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1164: [    17,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1165: [   128,    17,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1166: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1168: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1169: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1170: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1171: [    17,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1172: [    17,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1173: [    17,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1174: [    17,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1175: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1176: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1177: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1178: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1179: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1180: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1181: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1182: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1184: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1185: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1186: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1187: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1188: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1189: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1190: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1191: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1192: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1193: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1194: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1195: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1196: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1197: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1198: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1199: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1200: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1201: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1202: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1203: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1204: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1205: [    17,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1206: [   128,    17,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1207: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1209: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1210: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1211: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1212: [    17,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1213: [    17,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1214: [    17,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1215: [    17,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1216: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1217: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1218: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1219: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1220: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1221: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1222: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1223: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1225: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1226: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1227: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1228: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1229: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1230: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1231: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1232: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1233: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1234: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1235: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1236: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1237: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1238: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1239: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1240: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1241: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1242: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1243: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1244: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1245: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1246: [    17,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1247: [   128,    17,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1248: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1250: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1251: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1252: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1253: [    17,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1254: [    17,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1255: [    17,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1256: [    17,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1257: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1258: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1259: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1260: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1261: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1262: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1263: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1264: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1266: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1267: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1268: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1269: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1270: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1271: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1272: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1273: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1274: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1275: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1276: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1277: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1278: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1279: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1280: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1281: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1282: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1283: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1284: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1285: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1286: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1287: [    17,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1288: [   128,    17,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1289: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1291: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1292: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1293: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1294: [    17,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1295: [    17,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1296: [    17,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1297: [    17,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1298: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1299: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1300: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1301: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1302: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1303: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1304: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1305: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1307: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1308: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1309: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1310: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1311: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1312: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1313: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1314: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1315: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1316: [ 102400,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
n_leafs = 552
 -   0: [  2560,  2560]     NONE
 -   1: [  2560,     1]     NONE
 -   2: [  2560, 102400]     NONE
 -   3: [     1,     1]     NONE
 -   4: [  2560,     1]     NONE
 -   5: [  2560,     1]     NONE
 -   6: [ 41943040,     1]     NONE
 -   7: [  2560,  2560]     NONE
 -   8: [  2560,     1]     NONE
 -   9: [ 41943040,     1]     NONE
 -  10: [  2560,  2560]     NONE
 -  11: [  2560,     1]     NONE
 -  12: [ 10240,  2560]     NONE
 -  13: [  2560, 10240]     NONE
 -  14: [  2560,     1]     NONE
 -  15: [  2560,  2560]     NONE
 -  16: [  2560,  2560]     NONE
 -  17: [  2560,     1]     NONE
 -  18: [     1,     1]     NONE
 -  19: [  2560,     1]     NONE
 -  20: [  2560,     1]     NONE
 -  21: [  2560,     1]     NONE
 -  22: [ 10240,     1]     NONE
 -  23: [  2560,     1]     NONE
 -  24: [  2560,     1]     NONE
 -  25: [  2560,     1]     NONE
 -  26: [  2560,  2560]     NONE
 -  27: [  2560,     1]     NONE
 -  28: [  2560,  2560]     NONE
 -  29: [  2560,     1]     NONE
 -  30: [ 10240,  2560]     NONE
 -  31: [  2560, 10240]     NONE
 -  32: [  2560,     1]     NONE
 -  33: [  2560,  2560]     NONE
 -  34: [  2560,  2560]     NONE
 -  35: [  2560,     1]     NONE
 -  36: [  2560,     1]     NONE
 -  37: [  2560,     1]     NONE
 -  38: [  2560,     1]     NONE
 -  39: [ 10240,     1]     NONE
 -  40: [  2560,     1]     NONE
 -  41: [  2560,     1]     NONE
 -  42: [  2560,     1]     NONE
 -  43: [  2560,  2560]     NONE
 -  44: [  2560,     1]     NONE
 -  45: [  2560,  2560]     NONE
 -  46: [  2560,     1]     NONE
 -  47: [ 10240,  2560]     NONE
 -  48: [  2560, 10240]     NONE
 -  49: [  2560,     1]     NONE
 -  50: [  2560,  2560]     NONE
 -  51: [  2560,  2560]     NONE
 -  52: [  2560,     1]     NONE
 -  53: [  2560,     1]     NONE
 -  54: [  2560,     1]     NONE
 -  55: [  2560,     1]     NONE
 -  56: [ 10240,     1]     NONE
 -  57: [  2560,     1]     NONE
 -  58: [  2560,     1]     NONE
 -  59: [  2560,     1]     NONE
 -  60: [  2560,  2560]     NONE
 -  61: [  2560,     1]     NONE
 -  62: [  2560,  2560]     NONE
 -  63: [  2560,     1]     NONE
 -  64: [ 10240,  2560]     NONE
 -  65: [  2560, 10240]     NONE
 -  66: [  2560,     1]     NONE
 -  67: [  2560,  2560]     NONE
 -  68: [  2560,  2560]     NONE
 -  69: [  2560,     1]     NONE
 -  70: [  2560,     1]     NONE
 -  71: [  2560,     1]     NONE
 -  72: [  2560,     1]     NONE
 -  73: [ 10240,     1]     NONE
 -  74: [  2560,     1]     NONE
 -  75: [  2560,     1]     NONE
 -  76: [  2560,     1]     NONE
 -  77: [  2560,  2560]     NONE
 -  78: [  2560,     1]     NONE
 -  79: [  2560,  2560]     NONE
 -  80: [  2560,     1]     NONE
 -  81: [ 10240,  2560]     NONE
 -  82: [  2560, 10240]     NONE
 -  83: [  2560,     1]     NONE
 -  84: [  2560,  2560]     NONE
 -  85: [  2560,  2560]     NONE
 -  86: [  2560,     1]     NONE
 -  87: [  2560,     1]     NONE
 -  88: [  2560,     1]     NONE
 -  89: [  2560,     1]     NONE
 -  90: [ 10240,     1]     NONE
 -  91: [  2560,     1]     NONE
 -  92: [  2560,     1]     NONE
 -  93: [  2560,     1]     NONE
 -  94: [  2560,  2560]     NONE
 -  95: [  2560,     1]     NONE
 -  96: [  2560,  2560]     NONE
 -  97: [  2560,     1]     NONE
 -  98: [ 10240,  2560]     NONE
 -  99: [  2560, 10240]     NONE
 - 100: [  2560,     1]     NONE
 - 101: [  2560,  2560]     NONE
 - 102: [  2560,  2560]     NONE
 - 103: [  2560,     1]     NONE
 - 104: [  2560,     1]     NONE
 - 105: [  2560,     1]     NONE
 - 106: [  2560,     1]     NONE
 - 107: [ 10240,     1]     NONE
 - 108: [  2560,     1]     NONE
 - 109: [  2560,     1]     NONE
 - 110: [  2560,     1]     NONE
 - 111: [  2560,  2560]     NONE
 - 112: [  2560,     1]     NONE
 - 113: [  2560,  2560]     NONE
 - 114: [  2560,     1]     NONE
 - 115: [ 10240,  2560]     NONE
 - 116: [  2560, 10240]     NONE
 - 117: [  2560,     1]     NONE
 - 118: [  2560,  2560]     NONE
 - 119: [  2560,  2560]     NONE
 - 120: [  2560,     1]     NONE
 - 121: [  2560,     1]     NONE
 - 122: [  2560,     1]     NONE
 - 123: [  2560,     1]     NONE
 - 124: [ 10240,     1]     NONE
 - 125: [  2560,     1]     NONE
 - 126: [  2560,     1]     NONE
 - 127: [  2560,     1]     NONE
 - 128: [  2560,  2560]     NONE
 - 129: [  2560,     1]     NONE
 - 130: [  2560,  2560]     NONE
 - 131: [  2560,     1]     NONE
 - 132: [ 10240,  2560]     NONE
 - 133: [  2560, 10240]     NONE
 - 134: [  2560,     1]     NONE
 - 135: [  2560,  2560]     NONE
 - 136: [  2560,  2560]     NONE
 - 137: [  2560,     1]     NONE
 - 138: [  2560,     1]     NONE
 - 139: [  2560,     1]     NONE
 - 140: [  2560,     1]     NONE
 - 141: [ 10240,     1]     NONE
 - 142: [  2560,     1]     NONE
 - 143: [  2560,     1]     NONE
 - 144: [  2560,     1]     NONE
 - 145: [  2560,  2560]     NONE
 - 146: [  2560,     1]     NONE
 - 147: [  2560,  2560]     NONE
 - 148: [  2560,     1]     NONE
 - 149: [ 10240,  2560]     NONE
 - 150: [  2560, 10240]     NONE
 - 151: [  2560,     1]     NONE
 - 152: [  2560,  2560]     NONE
 - 153: [  2560,  2560]     NONE
 - 154: [  2560,     1]     NONE
 - 155: [  2560,     1]     NONE
 - 156: [  2560,     1]     NONE
 - 157: [  2560,     1]     NONE
 - 158: [ 10240,     1]     NONE
 - 159: [  2560,     1]     NONE
 - 160: [  2560,     1]     NONE
 - 161: [  2560,     1]     NONE
 - 162: [  2560,  2560]     NONE
 - 163: [  2560,     1]     NONE
 - 164: [  2560,  2560]     NONE
 - 165: [  2560,     1]     NONE
 - 166: [ 10240,  2560]     NONE
 - 167: [  2560, 10240]     NONE
 - 168: [  2560,     1]     NONE
 - 169: [  2560,  2560]     NONE
 - 170: [  2560,  2560]     NONE
 - 171: [  2560,     1]     NONE
 - 172: [  2560,     1]     NONE
 - 173: [  2560,     1]     NONE
 - 174: [  2560,     1]     NONE
 - 175: [ 10240,     1]     NONE
 - 176: [  2560,     1]     NONE
 - 177: [  2560,     1]     NONE
 - 178: [  2560,     1]     NONE
 - 179: [  2560,  2560]     NONE
 - 180: [  2560,     1]     NONE
 - 181: [  2560,  2560]     NONE
 - 182: [  2560,     1]     NONE
 - 183: [ 10240,  2560]     NONE
 - 184: [  2560, 10240]     NONE
 - 185: [  2560,     1]     NONE
 - 186: [  2560,  2560]     NONE
 - 187: [  2560,  2560]     NONE
 - 188: [  2560,     1]     NONE
 - 189: [  2560,     1]     NONE
 - 190: [  2560,     1]     NONE
 - 191: [  2560,     1]     NONE
 - 192: [ 10240,     1]     NONE
 - 193: [  2560,     1]     NONE
 - 194: [  2560,     1]     NONE
 - 195: [  2560,     1]     NONE
 - 196: [  2560,  2560]     NONE
 - 197: [  2560,     1]     NONE
 - 198: [  2560,  2560]     NONE
 - 199: [  2560,     1]     NONE
 - 200: [ 10240,  2560]     NONE
 - 201: [  2560, 10240]     NONE
 - 202: [  2560,     1]     NONE
 - 203: [  2560,  2560]     NONE
 - 204: [  2560,  2560]     NONE
 - 205: [  2560,     1]     NONE
 - 206: [  2560,     1]     NONE
 - 207: [  2560,     1]     NONE
 - 208: [  2560,     1]     NONE
 - 209: [ 10240,     1]     NONE
 - 210: [  2560,     1]     NONE
 - 211: [  2560,     1]     NONE
 - 212: [  2560,     1]     NONE
 - 213: [  2560,  2560]     NONE
 - 214: [  2560,     1]     NONE
 - 215: [  2560,  2560]     NONE
 - 216: [  2560,     1]     NONE
 - 217: [ 10240,  2560]     NONE
 - 218: [  2560, 10240]     NONE
 - 219: [  2560,     1]     NONE
 - 220: [  2560,  2560]     NONE
 - 221: [  2560,  2560]     NONE
 - 222: [  2560,     1]     NONE
 - 223: [  2560,     1]     NONE
 - 224: [  2560,     1]     NONE
 - 225: [  2560,     1]     NONE
 - 226: [ 10240,     1]     NONE
 - 227: [  2560,     1]     NONE
 - 228: [  2560,     1]     NONE
 - 229: [  2560,     1]     NONE
 - 230: [  2560,  2560]     NONE
 - 231: [  2560,     1]     NONE
 - 232: [  2560,  2560]     NONE
 - 233: [  2560,     1]     NONE
 - 234: [ 10240,  2560]     NONE
 - 235: [  2560, 10240]     NONE
 - 236: [  2560,     1]     NONE
 - 237: [  2560,  2560]     NONE
 - 238: [  2560,  2560]     NONE
 - 239: [  2560,     1]     NONE
 - 240: [  2560,     1]     NONE
 - 241: [  2560,     1]     NONE
 - 242: [  2560,     1]     NONE
 - 243: [ 10240,     1]     NONE
 - 244: [  2560,     1]     NONE
 - 245: [  2560,     1]     NONE
 - 246: [  2560,     1]     NONE
 - 247: [  2560,  2560]     NONE
 - 248: [  2560,     1]     NONE
 - 249: [  2560,  2560]     NONE
 - 250: [  2560,     1]     NONE
 - 251: [ 10240,  2560]     NONE
 - 252: [  2560, 10240]     NONE
 - 253: [  2560,     1]     NONE
 - 254: [  2560,  2560]     NONE
 - 255: [  2560,  2560]     NONE
 - 256: [  2560,     1]     NONE
 - 257: [  2560,     1]     NONE
 - 258: [  2560,     1]     NONE
 - 259: [  2560,     1]     NONE
 - 260: [ 10240,     1]     NONE
 - 261: [  2560,     1]     NONE
 - 262: [  2560,     1]     NONE
 - 263: [  2560,     1]     NONE
 - 264: [  2560,  2560]     NONE
 - 265: [  2560,     1]     NONE
 - 266: [  2560,  2560]     NONE
 - 267: [  2560,     1]     NONE
 - 268: [ 10240,  2560]     NONE
 - 269: [  2560, 10240]     NONE
 - 270: [  2560,     1]     NONE
 - 271: [  2560,  2560]     NONE
 - 272: [  2560,  2560]     NONE
 - 273: [  2560,     1]     NONE
 - 274: [  2560,     1]     NONE
 - 275: [  2560,     1]     NONE
 - 276: [  2560,     1]     NONE
 - 277: [ 10240,     1]     NONE
 - 278: [  2560,     1]     NONE
 - 279: [  2560,     1]     NONE
 - 280: [  2560,     1]     NONE
 - 281: [  2560,  2560]     NONE
 - 282: [  2560,     1]     NONE
 - 283: [  2560,  2560]     NONE
 - 284: [  2560,     1]     NONE
 - 285: [ 10240,  2560]     NONE
 - 286: [  2560, 10240]     NONE
 - 287: [  2560,     1]     NONE
 - 288: [  2560,  2560]     NONE
 - 289: [  2560,  2560]     NONE
 - 290: [  2560,     1]     NONE
 - 291: [  2560,     1]     NONE
 - 292: [  2560,     1]     NONE
 - 293: [  2560,     1]     NONE
 - 294: [ 10240,     1]     NONE
 - 295: [  2560,     1]     NONE
 - 296: [  2560,     1]     NONE
 - 297: [  2560,     1]     NONE
 - 298: [  2560,  2560]     NONE
 - 299: [  2560,     1]     NONE
 - 300: [  2560,  2560]     NONE
 - 301: [  2560,     1]     NONE
 - 302: [ 10240,  2560]     NONE
 - 303: [  2560, 10240]     NONE
 - 304: [  2560,     1]     NONE
 - 305: [  2560,  2560]     NONE
 - 306: [  2560,  2560]     NONE
 - 307: [  2560,     1]     NONE
 - 308: [  2560,     1]     NONE
 - 309: [  2560,     1]     NONE
 - 310: [  2560,     1]     NONE
 - 311: [ 10240,     1]     NONE
 - 312: [  2560,     1]     NONE
 - 313: [  2560,     1]     NONE
 - 314: [  2560,     1]     NONE
 - 315: [  2560,  2560]     NONE
 - 316: [  2560,     1]     NONE
 - 317: [  2560,  2560]     NONE
 - 318: [  2560,     1]     NONE
 - 319: [ 10240,  2560]     NONE
 - 320: [  2560, 10240]     NONE
 - 321: [  2560,     1]     NONE
 - 322: [  2560,  2560]     NONE
 - 323: [  2560,  2560]     NONE
 - 324: [  2560,     1]     NONE
 - 325: [  2560,     1]     NONE
 - 326: [  2560,     1]     NONE
 - 327: [  2560,     1]     NONE
 - 328: [ 10240,     1]     NONE
 - 329: [  2560,     1]     NONE
 - 330: [  2560,     1]     NONE
 - 331: [  2560,     1]     NONE
 - 332: [  2560,  2560]     NONE
 - 333: [  2560,     1]     NONE
 - 334: [  2560,  2560]     NONE
 - 335: [  2560,     1]     NONE
 - 336: [ 10240,  2560]     NONE
 - 337: [  2560, 10240]     NONE
 - 338: [  2560,     1]     NONE
 - 339: [  2560,  2560]     NONE
 - 340: [  2560,  2560]     NONE
 - 341: [  2560,     1]     NONE
 - 342: [  2560,     1]     NONE
 - 343: [  2560,     1]     NONE
 - 344: [  2560,     1]     NONE
 - 345: [ 10240,     1]     NONE
 - 346: [  2560,     1]     NONE
 - 347: [  2560,     1]     NONE
 - 348: [  2560,     1]     NONE
 - 349: [  2560,  2560]     NONE
 - 350: [  2560,     1]     NONE
 - 351: [  2560,  2560]     NONE
 - 352: [  2560,     1]     NONE
 - 353: [ 10240,  2560]     NONE
 - 354: [  2560, 10240]     NONE
 - 355: [  2560,     1]     NONE
 - 356: [  2560,  2560]     NONE
 - 357: [  2560,  2560]     NONE
 - 358: [  2560,     1]     NONE
 - 359: [  2560,     1]     NONE
 - 360: [  2560,     1]     NONE
 - 361: [  2560,     1]     NONE
 - 362: [ 10240,     1]     NONE
 - 363: [  2560,     1]     NONE
 - 364: [  2560,     1]     NONE
 - 365: [  2560,     1]     NONE
 - 366: [  2560,  2560]     NONE
 - 367: [  2560,     1]     NONE
 - 368: [  2560,  2560]     NONE
 - 369: [  2560,     1]     NONE
 - 370: [ 10240,  2560]     NONE
 - 371: [  2560, 10240]     NONE
 - 372: [  2560,     1]     NONE
 - 373: [  2560,  2560]     NONE
 - 374: [  2560,  2560]     NONE
 - 375: [  2560,     1]     NONE
 - 376: [  2560,     1]     NONE
 - 377: [  2560,     1]     NONE
 - 378: [  2560,     1]     NONE
 - 379: [ 10240,     1]     NONE
 - 380: [  2560,     1]     NONE
 - 381: [  2560,     1]     NONE
 - 382: [  2560,     1]     NONE
 - 383: [  2560,  2560]     NONE
 - 384: [  2560,     1]     NONE
 - 385: [  2560,  2560]     NONE
 - 386: [  2560,     1]     NONE
 - 387: [ 10240,  2560]     NONE
 - 388: [  2560, 10240]     NONE
 - 389: [  2560,     1]     NONE
 - 390: [  2560,  2560]     NONE
 - 391: [  2560,  2560]     NONE
 - 392: [  2560,     1]     NONE
 - 393: [  2560,     1]     NONE
 - 394: [  2560,     1]     NONE
 - 395: [  2560,     1]     NONE
 - 396: [ 10240,     1]     NONE
 - 397: [  2560,     1]     NONE
 - 398: [  2560,     1]     NONE
 - 399: [  2560,     1]     NONE
 - 400: [  2560,  2560]     NONE
 - 401: [  2560,     1]     NONE
 - 402: [  2560,  2560]     NONE
 - 403: [  2560,     1]     NONE
 - 404: [ 10240,  2560]     NONE
 - 405: [  2560, 10240]     NONE
 - 406: [  2560,     1]     NONE
 - 407: [  2560,  2560]     NONE
 - 408: [  2560,  2560]     NONE
 - 409: [  2560,     1]     NONE
 - 410: [  2560,     1]     NONE
 - 411: [  2560,     1]     NONE
 - 412: [  2560,     1]     NONE
 - 413: [ 10240,     1]     NONE
 - 414: [  2560,     1]     NONE
 - 415: [  2560,     1]     NONE
 - 416: [  2560,     1]     NONE
 - 417: [  2560,  2560]     NONE
 - 418: [  2560,     1]     NONE
 - 419: [  2560,  2560]     NONE
 - 420: [  2560,     1]     NONE
 - 421: [ 10240,  2560]     NONE
 - 422: [  2560, 10240]     NONE
 - 423: [  2560,     1]     NONE
 - 424: [  2560,  2560]     NONE
 - 425: [  2560,  2560]     NONE
 - 426: [  2560,     1]     NONE
 - 427: [  2560,     1]     NONE
 - 428: [  2560,     1]     NONE
 - 429: [  2560,     1]     NONE
 - 430: [ 10240,     1]     NONE
 - 431: [  2560,     1]     NONE
 - 432: [  2560,     1]     NONE
 - 433: [  2560,     1]     NONE
 - 434: [  2560,  2560]     NONE
 - 435: [  2560,     1]     NONE
 - 436: [  2560,  2560]     NONE
 - 437: [  2560,     1]     NONE
 - 438: [ 10240,  2560]     NONE
 - 439: [  2560, 10240]     NONE
 - 440: [  2560,     1]     NONE
 - 441: [  2560,  2560]     NONE
 - 442: [  2560,  2560]     NONE
 - 443: [  2560,     1]     NONE
 - 444: [  2560,     1]     NONE
 - 445: [  2560,     1]     NONE
 - 446: [  2560,     1]     NONE
 - 447: [ 10240,     1]     NONE
 - 448: [  2560,     1]     NONE
 - 449: [  2560,     1]     NONE
 - 450: [  2560,     1]     NONE
 - 451: [  2560,  2560]     NONE
 - 452: [  2560,     1]     NONE
 - 453: [  2560,  2560]     NONE
 - 454: [  2560,     1]     NONE
 - 455: [ 10240,  2560]     NONE
 - 456: [  2560, 10240]     NONE
 - 457: [  2560,     1]     NONE
 - 458: [  2560,  2560]     NONE
 - 459: [  2560,  2560]     NONE
 - 460: [  2560,     1]     NONE
 - 461: [  2560,     1]     NONE
 - 462: [  2560,     1]     NONE
 - 463: [  2560,     1]     NONE
 - 464: [ 10240,     1]     NONE
 - 465: [  2560,     1]     NONE
 - 466: [  2560,     1]     NONE
 - 467: [  2560,     1]     NONE
 - 468: [  2560,  2560]     NONE
 - 469: [  2560,     1]     NONE
 - 470: [  2560,  2560]     NONE
 - 471: [  2560,     1]     NONE
 - 472: [ 10240,  2560]     NONE
 - 473: [  2560, 10240]     NONE
 - 474: [  2560,     1]     NONE
 - 475: [  2560,  2560]     NONE
 - 476: [  2560,  2560]     NONE
 - 477: [  2560,     1]     NONE
 - 478: [  2560,     1]     NONE
 - 479: [  2560,     1]     NONE
 - 480: [  2560,     1]     NONE
 - 481: [ 10240,     1]     NONE
 - 482: [  2560,     1]     NONE
 - 483: [  2560,     1]     NONE
 - 484: [  2560,     1]     NONE
 - 485: [  2560,  2560]     NONE
 - 486: [  2560,     1]     NONE
 - 487: [  2560,  2560]     NONE
 - 488: [  2560,     1]     NONE
 - 489: [ 10240,  2560]     NONE
 - 490: [  2560, 10240]     NONE
 - 491: [  2560,     1]     NONE
 - 492: [  2560,  2560]     NONE
 - 493: [  2560,  2560]     NONE
 - 494: [  2560,     1]     NONE
 - 495: [  2560,     1]     NONE
 - 496: [  2560,     1]     NONE
 - 497: [  2560,     1]     NONE
 - 498: [ 10240,     1]     NONE
 - 499: [  2560,     1]     NONE
 - 500: [  2560,     1]     NONE
 - 501: [  2560,     1]     NONE
 - 502: [  2560,  2560]     NONE
 - 503: [  2560,     1]     NONE
 - 504: [  2560,  2560]     NONE
 - 505: [  2560,     1]     NONE
 - 506: [ 10240,  2560]     NONE
 - 507: [  2560, 10240]     NONE
 - 508: [  2560,     1]     NONE
 - 509: [  2560,  2560]     NONE
 - 510: [  2560,  2560]     NONE
 - 511: [  2560,     1]     NONE
 - 512: [  2560,     1]     NONE
 - 513: [  2560,     1]     NONE
 - 514: [  2560,     1]     NONE
 - 515: [ 10240,     1]     NONE
 - 516: [  2560,     1]     NONE
 - 517: [  2560,     1]     NONE
 - 518: [  2560,     1]     NONE
 - 519: [  2560,  2560]     NONE
 - 520: [  2560,     1]     NONE
 - 521: [  2560,  2560]     NONE
 - 522: [  2560,     1]     NONE
 - 523: [ 10240,  2560]     NONE
 - 524: [  2560, 10240]     NONE
 - 525: [  2560,     1]     NONE
 - 526: [  2560,  2560]     NONE
 - 527: [  2560,  2560]     NONE
 - 528: [  2560,     1]     NONE
 - 529: [  2560,     1]     NONE
 - 530: [  2560,     1]     NONE
 - 531: [  2560,     1]     NONE
 - 532: [ 10240,     1]     NONE
 - 533: [  2560,     1]     NONE
 - 534: [  2560,     1]     NONE
 - 535: [  2560,     1]     NONE
 - 536: [  2560,  2560]     NONE
 - 537: [  2560,     1]     NONE
 - 538: [  2560, 102400]     NONE
 - 539: [  2560,     1]     NONE
 - 540: [ 10240,  2560]     NONE
 - 541: [  2560, 10240]     NONE
 - 542: [  2560,     1]     NONE
 - 543: [  2560,  2560]     NONE
 - 544: [  2560,  2560]     NONE
 - 545: [  2560,     1]     NONE
 - 546: [  2560,     1]     NONE
 - 547: [  2560,     1]     NONE
 - 548: [  2560,     1]     NONE
 - 549: [ 10240,     1]     NONE
 - 550: [  2560,     1]     NONE
 - 551: [  2560,     1]     NONE
perf_total_per_op_us[             ADD] =   0.321 ms
perf_total_per_op_us[             MUL] =   0.065 ms
perf_total_per_op_us[            NORM] =   0.065 ms
perf_total_per_op_us[         MUL_MAT] =   0.257 ms
perf_total_per_op_us[           SCALE] =   0.032 ms
perf_total_per_op_us[             CPY] =   0.096 ms
perf_total_per_op_us[         RESHAPE] =   0.096 ms
perf_total_per_op_us[            VIEW] =   0.128 ms
perf_total_per_op_us[         PERMUTE] =   0.064 ms
perf_total_per_op_us[       TRANSPOSE] =   0.032 ms
perf_total_per_op_us[        GET_ROWS] =   0.001 ms
perf_total_per_op_us[   DIAG_MASK_INF] =   0.032 ms
perf_total_per_op_us[        SOFT_MAX] =   0.032 ms
perf_total_per_op_us[            ROPE] =   0.064 ms
perf_total_per_op_us[           UNARY] =   0.032 ms
========================================
user=== GRAPH ===
n_nodes = 1317
 -   0: [  2560,     1,     1]         GET_ROWS   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   1: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   2: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   3: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   4: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   5: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   6: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   7: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   8: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   9: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  10: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  11: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  12: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  13: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  14: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  15: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  16: [    18,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  17: [   128,    18,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  18: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  19: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  20: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  21: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  22: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  23: [    18,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  24: [    18,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  25: [    18,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  26: [    18,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  27: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  28: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  29: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  30: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  31: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  32: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  33: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  34: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  35: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  36: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  37: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  38: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  39: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  40: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  41: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  42: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  43: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  44: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  45: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  46: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  47: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  48: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  49: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  50: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  51: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  52: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  53: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  54: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  55: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  56: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  57: [    18,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  58: [   128,    18,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  59: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  60: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  61: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  62: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  63: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  64: [    18,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  65: [    18,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  66: [    18,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  67: [    18,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  68: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  69: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  70: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  71: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  72: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  73: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  74: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  75: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  76: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  77: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  78: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  79: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  80: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  81: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  82: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  83: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  84: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  85: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  86: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  87: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  88: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  89: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  90: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  91: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  92: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  93: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  94: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  95: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  96: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  97: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  98: [    18,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  99: [   128,    18,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 100: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 102: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 103: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 104: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 105: [    18,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 106: [    18,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 107: [    18,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 108: [    18,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 109: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 110: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 111: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 112: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 113: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 114: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 115: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 116: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 117: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 118: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 119: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 120: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 121: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 122: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 123: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 124: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 125: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 127: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 128: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 129: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 130: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 131: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 132: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 133: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 134: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 135: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 136: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 137: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 138: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 139: [    18,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 140: [   128,    18,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 141: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 143: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 144: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 145: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 146: [    18,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 147: [    18,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 148: [    18,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 149: [    18,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 150: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 151: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 152: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 153: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 154: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 155: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 156: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 157: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 158: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 159: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 160: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 161: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 162: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 163: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 164: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 165: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 166: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 168: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 169: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 170: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 171: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 172: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 173: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 174: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 175: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 176: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 177: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 178: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 179: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 180: [    18,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 181: [   128,    18,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 182: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 184: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 185: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 186: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 187: [    18,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 188: [    18,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 189: [    18,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 190: [    18,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 191: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 192: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 193: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 194: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 195: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 196: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 197: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 198: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 199: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 200: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 201: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 202: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 203: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 204: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 205: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 206: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 207: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 209: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 210: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 211: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 212: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 213: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 214: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 215: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 216: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 217: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 218: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 219: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 220: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 221: [    18,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 222: [   128,    18,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 223: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 225: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 226: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 227: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 228: [    18,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 229: [    18,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 230: [    18,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 231: [    18,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 232: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 233: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 234: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 235: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 236: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 237: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 238: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 239: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 240: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 241: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 242: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 243: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 244: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 245: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 246: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 247: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 248: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 250: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 251: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 252: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 253: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 254: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 255: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 256: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 257: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 258: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 259: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 260: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 261: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 262: [    18,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 263: [   128,    18,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 264: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 266: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 267: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 268: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 269: [    18,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 270: [    18,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 271: [    18,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 272: [    18,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 273: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 274: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 275: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 276: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 277: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 278: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 279: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 280: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 281: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 282: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 283: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 284: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 285: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 286: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 287: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 288: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 289: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 291: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 292: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 293: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 294: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 295: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 296: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 297: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 298: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 299: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 300: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 301: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 302: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 303: [    18,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 304: [   128,    18,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 305: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 307: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 308: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 309: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 310: [    18,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 311: [    18,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 312: [    18,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 313: [    18,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 314: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 315: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 316: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 317: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 318: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 319: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 320: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 321: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 322: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 323: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 324: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 325: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 326: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 327: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 328: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 329: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 330: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 331: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 332: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 333: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 334: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 335: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 336: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 337: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 338: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 339: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 340: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 341: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 342: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 343: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 344: [    18,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 345: [   128,    18,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 346: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 347: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 348: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 349: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 350: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 351: [    18,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 352: [    18,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 353: [    18,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 354: [    18,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 355: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 356: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 357: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 358: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 359: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 360: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 361: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 362: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 363: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 364: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 365: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 366: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 367: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 368: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 369: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 370: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 371: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 372: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 373: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 374: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 375: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 376: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 377: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 378: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 379: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 380: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 381: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 382: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 383: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 384: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 385: [    18,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 386: [   128,    18,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 387: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 388: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 389: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 390: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 391: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 392: [    18,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 393: [    18,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 394: [    18,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 395: [    18,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 396: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 397: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 398: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 399: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 400: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 401: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 402: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 403: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 404: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 405: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 406: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 407: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 408: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 409: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 410: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 411: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 412: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 413: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 414: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 415: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 416: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 417: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 418: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 419: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 420: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 421: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 422: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 423: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 424: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 425: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 426: [    18,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 427: [   128,    18,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 428: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 429: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 430: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 431: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 432: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 433: [    18,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 434: [    18,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 435: [    18,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 436: [    18,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 437: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 438: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 439: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 440: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 441: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 442: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 443: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 444: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 445: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 446: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 447: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 448: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 449: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 450: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 451: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 452: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 453: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 454: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 455: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 456: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 457: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 458: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 459: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 460: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 461: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 462: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 463: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 464: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 465: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 466: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 467: [    18,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 468: [   128,    18,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 469: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 470: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 471: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 472: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 473: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 474: [    18,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 475: [    18,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 476: [    18,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 477: [    18,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 478: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 479: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 480: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 481: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 482: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 483: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 484: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 485: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 486: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 487: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 488: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 489: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 490: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 491: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 492: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 493: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 494: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 495: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 496: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 497: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 498: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 499: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 500: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 501: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 502: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 503: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 504: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 505: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 506: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 507: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 508: [    18,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 509: [   128,    18,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 510: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 511: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 512: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 513: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 514: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 515: [    18,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 516: [    18,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 517: [    18,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 518: [    18,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 519: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 520: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 521: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 522: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 523: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 524: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 525: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 526: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 527: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 528: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 529: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 530: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 531: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 532: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 533: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 534: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 535: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 536: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 537: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 538: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 539: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 540: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 541: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 542: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 543: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 544: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 545: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 546: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 547: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 548: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 549: [    18,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 550: [   128,    18,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 551: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 552: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 553: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 554: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 555: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 556: [    18,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 557: [    18,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 558: [    18,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 559: [    18,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 560: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 561: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 562: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 563: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 564: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 565: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 566: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 567: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 568: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 569: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 570: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 571: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 572: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 573: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 574: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 575: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 576: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 577: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 578: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 579: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 580: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 581: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 582: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 583: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 584: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 585: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 586: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 587: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 588: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 589: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 590: [    18,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 591: [   128,    18,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 592: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 593: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 594: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 595: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 596: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 597: [    18,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 598: [    18,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 599: [    18,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 600: [    18,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 601: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 602: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 603: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 604: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 605: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 606: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 607: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 608: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 609: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 610: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 611: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 612: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 613: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 614: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 615: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 616: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 617: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 618: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 619: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 620: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 621: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 622: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 623: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 624: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 625: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 626: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 627: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 628: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 629: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 630: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 631: [    18,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 632: [   128,    18,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 633: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 634: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 635: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 636: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 637: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 638: [    18,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 639: [    18,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 640: [    18,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 641: [    18,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 642: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 643: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 644: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 645: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 646: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 647: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 648: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 649: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 650: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 651: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 652: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 653: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 654: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 655: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 656: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 657: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 658: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 659: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 660: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 661: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 662: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 663: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 664: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 665: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 666: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 667: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 668: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 669: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 670: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 671: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 672: [    18,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 673: [   128,    18,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 674: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 675: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 676: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 677: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 678: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 679: [    18,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 680: [    18,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 681: [    18,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 682: [    18,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 683: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 684: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 685: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 686: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 687: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 688: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 689: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 690: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 691: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 692: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 693: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 694: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 695: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 696: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 697: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 698: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 699: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 700: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 701: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 702: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 703: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 704: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 705: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 706: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 707: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 708: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 709: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 710: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 711: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 712: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 713: [    18,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 714: [   128,    18,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 715: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 716: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 717: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 718: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 719: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 720: [    18,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 721: [    18,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 722: [    18,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 723: [    18,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 724: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 725: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 726: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 727: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 728: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 729: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 730: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 731: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 732: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 733: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 734: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 735: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 736: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 737: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 738: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 739: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 740: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 741: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 742: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 743: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 744: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 745: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 746: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 747: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 748: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 749: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 750: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 751: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 752: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 753: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 754: [    18,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 755: [   128,    18,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 756: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 757: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 758: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 759: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 760: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 761: [    18,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 762: [    18,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 763: [    18,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 764: [    18,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 765: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 766: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 767: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 768: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 769: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 770: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 771: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 772: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 773: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 774: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 775: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 776: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 777: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 778: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 779: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 780: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 781: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 782: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 783: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 784: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 785: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 786: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 787: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 788: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 789: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 790: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 791: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 792: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 793: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 794: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 795: [    18,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 796: [   128,    18,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 797: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 798: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 799: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 800: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 801: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 802: [    18,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 803: [    18,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 804: [    18,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 805: [    18,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 806: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 807: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 808: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 809: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 810: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 811: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 812: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 813: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 814: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 815: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 816: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 817: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 818: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 819: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 820: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 821: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 822: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 823: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 824: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 825: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 826: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 827: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 828: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 829: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 830: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 831: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 832: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 833: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 834: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 835: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 836: [    18,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 837: [   128,    18,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 838: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 839: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 840: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 841: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 842: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 843: [    18,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 844: [    18,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 845: [    18,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 846: [    18,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 847: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 848: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 849: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 850: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 851: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 852: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 853: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 854: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 855: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 856: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 857: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 858: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 859: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 860: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 861: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 862: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 863: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 864: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 865: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 866: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 867: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 868: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 869: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 870: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 871: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 872: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 873: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 874: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 875: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 876: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 877: [    18,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 878: [   128,    18,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 879: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 880: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 881: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 882: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 883: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 884: [    18,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 885: [    18,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 886: [    18,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 887: [    18,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 888: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 889: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 890: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 891: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 892: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 893: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 894: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 895: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 896: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 897: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 898: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 899: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 900: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 901: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 902: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 903: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 904: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 905: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 906: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 907: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 908: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 909: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 910: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 911: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 912: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 913: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 914: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 915: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 916: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 917: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 918: [    18,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 919: [   128,    18,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 920: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 921: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 922: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 923: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 924: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 925: [    18,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 926: [    18,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 927: [    18,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 928: [    18,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 929: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 930: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 931: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 932: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 933: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 934: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 935: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 936: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 937: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 938: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 939: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 940: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 941: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 942: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 943: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 944: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 945: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 946: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 947: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 948: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 949: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 950: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 951: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 952: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 953: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 954: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 955: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 956: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 957: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 958: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 959: [    18,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 960: [   128,    18,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 961: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 962: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 963: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 964: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 965: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 966: [    18,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 967: [    18,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 968: [    18,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 969: [    18,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 970: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 971: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 972: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 973: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 974: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 975: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 976: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 977: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 978: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 979: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 980: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 981: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 982: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 983: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 984: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 985: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 986: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 987: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 988: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 989: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 990: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 991: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 992: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 993: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 994: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 995: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 996: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 997: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 998: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 999: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1000: [    18,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1001: [   128,    18,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1002: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1003: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1004: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1005: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1006: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1007: [    18,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1008: [    18,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1009: [    18,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1010: [    18,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1011: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1012: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1013: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1014: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1015: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1016: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1017: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1018: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1019: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1020: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1021: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1022: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1023: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1024: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1025: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1026: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1027: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1028: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1029: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1030: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1031: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1032: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1033: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1034: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1035: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1036: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1037: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1038: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1039: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1040: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1041: [    18,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1042: [   128,    18,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1043: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1044: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1045: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1046: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1047: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1048: [    18,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1049: [    18,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1050: [    18,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1051: [    18,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1052: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1053: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1054: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1055: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1056: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1057: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1058: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1059: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1060: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1061: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1062: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1063: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1064: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1065: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1066: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1067: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1068: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1069: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1070: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1071: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1072: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1073: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1074: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1075: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1076: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1077: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1078: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1079: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1080: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1081: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1082: [    18,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1083: [   128,    18,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1084: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1085: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1086: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1087: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1088: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1089: [    18,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1090: [    18,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1091: [    18,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1092: [    18,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1093: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1094: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1095: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1096: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1097: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1098: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1099: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1100: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1102: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1103: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1104: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1105: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1106: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1107: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1108: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1109: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1110: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1111: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1112: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1113: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1114: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1115: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1116: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1117: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1118: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1119: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1120: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1121: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1122: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1123: [    18,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1124: [   128,    18,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1125: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1127: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1128: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1129: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1130: [    18,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1131: [    18,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1132: [    18,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1133: [    18,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1134: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1135: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1136: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1137: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1138: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1139: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1140: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1141: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1143: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1144: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1145: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1146: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1147: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1148: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1149: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1150: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1151: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1152: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1153: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1154: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1155: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1156: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1157: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1158: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1159: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1160: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1161: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1162: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1163: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1164: [    18,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1165: [   128,    18,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1166: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1168: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1169: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1170: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1171: [    18,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1172: [    18,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1173: [    18,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1174: [    18,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1175: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1176: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1177: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1178: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1179: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1180: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1181: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1182: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1184: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1185: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1186: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1187: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1188: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1189: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1190: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1191: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1192: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1193: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1194: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1195: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1196: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1197: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1198: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1199: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1200: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1201: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1202: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1203: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1204: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1205: [    18,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1206: [   128,    18,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1207: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1209: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1210: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1211: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1212: [    18,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1213: [    18,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1214: [    18,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1215: [    18,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1216: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1217: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1218: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1219: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1220: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1221: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1222: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1223: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1225: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1226: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1227: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1228: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1229: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1230: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1231: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1232: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1233: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1234: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1235: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1236: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1237: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1238: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1239: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1240: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1241: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1242: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1243: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1244: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1245: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1246: [    18,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1247: [   128,    18,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1248: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1250: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1251: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1252: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1253: [    18,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1254: [    18,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1255: [    18,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1256: [    18,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1257: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1258: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1259: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1260: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1261: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1262: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1263: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1264: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1266: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1267: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1268: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1269: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1270: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1271: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1272: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1273: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1274: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1275: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1276: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1277: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1278: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1279: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1280: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1281: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1282: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1283: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1284: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1285: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1286: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1287: [    18,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1288: [   128,    18,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1289: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1291: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1292: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1293: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1294: [    18,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1295: [    18,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1296: [    18,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1297: [    18,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1298: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1299: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1300: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1301: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1302: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1303: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1304: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1305: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1307: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1308: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1309: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1310: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1311: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1312: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1313: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1314: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1315: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1316: [ 102400,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
n_leafs = 552
 -   0: [  2560,  2560]     NONE
 -   1: [  2560,     1]     NONE
 -   2: [  2560, 102400]     NONE
 -   3: [     1,     1]     NONE
 -   4: [  2560,     1]     NONE
 -   5: [  2560,     1]     NONE
 -   6: [ 41943040,     1]     NONE
 -   7: [  2560,  2560]     NONE
 -   8: [  2560,     1]     NONE
 -   9: [ 41943040,     1]     NONE
 -  10: [  2560,  2560]     NONE
 -  11: [  2560,     1]     NONE
 -  12: [ 10240,  2560]     NONE
 -  13: [  2560, 10240]     NONE
 -  14: [  2560,     1]     NONE
 -  15: [  2560,  2560]     NONE
 -  16: [  2560,  2560]     NONE
 -  17: [  2560,     1]     NONE
 -  18: [     1,     1]     NONE
 -  19: [  2560,     1]     NONE
 -  20: [  2560,     1]     NONE
 -  21: [  2560,     1]     NONE
 -  22: [ 10240,     1]     NONE
 -  23: [  2560,     1]     NONE
 -  24: [  2560,     1]     NONE
 -  25: [  2560,     1]     NONE
 -  26: [  2560,  2560]     NONE
 -  27: [  2560,     1]     NONE
 -  28: [  2560,  2560]     NONE
 -  29: [  2560,     1]     NONE
 -  30: [ 10240,  2560]     NONE
 -  31: [  2560, 10240]     NONE
 -  32: [  2560,     1]     NONE
 -  33: [  2560,  2560]     NONE
 -  34: [  2560,  2560]     NONE
 -  35: [  2560,     1]     NONE
 -  36: [  2560,     1]     NONE
 -  37: [  2560,     1]     NONE
 -  38: [  2560,     1]     NONE
 -  39: [ 10240,     1]     NONE
 -  40: [  2560,     1]     NONE
 -  41: [  2560,     1]     NONE
 -  42: [  2560,     1]     NONE
 -  43: [  2560,  2560]     NONE
 -  44: [  2560,     1]     NONE
 -  45: [  2560,  2560]     NONE
 -  46: [  2560,     1]     NONE
 -  47: [ 10240,  2560]     NONE
 -  48: [  2560, 10240]     NONE
 -  49: [  2560,     1]     NONE
 -  50: [  2560,  2560]     NONE
 -  51: [  2560,  2560]     NONE
 -  52: [  2560,     1]     NONE
 -  53: [  2560,     1]     NONE
 -  54: [  2560,     1]     NONE
 -  55: [  2560,     1]     NONE
 -  56: [ 10240,     1]     NONE
 -  57: [  2560,     1]     NONE
 -  58: [  2560,     1]     NONE
 -  59: [  2560,     1]     NONE
 -  60: [  2560,  2560]     NONE
 -  61: [  2560,     1]     NONE
 -  62: [  2560,  2560]     NONE
 -  63: [  2560,     1]     NONE
 -  64: [ 10240,  2560]     NONE
 -  65: [  2560, 10240]     NONE
 -  66: [  2560,     1]     NONE
 -  67: [  2560,  2560]     NONE
 -  68: [  2560,  2560]     NONE
 -  69: [  2560,     1]     NONE
 -  70: [  2560,     1]     NONE
 -  71: [  2560,     1]     NONE
 -  72: [  2560,     1]     NONE
 -  73: [ 10240,     1]     NONE
 -  74: [  2560,     1]     NONE
 -  75: [  2560,     1]     NONE
 -  76: [  2560,     1]     NONE
 -  77: [  2560,  2560]     NONE
 -  78: [  2560,     1]     NONE
 -  79: [  2560,  2560]     NONE
 -  80: [  2560,     1]     NONE
 -  81: [ 10240,  2560]     NONE
 -  82: [  2560, 10240]     NONE
 -  83: [  2560,     1]     NONE
 -  84: [  2560,  2560]     NONE
 -  85: [  2560,  2560]     NONE
 -  86: [  2560,     1]     NONE
 -  87: [  2560,     1]     NONE
 -  88: [  2560,     1]     NONE
 -  89: [  2560,     1]     NONE
 -  90: [ 10240,     1]     NONE
 -  91: [  2560,     1]     NONE
 -  92: [  2560,     1]     NONE
 -  93: [  2560,     1]     NONE
 -  94: [  2560,  2560]     NONE
 -  95: [  2560,     1]     NONE
 -  96: [  2560,  2560]     NONE
 -  97: [  2560,     1]     NONE
 -  98: [ 10240,  2560]     NONE
 -  99: [  2560, 10240]     NONE
 - 100: [  2560,     1]     NONE
 - 101: [  2560,  2560]     NONE
 - 102: [  2560,  2560]     NONE
 - 103: [  2560,     1]     NONE
 - 104: [  2560,     1]     NONE
 - 105: [  2560,     1]     NONE
 - 106: [  2560,     1]     NONE
 - 107: [ 10240,     1]     NONE
 - 108: [  2560,     1]     NONE
 - 109: [  2560,     1]     NONE
 - 110: [  2560,     1]     NONE
 - 111: [  2560,  2560]     NONE
 - 112: [  2560,     1]     NONE
 - 113: [  2560,  2560]     NONE
 - 114: [  2560,     1]     NONE
 - 115: [ 10240,  2560]     NONE
 - 116: [  2560, 10240]     NONE
 - 117: [  2560,     1]     NONE
 - 118: [  2560,  2560]     NONE
 - 119: [  2560,  2560]     NONE
 - 120: [  2560,     1]     NONE
 - 121: [  2560,     1]     NONE
 - 122: [  2560,     1]     NONE
 - 123: [  2560,     1]     NONE
 - 124: [ 10240,     1]     NONE
 - 125: [  2560,     1]     NONE
 - 126: [  2560,     1]     NONE
 - 127: [  2560,     1]     NONE
 - 128: [  2560,  2560]     NONE
 - 129: [  2560,     1]     NONE
 - 130: [  2560,  2560]     NONE
 - 131: [  2560,     1]     NONE
 - 132: [ 10240,  2560]     NONE
 - 133: [  2560, 10240]     NONE
 - 134: [  2560,     1]     NONE
 - 135: [  2560,  2560]     NONE
 - 136: [  2560,  2560]     NONE
 - 137: [  2560,     1]     NONE
 - 138: [  2560,     1]     NONE
 - 139: [  2560,     1]     NONE
 - 140: [  2560,     1]     NONE
 - 141: [ 10240,     1]     NONE
 - 142: [  2560,     1]     NONE
 - 143: [  2560,     1]     NONE
 - 144: [  2560,     1]     NONE
 - 145: [  2560,  2560]     NONE
 - 146: [  2560,     1]     NONE
 - 147: [  2560,  2560]     NONE
 - 148: [  2560,     1]     NONE
 - 149: [ 10240,  2560]     NONE
 - 150: [  2560, 10240]     NONE
 - 151: [  2560,     1]     NONE
 - 152: [  2560,  2560]     NONE
 - 153: [  2560,  2560]     NONE
 - 154: [  2560,     1]     NONE
 - 155: [  2560,     1]     NONE
 - 156: [  2560,     1]     NONE
 - 157: [  2560,     1]     NONE
 - 158: [ 10240,     1]     NONE
 - 159: [  2560,     1]     NONE
 - 160: [  2560,     1]     NONE
 - 161: [  2560,     1]     NONE
 - 162: [  2560,  2560]     NONE
 - 163: [  2560,     1]     NONE
 - 164: [  2560,  2560]     NONE
 - 165: [  2560,     1]     NONE
 - 166: [ 10240,  2560]     NONE
 - 167: [  2560, 10240]     NONE
 - 168: [  2560,     1]     NONE
 - 169: [  2560,  2560]     NONE
 - 170: [  2560,  2560]     NONE
 - 171: [  2560,     1]     NONE
 - 172: [  2560,     1]     NONE
 - 173: [  2560,     1]     NONE
 - 174: [  2560,     1]     NONE
 - 175: [ 10240,     1]     NONE
 - 176: [  2560,     1]     NONE
 - 177: [  2560,     1]     NONE
 - 178: [  2560,     1]     NONE
 - 179: [  2560,  2560]     NONE
 - 180: [  2560,     1]     NONE
 - 181: [  2560,  2560]     NONE
 - 182: [  2560,     1]     NONE
 - 183: [ 10240,  2560]     NONE
 - 184: [  2560, 10240]     NONE
 - 185: [  2560,     1]     NONE
 - 186: [  2560,  2560]     NONE
 - 187: [  2560,  2560]     NONE
 - 188: [  2560,     1]     NONE
 - 189: [  2560,     1]     NONE
 - 190: [  2560,     1]     NONE
 - 191: [  2560,     1]     NONE
 - 192: [ 10240,     1]     NONE
 - 193: [  2560,     1]     NONE
 - 194: [  2560,     1]     NONE
 - 195: [  2560,     1]     NONE
 - 196: [  2560,  2560]     NONE
 - 197: [  2560,     1]     NONE
 - 198: [  2560,  2560]     NONE
 - 199: [  2560,     1]     NONE
 - 200: [ 10240,  2560]     NONE
 - 201: [  2560, 10240]     NONE
 - 202: [  2560,     1]     NONE
 - 203: [  2560,  2560]     NONE
 - 204: [  2560,  2560]     NONE
 - 205: [  2560,     1]     NONE
 - 206: [  2560,     1]     NONE
 - 207: [  2560,     1]     NONE
 - 208: [  2560,     1]     NONE
 - 209: [ 10240,     1]     NONE
 - 210: [  2560,     1]     NONE
 - 211: [  2560,     1]     NONE
 - 212: [  2560,     1]     NONE
 - 213: [  2560,  2560]     NONE
 - 214: [  2560,     1]     NONE
 - 215: [  2560,  2560]     NONE
 - 216: [  2560,     1]     NONE
 - 217: [ 10240,  2560]     NONE
 - 218: [  2560, 10240]     NONE
 - 219: [  2560,     1]     NONE
 - 220: [  2560,  2560]     NONE
 - 221: [  2560,  2560]     NONE
 - 222: [  2560,     1]     NONE
 - 223: [  2560,     1]     NONE
 - 224: [  2560,     1]     NONE
 - 225: [  2560,     1]     NONE
 - 226: [ 10240,     1]     NONE
 - 227: [  2560,     1]     NONE
 - 228: [  2560,     1]     NONE
 - 229: [  2560,     1]     NONE
 - 230: [  2560,  2560]     NONE
 - 231: [  2560,     1]     NONE
 - 232: [  2560,  2560]     NONE
 - 233: [  2560,     1]     NONE
 - 234: [ 10240,  2560]     NONE
 - 235: [  2560, 10240]     NONE
 - 236: [  2560,     1]     NONE
 - 237: [  2560,  2560]     NONE
 - 238: [  2560,  2560]     NONE
 - 239: [  2560,     1]     NONE
 - 240: [  2560,     1]     NONE
 - 241: [  2560,     1]     NONE
 - 242: [  2560,     1]     NONE
 - 243: [ 10240,     1]     NONE
 - 244: [  2560,     1]     NONE
 - 245: [  2560,     1]     NONE
 - 246: [  2560,     1]     NONE
 - 247: [  2560,  2560]     NONE
 - 248: [  2560,     1]     NONE
 - 249: [  2560,  2560]     NONE
 - 250: [  2560,     1]     NONE
 - 251: [ 10240,  2560]     NONE
 - 252: [  2560, 10240]     NONE
 - 253: [  2560,     1]     NONE
 - 254: [  2560,  2560]     NONE
 - 255: [  2560,  2560]     NONE
 - 256: [  2560,     1]     NONE
 - 257: [  2560,     1]     NONE
 - 258: [  2560,     1]     NONE
 - 259: [  2560,     1]     NONE
 - 260: [ 10240,     1]     NONE
 - 261: [  2560,     1]     NONE
 - 262: [  2560,     1]     NONE
 - 263: [  2560,     1]     NONE
 - 264: [  2560,  2560]     NONE
 - 265: [  2560,     1]     NONE
 - 266: [  2560,  2560]     NONE
 - 267: [  2560,     1]     NONE
 - 268: [ 10240,  2560]     NONE
 - 269: [  2560, 10240]     NONE
 - 270: [  2560,     1]     NONE
 - 271: [  2560,  2560]     NONE
 - 272: [  2560,  2560]     NONE
 - 273: [  2560,     1]     NONE
 - 274: [  2560,     1]     NONE
 - 275: [  2560,     1]     NONE
 - 276: [  2560,     1]     NONE
 - 277: [ 10240,     1]     NONE
 - 278: [  2560,     1]     NONE
 - 279: [  2560,     1]     NONE
 - 280: [  2560,     1]     NONE
 - 281: [  2560,  2560]     NONE
 - 282: [  2560,     1]     NONE
 - 283: [  2560,  2560]     NONE
 - 284: [  2560,     1]     NONE
 - 285: [ 10240,  2560]     NONE
 - 286: [  2560, 10240]     NONE
 - 287: [  2560,     1]     NONE
 - 288: [  2560,  2560]     NONE
 - 289: [  2560,  2560]     NONE
 - 290: [  2560,     1]     NONE
 - 291: [  2560,     1]     NONE
 - 292: [  2560,     1]     NONE
 - 293: [  2560,     1]     NONE
 - 294: [ 10240,     1]     NONE
 - 295: [  2560,     1]     NONE
 - 296: [  2560,     1]     NONE
 - 297: [  2560,     1]     NONE
 - 298: [  2560,  2560]     NONE
 - 299: [  2560,     1]     NONE
 - 300: [  2560,  2560]     NONE
 - 301: [  2560,     1]     NONE
 - 302: [ 10240,  2560]     NONE
 - 303: [  2560, 10240]     NONE
 - 304: [  2560,     1]     NONE
 - 305: [  2560,  2560]     NONE
 - 306: [  2560,  2560]     NONE
 - 307: [  2560,     1]     NONE
 - 308: [  2560,     1]     NONE
 - 309: [  2560,     1]     NONE
 - 310: [  2560,     1]     NONE
 - 311: [ 10240,     1]     NONE
 - 312: [  2560,     1]     NONE
 - 313: [  2560,     1]     NONE
 - 314: [  2560,     1]     NONE
 - 315: [  2560,  2560]     NONE
 - 316: [  2560,     1]     NONE
 - 317: [  2560,  2560]     NONE
 - 318: [  2560,     1]     NONE
 - 319: [ 10240,  2560]     NONE
 - 320: [  2560, 10240]     NONE
 - 321: [  2560,     1]     NONE
 - 322: [  2560,  2560]     NONE
 - 323: [  2560,  2560]     NONE
 - 324: [  2560,     1]     NONE
 - 325: [  2560,     1]     NONE
 - 326: [  2560,     1]     NONE
 - 327: [  2560,     1]     NONE
 - 328: [ 10240,     1]     NONE
 - 329: [  2560,     1]     NONE
 - 330: [  2560,     1]     NONE
 - 331: [  2560,     1]     NONE
 - 332: [  2560,  2560]     NONE
 - 333: [  2560,     1]     NONE
 - 334: [  2560,  2560]     NONE
 - 335: [  2560,     1]     NONE
 - 336: [ 10240,  2560]     NONE
 - 337: [  2560, 10240]     NONE
 - 338: [  2560,     1]     NONE
 - 339: [  2560,  2560]     NONE
 - 340: [  2560,  2560]     NONE
 - 341: [  2560,     1]     NONE
 - 342: [  2560,     1]     NONE
 - 343: [  2560,     1]     NONE
 - 344: [  2560,     1]     NONE
 - 345: [ 10240,     1]     NONE
 - 346: [  2560,     1]     NONE
 - 347: [  2560,     1]     NONE
 - 348: [  2560,     1]     NONE
 - 349: [  2560,  2560]     NONE
 - 350: [  2560,     1]     NONE
 - 351: [  2560,  2560]     NONE
 - 352: [  2560,     1]     NONE
 - 353: [ 10240,  2560]     NONE
 - 354: [  2560, 10240]     NONE
 - 355: [  2560,     1]     NONE
 - 356: [  2560,  2560]     NONE
 - 357: [  2560,  2560]     NONE
 - 358: [  2560,     1]     NONE
 - 359: [  2560,     1]     NONE
 - 360: [  2560,     1]     NONE
 - 361: [  2560,     1]     NONE
 - 362: [ 10240,     1]     NONE
 - 363: [  2560,     1]     NONE
 - 364: [  2560,     1]     NONE
 - 365: [  2560,     1]     NONE
 - 366: [  2560,  2560]     NONE
 - 367: [  2560,     1]     NONE
 - 368: [  2560,  2560]     NONE
 - 369: [  2560,     1]     NONE
 - 370: [ 10240,  2560]     NONE
 - 371: [  2560, 10240]     NONE
 - 372: [  2560,     1]     NONE
 - 373: [  2560,  2560]     NONE
 - 374: [  2560,  2560]     NONE
 - 375: [  2560,     1]     NONE
 - 376: [  2560,     1]     NONE
 - 377: [  2560,     1]     NONE
 - 378: [  2560,     1]     NONE
 - 379: [ 10240,     1]     NONE
 - 380: [  2560,     1]     NONE
 - 381: [  2560,     1]     NONE
 - 382: [  2560,     1]     NONE
 - 383: [  2560,  2560]     NONE
 - 384: [  2560,     1]     NONE
 - 385: [  2560,  2560]     NONE
 - 386: [  2560,     1]     NONE
 - 387: [ 10240,  2560]     NONE
 - 388: [  2560, 10240]     NONE
 - 389: [  2560,     1]     NONE
 - 390: [  2560,  2560]     NONE
 - 391: [  2560,  2560]     NONE
 - 392: [  2560,     1]     NONE
 - 393: [  2560,     1]     NONE
 - 394: [  2560,     1]     NONE
 - 395: [  2560,     1]     NONE
 - 396: [ 10240,     1]     NONE
 - 397: [  2560,     1]     NONE
 - 398: [  2560,     1]     NONE
 - 399: [  2560,     1]     NONE
 - 400: [  2560,  2560]     NONE
 - 401: [  2560,     1]     NONE
 - 402: [  2560,  2560]     NONE
 - 403: [  2560,     1]     NONE
 - 404: [ 10240,  2560]     NONE
 - 405: [  2560, 10240]     NONE
 - 406: [  2560,     1]     NONE
 - 407: [  2560,  2560]     NONE
 - 408: [  2560,  2560]     NONE
 - 409: [  2560,     1]     NONE
 - 410: [  2560,     1]     NONE
 - 411: [  2560,     1]     NONE
 - 412: [  2560,     1]     NONE
 - 413: [ 10240,     1]     NONE
 - 414: [  2560,     1]     NONE
 - 415: [  2560,     1]     NONE
 - 416: [  2560,     1]     NONE
 - 417: [  2560,  2560]     NONE
 - 418: [  2560,     1]     NONE
 - 419: [  2560,  2560]     NONE
 - 420: [  2560,     1]     NONE
 - 421: [ 10240,  2560]     NONE
 - 422: [  2560, 10240]     NONE
 - 423: [  2560,     1]     NONE
 - 424: [  2560,  2560]     NONE
 - 425: [  2560,  2560]     NONE
 - 426: [  2560,     1]     NONE
 - 427: [  2560,     1]     NONE
 - 428: [  2560,     1]     NONE
 - 429: [  2560,     1]     NONE
 - 430: [ 10240,     1]     NONE
 - 431: [  2560,     1]     NONE
 - 432: [  2560,     1]     NONE
 - 433: [  2560,     1]     NONE
 - 434: [  2560,  2560]     NONE
 - 435: [  2560,     1]     NONE
 - 436: [  2560,  2560]     NONE
 - 437: [  2560,     1]     NONE
 - 438: [ 10240,  2560]     NONE
 - 439: [  2560, 10240]     NONE
 - 440: [  2560,     1]     NONE
 - 441: [  2560,  2560]     NONE
 - 442: [  2560,  2560]     NONE
 - 443: [  2560,     1]     NONE
 - 444: [  2560,     1]     NONE
 - 445: [  2560,     1]     NONE
 - 446: [  2560,     1]     NONE
 - 447: [ 10240,     1]     NONE
 - 448: [  2560,     1]     NONE
 - 449: [  2560,     1]     NONE
 - 450: [  2560,     1]     NONE
 - 451: [  2560,  2560]     NONE
 - 452: [  2560,     1]     NONE
 - 453: [  2560,  2560]     NONE
 - 454: [  2560,     1]     NONE
 - 455: [ 10240,  2560]     NONE
 - 456: [  2560, 10240]     NONE
 - 457: [  2560,     1]     NONE
 - 458: [  2560,  2560]     NONE
 - 459: [  2560,  2560]     NONE
 - 460: [  2560,     1]     NONE
 - 461: [  2560,     1]     NONE
 - 462: [  2560,     1]     NONE
 - 463: [  2560,     1]     NONE
 - 464: [ 10240,     1]     NONE
 - 465: [  2560,     1]     NONE
 - 466: [  2560,     1]     NONE
 - 467: [  2560,     1]     NONE
 - 468: [  2560,  2560]     NONE
 - 469: [  2560,     1]     NONE
 - 470: [  2560,  2560]     NONE
 - 471: [  2560,     1]     NONE
 - 472: [ 10240,  2560]     NONE
 - 473: [  2560, 10240]     NONE
 - 474: [  2560,     1]     NONE
 - 475: [  2560,  2560]     NONE
 - 476: [  2560,  2560]     NONE
 - 477: [  2560,     1]     NONE
 - 478: [  2560,     1]     NONE
 - 479: [  2560,     1]     NONE
 - 480: [  2560,     1]     NONE
 - 481: [ 10240,     1]     NONE
 - 482: [  2560,     1]     NONE
 - 483: [  2560,     1]     NONE
 - 484: [  2560,     1]     NONE
 - 485: [  2560,  2560]     NONE
 - 486: [  2560,     1]     NONE
 - 487: [  2560,  2560]     NONE
 - 488: [  2560,     1]     NONE
 - 489: [ 10240,  2560]     NONE
 - 490: [  2560, 10240]     NONE
 - 491: [  2560,     1]     NONE
 - 492: [  2560,  2560]     NONE
 - 493: [  2560,  2560]     NONE
 - 494: [  2560,     1]     NONE
 - 495: [  2560,     1]     NONE
 - 496: [  2560,     1]     NONE
 - 497: [  2560,     1]     NONE
 - 498: [ 10240,     1]     NONE
 - 499: [  2560,     1]     NONE
 - 500: [  2560,     1]     NONE
 - 501: [  2560,     1]     NONE
 - 502: [  2560,  2560]     NONE
 - 503: [  2560,     1]     NONE
 - 504: [  2560,  2560]     NONE
 - 505: [  2560,     1]     NONE
 - 506: [ 10240,  2560]     NONE
 - 507: [  2560, 10240]     NONE
 - 508: [  2560,     1]     NONE
 - 509: [  2560,  2560]     NONE
 - 510: [  2560,  2560]     NONE
 - 511: [  2560,     1]     NONE
 - 512: [  2560,     1]     NONE
 - 513: [  2560,     1]     NONE
 - 514: [  2560,     1]     NONE
 - 515: [ 10240,     1]     NONE
 - 516: [  2560,     1]     NONE
 - 517: [  2560,     1]     NONE
 - 518: [  2560,     1]     NONE
 - 519: [  2560,  2560]     NONE
 - 520: [  2560,     1]     NONE
 - 521: [  2560,  2560]     NONE
 - 522: [  2560,     1]     NONE
 - 523: [ 10240,  2560]     NONE
 - 524: [  2560, 10240]     NONE
 - 525: [  2560,     1]     NONE
 - 526: [  2560,  2560]     NONE
 - 527: [  2560,  2560]     NONE
 - 528: [  2560,     1]     NONE
 - 529: [  2560,     1]     NONE
 - 530: [  2560,     1]     NONE
 - 531: [  2560,     1]     NONE
 - 532: [ 10240,     1]     NONE
 - 533: [  2560,     1]     NONE
 - 534: [  2560,     1]     NONE
 - 535: [  2560,     1]     NONE
 - 536: [  2560,  2560]     NONE
 - 537: [  2560,     1]     NONE
 - 538: [  2560, 102400]     NONE
 - 539: [  2560,     1]     NONE
 - 540: [ 10240,  2560]     NONE
 - 541: [  2560, 10240]     NONE
 - 542: [  2560,     1]     NONE
 - 543: [  2560,  2560]     NONE
 - 544: [  2560,  2560]     NONE
 - 545: [  2560,     1]     NONE
 - 546: [  2560,     1]     NONE
 - 547: [  2560,     1]     NONE
 - 548: [  2560,     1]     NONE
 - 549: [ 10240,     1]     NONE
 - 550: [  2560,     1]     NONE
 - 551: [  2560,     1]     NONE
perf_total_per_op_us[             ADD] =   0.321 ms
perf_total_per_op_us[             MUL] =   0.065 ms
perf_total_per_op_us[            NORM] =   0.065 ms
perf_total_per_op_us[         MUL_MAT] =   0.257 ms
perf_total_per_op_us[           SCALE] =   0.032 ms
perf_total_per_op_us[             CPY] =   0.096 ms
perf_total_per_op_us[         RESHAPE] =   0.096 ms
perf_total_per_op_us[            VIEW] =   0.128 ms
perf_total_per_op_us[         PERMUTE] =   0.064 ms
perf_total_per_op_us[       TRANSPOSE] =   0.032 ms
perf_total_per_op_us[        GET_ROWS] =   0.001 ms
perf_total_per_op_us[   DIAG_MASK_INF] =   0.032 ms
perf_total_per_op_us[        SOFT_MAX] =   0.032 ms
perf_total_per_op_us[            ROPE] =   0.064 ms
perf_total_per_op_us[           UNARY] =   0.032 ms
========================================
user=== GRAPH ===
n_nodes = 1317
 -   0: [  2560,     1,     1]         GET_ROWS   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   1: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   2: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   3: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   4: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   5: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   6: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   7: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   8: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -   9: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  10: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  11: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  12: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  13: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  14: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  15: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  16: [    19,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  17: [   128,    19,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  18: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  19: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  20: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  21: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  22: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  23: [    19,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  24: [    19,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  25: [    19,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  26: [    19,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  27: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  28: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  29: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  30: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  31: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  32: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  33: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  34: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  35: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  36: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  37: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  38: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  39: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  40: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  41: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  42: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  43: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  44: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  45: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  46: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  47: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  48: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  49: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  50: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  51: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  52: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  53: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  54: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  55: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  56: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  57: [    19,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  58: [   128,    19,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  59: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  60: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  61: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  62: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  63: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  64: [    19,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  65: [    19,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  66: [    19,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  67: [    19,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  68: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  69: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  70: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  71: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  72: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  73: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  74: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  75: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  76: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  77: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  78: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  79: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  80: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  81: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  82: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  83: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  84: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  85: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  86: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  87: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  88: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  89: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  90: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  91: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  92: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  93: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  94: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  95: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  96: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  97: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  98: [    19,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 -  99: [   128,    19,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 100: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 102: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 103: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 104: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 105: [    19,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 106: [    19,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 107: [    19,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 108: [    19,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 109: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 110: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 111: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 112: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 113: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 114: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 115: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 116: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 117: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 118: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 119: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 120: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 121: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 122: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 123: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 124: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 125: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 127: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 128: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 129: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 130: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 131: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 132: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 133: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 134: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 135: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 136: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 137: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 138: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 139: [    19,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 140: [   128,    19,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 141: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 143: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 144: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 145: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 146: [    19,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 147: [    19,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 148: [    19,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 149: [    19,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 150: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 151: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 152: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 153: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 154: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 155: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 156: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 157: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 158: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 159: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 160: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 161: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 162: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 163: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 164: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 165: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 166: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 168: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 169: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 170: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 171: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 172: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 173: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 174: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 175: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 176: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 177: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 178: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 179: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 180: [    19,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 181: [   128,    19,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 182: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 184: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 185: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 186: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 187: [    19,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 188: [    19,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 189: [    19,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 190: [    19,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 191: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 192: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 193: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 194: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 195: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 196: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 197: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 198: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 199: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 200: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 201: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 202: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 203: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 204: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 205: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 206: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 207: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 209: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 210: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 211: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 212: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 213: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 214: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 215: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 216: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 217: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 218: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 219: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 220: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 221: [    19,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 222: [   128,    19,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 223: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 225: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 226: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 227: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 228: [    19,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 229: [    19,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 230: [    19,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 231: [    19,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 232: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 233: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 234: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 235: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 236: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 237: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 238: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 239: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 240: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 241: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 242: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 243: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 244: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 245: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 246: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 247: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 248: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 250: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 251: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 252: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 253: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 254: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 255: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 256: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 257: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 258: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 259: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 260: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 261: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 262: [    19,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 263: [   128,    19,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 264: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 266: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 267: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 268: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 269: [    19,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 270: [    19,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 271: [    19,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 272: [    19,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 273: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 274: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 275: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 276: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 277: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 278: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 279: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 280: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 281: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 282: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 283: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 284: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 285: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 286: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 287: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 288: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 289: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 291: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 292: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 293: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 294: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 295: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 296: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 297: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 298: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 299: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 300: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 301: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 302: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 303: [    19,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 304: [   128,    19,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 305: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 307: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 308: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 309: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 310: [    19,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 311: [    19,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 312: [    19,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 313: [    19,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 314: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 315: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 316: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 317: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 318: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 319: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 320: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 321: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 322: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 323: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 324: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 325: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 326: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 327: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 328: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 329: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 330: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 331: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 332: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 333: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 334: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 335: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 336: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 337: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 338: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 339: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 340: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 341: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 342: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 343: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 344: [    19,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 345: [   128,    19,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 346: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 347: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 348: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 349: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 350: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 351: [    19,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 352: [    19,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 353: [    19,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 354: [    19,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 355: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 356: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 357: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 358: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 359: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 360: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 361: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 362: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 363: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 364: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 365: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 366: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 367: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 368: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 369: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 370: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 371: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 372: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 373: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 374: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 375: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 376: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 377: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 378: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 379: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 380: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 381: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 382: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 383: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 384: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 385: [    19,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 386: [   128,    19,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 387: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 388: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 389: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 390: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 391: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 392: [    19,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 393: [    19,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 394: [    19,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 395: [    19,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 396: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 397: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 398: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 399: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 400: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 401: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 402: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 403: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 404: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 405: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 406: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 407: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 408: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 409: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 410: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 411: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 412: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 413: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 414: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 415: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 416: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 417: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 418: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 419: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 420: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 421: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 422: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 423: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 424: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 425: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 426: [    19,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 427: [   128,    19,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 428: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 429: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 430: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 431: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 432: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 433: [    19,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 434: [    19,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 435: [    19,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 436: [    19,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 437: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 438: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 439: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 440: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 441: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 442: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 443: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 444: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 445: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 446: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 447: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 448: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 449: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 450: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 451: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 452: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 453: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 454: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 455: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 456: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 457: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 458: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 459: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 460: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 461: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 462: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 463: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 464: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 465: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 466: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 467: [    19,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 468: [   128,    19,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 469: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 470: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 471: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 472: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 473: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 474: [    19,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 475: [    19,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 476: [    19,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 477: [    19,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 478: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 479: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 480: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 481: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 482: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 483: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 484: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 485: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 486: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 487: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 488: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 489: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 490: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 491: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 492: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 493: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 494: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 495: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 496: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 497: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 498: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 499: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 500: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 501: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 502: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 503: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 504: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 505: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 506: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 507: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 508: [    19,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 509: [   128,    19,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 510: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 511: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 512: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 513: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 514: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 515: [    19,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 516: [    19,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 517: [    19,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 518: [    19,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 519: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 520: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 521: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 522: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 523: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 524: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 525: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 526: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 527: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 528: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 529: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 530: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 531: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 532: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 533: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 534: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 535: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 536: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 537: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 538: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 539: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 540: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 541: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 542: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 543: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 544: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 545: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 546: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 547: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 548: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 549: [    19,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 550: [   128,    19,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 551: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 552: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 553: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 554: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 555: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 556: [    19,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 557: [    19,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 558: [    19,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 559: [    19,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 560: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 561: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 562: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 563: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 564: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 565: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 566: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 567: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 568: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 569: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 570: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 571: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 572: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 573: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 574: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 575: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 576: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 577: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 578: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 579: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 580: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 581: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 582: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 583: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 584: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 585: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 586: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 587: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 588: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 589: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 590: [    19,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 591: [   128,    19,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 592: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 593: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 594: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 595: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 596: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 597: [    19,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 598: [    19,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 599: [    19,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 600: [    19,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 601: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 602: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 603: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 604: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 605: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 606: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 607: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 608: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 609: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 610: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 611: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 612: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 613: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 614: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 615: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 616: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 617: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 618: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 619: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 620: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 621: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 622: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 623: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 624: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 625: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 626: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 627: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 628: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 629: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 630: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 631: [    19,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 632: [   128,    19,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 633: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 634: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 635: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 636: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 637: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 638: [    19,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 639: [    19,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 640: [    19,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 641: [    19,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 642: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 643: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 644: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 645: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 646: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 647: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 648: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 649: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 650: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 651: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 652: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 653: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 654: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 655: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 656: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 657: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 658: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 659: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 660: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 661: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 662: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 663: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 664: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 665: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 666: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 667: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 668: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 669: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 670: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 671: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 672: [    19,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 673: [   128,    19,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 674: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 675: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 676: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 677: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 678: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 679: [    19,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 680: [    19,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 681: [    19,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 682: [    19,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 683: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 684: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 685: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 686: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 687: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 688: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 689: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 690: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 691: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 692: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 693: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 694: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 695: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 696: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 697: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 698: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 699: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 700: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 701: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 702: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 703: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 704: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 705: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 706: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 707: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 708: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 709: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 710: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 711: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 712: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 713: [    19,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 714: [   128,    19,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 715: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 716: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 717: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 718: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 719: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 720: [    19,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 721: [    19,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 722: [    19,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 723: [    19,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 724: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 725: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 726: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 727: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 728: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 729: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 730: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 731: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 732: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 733: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 734: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 735: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 736: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 737: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 738: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 739: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 740: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 741: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 742: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 743: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 744: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 745: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 746: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 747: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 748: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 749: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 750: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 751: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 752: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 753: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 754: [    19,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 755: [   128,    19,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 756: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 757: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 758: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 759: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 760: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 761: [    19,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 762: [    19,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 763: [    19,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 764: [    19,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 765: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 766: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 767: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 768: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 769: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 770: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 771: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 772: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 773: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 774: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 775: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 776: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 777: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 778: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 779: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 780: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 781: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 782: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 783: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 784: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 785: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 786: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 787: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 788: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 789: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 790: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 791: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 792: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 793: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 794: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 795: [    19,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 796: [   128,    19,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 797: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 798: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 799: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 800: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 801: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 802: [    19,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 803: [    19,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 804: [    19,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 805: [    19,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 806: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 807: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 808: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 809: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 810: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 811: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 812: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 813: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 814: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 815: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 816: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 817: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 818: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 819: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 820: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 821: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 822: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 823: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 824: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 825: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 826: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 827: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 828: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 829: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 830: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 831: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 832: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 833: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 834: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 835: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 836: [    19,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 837: [   128,    19,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 838: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 839: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 840: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 841: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 842: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 843: [    19,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 844: [    19,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 845: [    19,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 846: [    19,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 847: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 848: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 849: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 850: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 851: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 852: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 853: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 854: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 855: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 856: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 857: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 858: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 859: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 860: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 861: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 862: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 863: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 864: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 865: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 866: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 867: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 868: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 869: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 870: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 871: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 872: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 873: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 874: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 875: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 876: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 877: [    19,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 878: [   128,    19,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 879: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 880: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 881: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 882: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 883: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 884: [    19,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 885: [    19,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 886: [    19,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 887: [    19,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 888: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 889: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 890: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 891: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 892: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 893: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 894: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 895: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 896: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 897: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 898: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 899: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 900: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 901: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 902: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 903: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 904: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 905: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 906: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 907: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 908: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 909: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 910: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 911: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 912: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 913: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 914: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 915: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 916: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 917: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 918: [    19,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 919: [   128,    19,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 920: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 921: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 922: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 923: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 924: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 925: [    19,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 926: [    19,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 927: [    19,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 928: [    19,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 929: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 930: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 931: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 932: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 933: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 934: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 935: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 936: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 937: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 938: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 939: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 940: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 941: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 942: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 943: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 944: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 945: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 946: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 947: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 948: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 949: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 950: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 951: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 952: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 953: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 954: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 955: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 956: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 957: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 958: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 959: [    19,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 960: [   128,    19,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 961: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 962: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 963: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 964: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 965: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 966: [    19,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 967: [    19,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 968: [    19,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 969: [    19,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 970: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 971: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 972: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 973: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 974: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 975: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 976: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 977: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 978: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 979: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 980: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 981: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 982: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 983: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 984: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 985: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 986: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 987: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 988: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 989: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 990: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 991: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 992: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 993: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 994: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 995: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 996: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 997: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 998: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 999: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1000: [    19,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1001: [   128,    19,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1002: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1003: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1004: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1005: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1006: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1007: [    19,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1008: [    19,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1009: [    19,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1010: [    19,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1011: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1012: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1013: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1014: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1015: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1016: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1017: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1018: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1019: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1020: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1021: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1022: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1023: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1024: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1025: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1026: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1027: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1028: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1029: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1030: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1031: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1032: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1033: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1034: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1035: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1036: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1037: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1038: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1039: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1040: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1041: [    19,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1042: [   128,    19,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1043: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1044: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1045: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1046: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1047: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1048: [    19,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1049: [    19,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1050: [    19,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1051: [    19,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1052: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1053: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1054: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1055: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1056: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1057: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1058: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1059: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1060: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1061: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1062: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1063: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1064: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1065: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1066: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1067: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1068: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1069: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1070: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1071: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1072: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1073: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1074: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1075: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1076: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1077: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1078: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1079: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1080: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1081: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1082: [    19,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1083: [   128,    19,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1084: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1085: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1086: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1087: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1088: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1089: [    19,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1090: [    19,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1091: [    19,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1092: [    19,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1093: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1094: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1095: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1096: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1097: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1098: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1099: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1100: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1101: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1102: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1103: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1104: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1105: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1106: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1107: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1108: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1109: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1110: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1111: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1112: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1113: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1114: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1115: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1116: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1117: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1118: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1119: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1120: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1121: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1122: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1123: [    19,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1124: [   128,    19,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1125: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1126: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1127: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1128: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1129: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1130: [    19,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1131: [    19,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1132: [    19,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1133: [    19,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1134: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1135: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1136: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1137: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1138: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1139: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1140: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1141: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1142: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1143: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1144: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1145: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1146: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1147: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1148: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1149: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1150: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1151: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1152: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1153: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1154: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1155: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1156: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1157: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1158: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1159: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1160: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1161: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1162: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1163: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1164: [    19,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1165: [   128,    19,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1166: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1167: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1168: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1169: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1170: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1171: [    19,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1172: [    19,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1173: [    19,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1174: [    19,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1175: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1176: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1177: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1178: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1179: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1180: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1181: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1182: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1183: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1184: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1185: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1186: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1187: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1188: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1189: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1190: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1191: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1192: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1193: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1194: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1195: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1196: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1197: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1198: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1199: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1200: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1201: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1202: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1203: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1204: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1205: [    19,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1206: [   128,    19,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1207: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1208: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1209: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1210: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1211: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1212: [    19,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1213: [    19,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1214: [    19,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1215: [    19,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1216: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1217: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1218: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1219: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1220: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1221: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1222: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1223: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1224: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1225: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1226: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1227: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1228: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1229: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1230: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1231: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1232: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1233: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1234: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1235: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1236: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1237: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1238: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1239: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1240: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1241: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1242: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1243: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1244: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1245: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1246: [    19,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1247: [   128,    19,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1248: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1249: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1250: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1251: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1252: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1253: [    19,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1254: [    19,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1255: [    19,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1256: [    19,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1257: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1258: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1259: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1260: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1261: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1262: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1263: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1264: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1265: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1266: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1267: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1268: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1269: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1270: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1271: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1272: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1273: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1274: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1275: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1276: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1277: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1278: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1279: [  2560,     1,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1280: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1281: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1282: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1283: [  2560,     1,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1284: [     1,  2560,     1]        TRANSPOSE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1285: [     1,  2560,     1]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1286: [     1,  2560,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1287: [    19,   128,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1288: [   128,    19,    20]             VIEW   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1289: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1290: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1291: [   128,    20,     1]          RESHAPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1292: [   128,    20,     1]             ROPE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1293: [   128,     1,    20]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1294: [    19,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1295: [    19,     1,    20]            SCALE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1296: [    19,     1,    20]    DIAG_MASK_INF   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1297: [    19,     1,    20]         SOFT_MAX   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1298: [   128,     1,    20]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1299: [   128,    20,     1]          PERMUTE   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1300: [  2560,     1,     1]              CPY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1301: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1302: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1303: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1304: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1305: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1306: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1307: [ 10240,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1308: [ 10240,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1309: [ 10240,     1,     1]            UNARY   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1310: [  2560,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1311: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1312: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1313: [  2560,     1,     1]             NORM   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1314: [  2560,     1,     1]              MUL   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1315: [  2560,     1,     1]              ADD   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
 - 1316: [ 102400,     1,     1]          MUL_MAT   (  1) cpu =   0.000 /   0.000 ms, wall =   0.000 /   0.000 ms
n_leafs = 552
 -   0: [  2560,  2560]     NONE
 -   1: [  2560,     1]     NONE
 -   2: [  2560, 102400]     NONE
 -   3: [     1,     1]     NONE
 -   4: [  2560,     1]     NONE
 -   5: [  2560,     1]     NONE
 -   6: [ 41943040,     1]     NONE
 -   7: [  2560,  2560]     NONE
 -   8: [  2560,     1]     NONE
 -   9: [ 41943040,     1]     NONE
 -  10: [  2560,  2560]     NONE
 -  11: [  2560,     1]     NONE
 -  12: [ 10240,  2560]     NONE
 -  13: [  2560, 10240]     NONE
 -  14: [  2560,     1]     NONE
 -  15: [  2560,  2560]     NONE
 -  16: [  2560,  2560]     NONE
 -  17: [  2560,     1]     NONE
 -  18: [     1,     1]     NONE
 -  19: [  2560,     1]     NONE
 -  20: [  2560,     1]     NONE
 -  21: [  2560,     1]     NONE
 -  22: [ 10240,     1]     NONE
 -  23: [  2560,     1]     NONE
 -  24: [  2560,     1]     NONE
 -  25: [  2560,     1]     NONE
 -  26: [  2560,  2560]     NONE
 -  27: [  2560,     1]     NONE
 -  28: [  2560,  2560]     NONE
 -  29: [  2560,     1]     NONE
 -  30: [ 10240,  2560]     NONE
 -  31: [  2560, 10240]     NONE
 -  32: [  2560,     1]     NONE
 -  33: [  2560,  2560]     NONE
 -  34: [  2560,  2560]     NONE
 -  35: [  2560,     1]     NONE
 -  36: [  2560,     1]     NONE
 -  37: [  2560,     1]     NONE
 -  38: [  2560,     1]     NONE
 -  39: [ 10240,     1]     NONE
 -  40: [  2560,     1]     NONE
 -  41: [  2560,     1]     NONE
 -  42: [  2560,     1]     NONE
 -  43: [  2560,  2560]     NONE
 -  44: [  2560,     1]     NONE
 -  45: [  2560,  2560]     NONE
 -  46: [  2560,     1]     NONE
 -  47: [ 10240,  2560]     NONE
 -  48: [  2560, 10240]     NONE
 -  49: [  2560,     1]     NONE
 -  50: [  2560,  2560]     NONE
 -  51: [  2560,  2560]     NONE
 -  52: [  2560,     1]     NONE
 -  53: [  2560,     1]     NONE
 -  54: [  2560,     1]     NONE
 -  55: [  2560,     1]     NONE
 -  56: [ 10240,     1]     NONE
 -  57: [  2560,     1]     NONE
 -  58: [  2560,     1]     NONE
 -  59: [  2560,     1]     NONE
 -  60: [  2560,  2560]     NONE
 -  61: [  2560,     1]     NONE
 -  62: [  2560,  2560]     NONE
 -  63: [  2560,     1]     NONE
 -  64: [ 10240,  2560]     NONE
 -  65: [  2560, 10240]     NONE
 -  66: [  2560,     1]     NONE
 -  67: [  2560,  2560]     NONE
 -  68: [  2560,  2560]     NONE
 -  69: [  2560,     1]     NONE
 -  70: [  2560,     1]     NONE
 -  71: [  2560,     1]     NONE
 -  72: [  2560,     1]     NONE
 -  73: [ 10240,     1]     NONE
 -  74: [  2560,     1]     NONE
 -  75: [  2560,     1]     NONE
 -  76: [  2560,     1]     NONE
 -  77: [  2560,  2560]     NONE
 -  78: [  2560,     1]     NONE
 -  79: [  2560,  2560]     NONE
 -  80: [  2560,     1]     NONE
 -  81: [ 10240,  2560]     NONE
 -  82: [  2560, 10240]     NONE
 -  83: [  2560,     1]     NONE
 -  84: [  2560,  2560]     NONE
 -  85: [  2560,  2560]     NONE
 -  86: [  2560,     1]     NONE
 -  87: [  2560,     1]     NONE
 -  88: [  2560,     1]     NONE
 -  89: [  2560,     1]     NONE
 -  90: [ 10240,     1]     NONE
 -  91: [  2560,     1]     NONE
 -  92: [  2560,     1]     NONE
 -  93: [  2560,     1]     NONE
 -  94: [  2560,  2560]     NONE
 -  95: [  2560,     1]     NONE
 -  96: [  2560,  2560]     NONE
 -  97: [  2560,     1]     NONE
 -  98: [ 10240,  2560]     NONE
 -  99: [  2560, 10240]     NONE
 - 100: [  2560,     1]     NONE
 - 101: [  2560,  2560]     NONE
 - 102: [  2560,  2560]     NONE
 - 103: [  2560,     1]     NONE
 - 104: [  2560,     1]     NONE
 - 105: [  2560,     1]     NONE
 - 106: [  2560,     1]     NONE
 - 107: [ 10240,     1]     NONE
 - 108: [  2560,     1]     NONE
 - 109: [  2560,     1]     NONE
 - 110: [  2560,     1]     NONE
 - 111: [  2560,  2560]     NONE
 - 112: [  2560,     1]     NONE
 - 113: [  2560,  2560]     NONE
 - 114: [  2560,     1]     NONE
 - 115: [ 10240,  2560]     NONE
 - 116: [  2560, 10240]     NONE
 - 117: [  2560,     1]     NONE
 - 118: [  2560,  2560]     NONE
 - 119: [  2560,  2560]     NONE
 - 120: [  2560,     1]     NONE
 - 121: [  2560,     1]     NONE
 - 122: [  2560,     1]     NONE
 - 123: [  2560,     1]     NONE
 - 124: [ 10240,     1]     NONE
 - 125: [  2560,     1]     NONE
 - 126: [  2560,     1]     NONE
 - 127: [  2560,     1]     NONE
 - 128: [  2560,  2560]     NONE
 - 129: [  2560,     1]     NONE
 - 130: [  2560,  2560]     NONE
 - 131: [  2560,     1]     NONE
 - 132: [ 10240,  2560]     NONE
 - 133: [  2560, 10240]     NONE
 - 134: [  2560,     1]     NONE
 - 135: [  2560,  2560]     NONE
 - 136: [  2560,  2560]     NONE
 - 137: [  2560,     1]     NONE
 - 138: [  2560,     1]     NONE
 - 139: [  2560,     1]     NONE
 - 140: [  2560,     1]     NONE
 - 141: [ 10240,     1]     NONE
 - 142: [  2560,     1]     NONE
 - 143: [  2560,     1]     NONE
 - 144: [  2560,     1]     NONE
 - 145: [  2560,  2560]     NONE
 - 146: [  2560,     1]     NONE
 - 147: [  2560,  2560]     NONE
 - 148: [  2560,     1]     NONE
 - 149: [ 10240,  2560]     NONE
 - 150: [  2560, 10240]     NONE
 - 151: [  2560,     1]     NONE
 - 152: [  2560,  2560]     NONE
 - 153: [  2560,  2560]     NONE
 - 154: [  2560,     1]     NONE
 - 155: [  2560,     1]     NONE
 - 156: [  2560,     1]     NONE
 - 157: [  2560,     1]     NONE
 - 158: [ 10240,     1]     NONE
 - 159: [  2560,     1]     NONE
 - 160: [  2560,     1]     NONE
 - 161: [  2560,     1]     NONE
 - 162: [  2560,  2560]     NONE
 - 163: [  2560,     1]     NONE
 - 164: [  2560,  2560]     NONE
 - 165: [  2560,     1]     NONE
 - 166: [ 10240,  2560]     NONE
 - 167: [  2560, 10240]     NONE
 - 168: [  2560,     1]     NONE
 - 169: [  2560,  2560]     NONE
 - 170: [  2560,  2560]     NONE
 - 171: [  2560,     1]     NONE
 - 172: [  2560,     1]     NONE
 - 173: [  2560,     1]     NONE
 - 174: [  2560,     1]     NONE
 - 175: [ 10240,     1]     NONE
 - 176: [  2560,     1]     NONE
 - 177: [  2560,     1]     NONE
 - 178: [  2560,     1]     NONE
 - 179: [  2560,  2560]     NONE
 - 180: [  2560,     1]     NONE
 - 181: [  2560,  2560]     NONE
 - 182: [  2560,     1]     NONE
 - 183: [ 10240,  2560]     NONE
 - 184: [  2560, 10240]     NONE
 - 185: [  2560,     1]     NONE
 - 186: [  2560,  2560]     NONE
 - 187: [  2560,  2560]     NONE
 - 188: [  2560,     1]     NONE
 - 189: [  2560,     1]     NONE
 - 190: [  2560,     1]     NONE
 - 191: [  2560,     1]     NONE
 - 192: [ 10240,     1]     NONE
 - 193: [  2560,     1]     NONE
 - 194: [  2560,     1]     NONE
 - 195: [  2560,     1]     NONE
 - 196: [  2560,  2560]     NONE
 - 197: [  2560,     1]     NONE
 - 198: [  2560,  2560]     NONE
 - 199: [  2560,     1]     NONE
 - 200: [ 10240,  2560]     NONE
 - 201: [  2560, 10240]     NONE
 - 202: [  2560,     1]     NONE
 - 203: [  2560,  2560]     NONE
 - 204: [  2560,  2560]     NONE
 - 205: [  2560,     1]     NONE
 - 206: [  2560,     1]     NONE
 - 207: [  2560,     1]     NONE
 - 208: [  2560,     1]     NONE
 - 209: [ 10240,     1]     NONE
 - 210: [  2560,     1]     NONE
 - 211: [  2560,     1]     NONE
 - 212: [  2560,     1]     NONE
 - 213: [  2560,  2560]     NONE
 - 214: [  2560,     1]     NONE
 - 215: [  2560,  2560]     NONE
 - 216: [  2560,     1]     NONE
 - 217: [ 10240,  2560]     NONE
 - 218: [  2560, 10240]     NONE
 - 219: [  2560,     1]     NONE
 - 220: [  2560,  2560]     NONE
 - 221: [  2560,  2560]     NONE
 - 222: [  2560,     1]     NONE
 - 223: [  2560,     1]     NONE
 - 224: [  2560,     1]     NONE
 - 225: [  2560,     1]     NONE
 - 226: [ 10240,     1]     NONE
 - 227: [  2560,     1]     NONE
 - 228: [  2560,     1]     NONE
 - 229: [  2560,     1]     NONE
 - 230: [  2560,  2560]     NONE
 - 231: [  2560,     1]     NONE
 - 232: [  2560,  2560]     NONE
 - 233: [  2560,     1]     NONE
 - 234: [ 10240,  2560]     NONE
 - 235: [  2560, 10240]     NONE
 - 236: [  2560,     1]     NONE
 - 237: [  2560,  2560]     NONE
 - 238: [  2560,  2560]     NONE
 - 239: [  2560,     1]     NONE
 - 240: [  2560,     1]     NONE
 - 241: [  2560,     1]     NONE
 - 242: [  2560,     1]     NONE
 - 243: [ 10240,     1]     NONE
 - 244: [  2560,     1]     NONE
 - 245: [  2560,     1]     NONE
 - 246: [  2560,     1]     NONE
 - 247: [  2560,  2560]     NONE
 - 248: [  2560,     1]     NONE
 - 249: [  2560,  2560]     NONE
 - 250: [  2560,     1]     NONE
 - 251: [ 10240,  2560]     NONE
 - 252: [  2560, 10240]     NONE
 - 253: [  2560,     1]     NONE
 - 254: [  2560,  2560]     NONE
 - 255: [  2560,  2560]     NONE
 - 256: [  2560,     1]     NONE
 - 257: [  2560,     1]     NONE
 - 258: [  2560,     1]     NONE
 - 259: [  2560,     1]     NONE
 - 260: [ 10240,     1]     NONE
 - 261: [  2560,     1]     NONE
 - 262: [  2560,     1]     NONE
 - 263: [  2560,     1]     NONE
 - 264: [  2560,  2560]     NONE
 - 265: [  2560,     1]     NONE
 - 266: [  2560,  2560]     NONE
 - 267: [  2560,     1]     NONE
 - 268: [ 10240,  2560]     NONE
 - 269: [  2560, 10240]     NONE
 - 270: [  2560,     1]     NONE
 - 271: [  2560,  2560]     NONE
 - 272: [  2560,  2560]     NONE
 - 273: [  2560,     1]     NONE
 - 274: [  2560,     1]     NONE
 - 275: [  2560,     1]     NONE
 - 276: [  2560,     1]     NONE
 - 277: [ 10240,     1]     NONE
 - 278: [  2560,     1]     NONE
 - 279: [  2560,     1]     NONE
 - 280: [  2560,     1]     NONE
 - 281: [  2560,  2560]     NONE
 - 282: [  2560,     1]     NONE
 - 283: [  2560,  2560]     NONE
 - 284: [  2560,     1]     NONE
 - 285: [ 10240,  2560]     NONE
 - 286: [  2560, 10240]     NONE
 - 287: [  2560,     1]     NONE
 - 288: [  2560,  2560]     NONE
 - 289: [  2560,  2560]     NONE
 - 290: [  2560,     1]     NONE
 - 291: [  2560,     1]     NONE
 - 292: [  2560,     1]     NONE
 - 293: [  2560,     1]     NONE
 - 294: [ 10240,     1]     NONE
 - 295: [  2560,     1]     NONE
 - 296: [  2560,     1]     NONE
 - 297: [  2560,     1]     NONE
 - 298: [  2560,  2560]     NONE
 - 299: [  2560,     1]     NONE
 - 300: [  2560,  2560]     NONE
 - 301: [  2560,     1]     NONE
 - 302: [ 10240,  2560]     NONE
 - 303: [  2560, 10240]     NONE
 - 304: [  2560,     1]     NONE
 - 305: [  2560,  2560]     NONE
 - 306: [  2560,  2560]     NONE
 - 307: [  2560,     1]     NONE
 - 308: [  2560,     1]     NONE
 - 309: [  2560,     1]     NONE
 - 310: [  2560,     1]     NONE
 - 311: [ 10240,     1]     NONE
 - 312: [  2560,     1]     NONE
 - 313: [  2560,     1]     NONE
 - 314: [  2560,     1]     NONE
 - 315: [  2560,  2560]     NONE
 - 316: [  2560,     1]     NONE
 - 317: [  2560,  2560]     NONE
 - 318: [  2560,     1]     NONE
 - 319: [ 10240,  2560]     NONE
 - 320: [  2560, 10240]     NONE
 - 321: [  2560,     1]     NONE
 - 322: [  2560,  2560]     NONE
 - 323: [  2560,  2560]     NONE
 - 324: [  2560,     1]     NONE
 - 325: [  2560,     1]     NONE
 - 326: [  2560,     1]     NONE
 - 327: [  2560,     1]     NONE
 - 328: [ 10240,     1]     NONE
 - 329: [  2560,     1]     NONE
 - 330: [  2560,     1]     NONE
 - 331: [  2560,     1]     NONE
 - 332: [  2560,  2560]     NONE
 - 333: [  2560,     1]     NONE
 - 334: [  2560,  2560]     NONE
 - 335: [  2560,     1]     NONE
 - 336: [ 10240,  2560]     NONE
 - 337: [  2560, 10240]     NONE
 - 338: [  2560,     1]     NONE
 - 339: [  2560,  2560]     NONE
 - 340: [  2560,  2560]     NONE
 - 341: [  2560,     1]     NONE
 - 342: [  2560,     1]     NONE
 - 343: [  2560,     1]     NONE
 - 344: [  2560,     1]     NONE
 - 345: [ 10240,     1]     NONE
 - 346: [  2560,     1]     NONE
 - 347: [  2560,     1]     NONE
 - 348: [  2560,     1]     NONE
 - 349: [  2560,  2560]     NONE
 - 350: [  2560,     1]     NONE
 - 351: [  2560,  2560]     NONE
 - 352: [  2560,     1]     NONE
 - 353: [ 10240,  2560]     NONE
 - 354: [  2560, 10240]     NONE
 - 355: [  2560,     1]     NONE
 - 356: [  2560,  2560]     NONE
 - 357: [  2560,  2560]     NONE
 - 358: [  2560,     1]     NONE
 - 359: [  2560,     1]     NONE
 - 360: [  2560,     1]     NONE
 - 361: [  2560,     1]     NONE
 - 362: [ 10240,     1]     NONE
 - 363: [  2560,     1]     NONE
 - 364: [  2560,     1]     NONE
 - 365: [  2560,     1]     NONE
 - 366: [  2560,  2560]     NONE
 - 367: [  2560,     1]     NONE
 - 368: [  2560,  2560]     NONE
 - 369: [  2560,     1]     NONE
 - 370: [ 10240,  2560]     NONE
 - 371: [  2560, 10240]     NONE
 - 372: [  2560,     1]     NONE
 - 373: [  2560,  2560]     NONE
 - 374: [  2560,  2560]     NONE
 - 375: [  2560,     1]     NONE
 - 376: [  2560,     1]     NONE
 - 377: [  2560,     1]     NONE
 - 378: [  2560,     1]     NONE
 - 379: [ 10240,     1]     NONE
 - 380: [  2560,     1]     NONE
 - 381: [  2560,     1]     NONE
 - 382: [  2560,     1]     NONE
 - 383: [  2560,  2560]     NONE
 - 384: [  2560,     1]     NONE
 - 385: [  2560,  2560]     NONE
 - 386: [  2560,     1]     NONE
 - 387: [ 10240,  2560]     NONE
 - 388: [  2560, 10240]     NONE
 - 389: [  2560,     1]     NONE
 - 390: [  2560,  2560]     NONE
 - 391: [  2560,  2560]     NONE
 - 392: [  2560,     1]     NONE
 - 393: [  2560,     1]     NONE
 - 394: [  2560,     1]     NONE
 - 395: [  2560,     1]     NONE
 - 396: [ 10240,     1]     NONE
 - 397: [  2560,     1]     NONE
 - 398: [  2560,     1]     NONE
 - 399: [  2560,     1]     NONE
 - 400: [  2560,  2560]     NONE
 - 401: [  2560,     1]     NONE
 - 402: [  2560,  2560]     NONE
 - 403: [  2560,     1]     NONE
 - 404: [ 10240,  2560]     NONE
 - 405: [  2560, 10240]     NONE
 - 406: [  2560,     1]     NONE
 - 407: [  2560,  2560]     NONE
 - 408: [  2560,  2560]     NONE
 - 409: [  2560,     1]     NONE
 - 410: [  2560,     1]     NONE
 - 411: [  2560,     1]     NONE
 - 412: [  2560,     1]     NONE
 - 413: [ 10240,     1]     NONE
 - 414: [  2560,     1]     NONE
 - 415: [  2560,     1]     NONE
 - 416: [  2560,     1]     NONE
 - 417: [  2560,  2560]     NONE
 - 418: [  2560,     1]     NONE
 - 419: [  2560,  2560]     NONE
 - 420: [  2560,     1]     NONE
 - 421: [ 10240,  2560]     NONE
 - 422: [  2560, 10240]     NONE
 - 423: [  2560,     1]     NONE
 - 424: [  2560,  2560]     NONE
 - 425: [  2560,  2560]     NONE
 - 426: [  2560,     1]     NONE
 - 427: [  2560,     1]     NONE
 - 428: [  2560,     1]     NONE
 - 429: [  2560,     1]     NONE
 - 430: [ 10240,     1]     NONE
 - 431: [  2560,     1]     NONE
 - 432: [  2560,     1]     NONE
 - 433: [  2560,     1]     NONE
 - 434: [  2560,  2560]     NONE
 - 435: [  2560,     1]     NONE
 - 436: [  2560,  2560]     NONE
 - 437: [  2560,     1]     NONE
 - 438: [ 10240,  2560]     NONE
 - 439: [  2560, 10240]     NONE
 - 440: [  2560,     1]     NONE
 - 441: [  2560,  2560]     NONE
 - 442: [  2560,  2560]     NONE
 - 443: [  2560,     1]     NONE
 - 444: [  2560,     1]     NONE
 - 445: [  2560,     1]     NONE
 - 446: [  2560,     1]     NONE
 - 447: [ 10240,     1]     NONE
 - 448: [  2560,     1]     NONE
 - 449: [  2560,     1]     NONE
 - 450: [  2560,     1]     NONE
 - 451: [  2560,  2560]     NONE
 - 452: [  2560,     1]     NONE
 - 453: [  2560,  2560]     NONE
 - 454: [  2560,     1]     NONE
 - 455: [ 10240,  2560]     NONE
 - 456: [  2560, 10240]     NONE
 - 457: [  2560,     1]     NONE
 - 458: [  2560,  2560]     NONE
 - 459: [  2560,  2560]     NONE
 - 460: [  2560,     1]     NONE
 - 461: [  2560,     1]     NONE
 - 462: [  2560,     1]     NONE
 - 463: [  2560,     1]     NONE
 - 464: [ 10240,     1]     NONE
 - 465: [  2560,     1]     NONE
 - 466: [  2560,     1]     NONE
 - 467: [  2560,     1]     NONE
 - 468: [  2560,  2560]     NONE
 - 469: [  2560,     1]     NONE
 - 470: [  2560,  2560]     NONE
 - 471: [  2560,     1]     NONE
 - 472: [ 10240,  2560]     NONE
 - 473: [  2560, 10240]     NONE
 - 474: [  2560,     1]     NONE
 - 475: [  2560,  2560]     NONE
 - 476: [  2560,  2560]     NONE
 - 477: [  2560,     1]     NONE
 - 478: [  2560,     1]     NONE
 - 479: [  2560,     1]     NONE
 - 480: [  2560,     1]     NONE
 - 481: [ 10240,     1]     NONE
 - 482: [  2560,     1]     NONE
 - 483: [  2560,     1]     NONE
 - 484: [  2560,     1]     NONE
 - 485: [  2560,  2560]     NONE
 - 486: [  2560,     1]     NONE
 - 487: [  2560,  2560]     NONE
 - 488: [  2560,     1]     NONE
 - 489: [ 10240,  2560]     NONE
 - 490: [  2560, 10240]     NONE
 - 491: [  2560,     1]     NONE
 - 492: [  2560,  2560]     NONE
 - 493: [  2560,  2560]     NONE
 - 494: [  2560,     1]     NONE
 - 495: [  2560,     1]     NONE
 - 496: [  2560,     1]     NONE
 - 497: [  2560,     1]     NONE
 - 498: [ 10240,     1]     NONE
 - 499: [  2560,     1]     NONE
 - 500: [  2560,     1]     NONE
 - 501: [  2560,     1]     NONE
 - 502: [  2560,  2560]     NONE
 - 503: [  2560,     1]     NONE
 - 504: [  2560,  2560]     NONE
 - 505: [  2560,     1]     NONE
 - 506: [ 10240,  2560]     NONE
 - 507: [  2560, 10240]     NONE
 - 508: [  2560,     1]     NONE
 - 509: [  2560,  2560]     NONE
 - 510: [  2560,  2560]     NONE
 - 511: [  2560,     1]     NONE
 - 512: [  2560,     1]     NONE
 - 513: [  2560,     1]     NONE
 - 514: [  2560,     1]     NONE
 - 515: [ 10240,     1]     NONE
 - 516: [  2560,     1]     NONE
 - 517: [  2560,     1]     NONE
 - 518: [  2560,     1]     NONE
 - 519: [  2560,  2560]     NONE
 - 520: [  2560,     1]     NONE
 - 521: [  2560,  2560]     NONE
 - 522: [  2560,     1]     NONE
 - 523: [ 10240,  2560]     NONE
 - 524: [  2560, 10240]     NONE
 - 525: [  2560,     1]     NONE
 - 526: [  2560,  2560]     NONE
 - 527: [  2560,  2560]     NONE
 - 528: [  2560,     1]     NONE
 - 529: [  2560,     1]     NONE
 - 530: [  2560,     1]     NONE
 - 531: [  2560,     1]     NONE
 - 532: [ 10240,     1]     NONE
 - 533: [  2560,     1]     NONE
 - 534: [  2560,     1]     NONE
 - 535: [  2560,     1]     NONE
 - 536: [  2560,  2560]     NONE
 - 537: [  2560,     1]     NONE
 - 538: [  2560, 102400]     NONE
 - 539: [  2560,     1]     NONE
 - 540: [ 10240,  2560]     NONE
 - 541: [  2560, 10240]     NONE
 - 542: [  2560,     1]     NONE
 - 543: [  2560,  2560]     NONE
 - 544: [  2560,  2560]     NONE
 - 545: [  2560,     1]     NONE
 - 546: [  2560,     1]     NONE
 - 547: [  2560,     1]     NONE
 - 548: [  2560,     1]     NONE
 - 549: [ 10240,     1]     NONE
 - 550: [  2560,     1]     NONE
 - 551: [  2560,     1]     NONE
perf_total_per_op_us[             ADD] =   0.321 ms
perf_total_per_op_us[             MUL] =   0.065 ms
perf_total_per_op_us[            NORM] =   0.065 ms
perf_total_per_op_us[         MUL_MAT] =   0.257 ms
perf_total_per_op_us[           SCALE] =   0.032 ms
perf_total_per_op_us[             CPY] =   0.096 ms
perf_total_per_op_us[         RESHAPE] =   0.096 ms
perf_total_per_op_us[            VIEW] =   0.128 ms
perf_total_per_op_us[         PERMUTE] =   0.064 ms
perf_total_per_op_us[       TRANSPOSE] =   0.032 ms
perf_total_per_op_us[        GET_ROWS] =   0.001 ms
perf_total_per_op_us[   DIAG_MASK_INF] =   0.032 ms
perf_total_per_op_us[        SOFT_MAX] =   0.032 ms
perf_total_per_op_us[            ROPE] =   0.064 ms
perf_total_per_op_us[           UNARY] =   0.032 ms
========================================
